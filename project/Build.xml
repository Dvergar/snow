<xml>

   <!-- 
      Build with:
         -Diphonesim              -> build i386 version
         -Diphoneos               -> build armv6
         -Diphoneos -DHXCPP_ARMV7 -> build armv7
         -Dandroid                -> build android armv5
         -Dandroid  -DHXCPP_ARMV7 -> build android armv7
         -Dandroid  -DHXCPP_X86   -> build android x86
         - no defines             -> build current OS
         -DHXCPP_M64              -> build current OS, 64 but version
         -Ddebug                  -> Used in combination with above for debug
   -->

   <!-- Require Android 2.3+ -->
   <set name="PLATFORM" value="android-9" if="android" />
   <set name="PLATFORM" value="android-14" if="HXCPP_X86" />
   <set name="HXCPP_CPP11" value="1" />
   <set name="debug" value="debug"  />

<!-- Build set up -->

   <include name="${HXCPP}/build-tool/BuildCommon.xml"/>

   <!-- Where to find static libraries/includes -->
   <set name="NME_DEV" value="${haxelib:nme-dev}" unless="NME_DEV" />
   <!-- where to build into -->
   <set name="LUMEN_ROOT" value="" />

   <set name="SRC_DIR" value="${LUMEN_ROOT}src" />
   <set name="INC_DIR" value="${LUMEN_ROOT}include" />
   <set name="LUMEN_INC_DIR" value="${LUMEN_ROOT}../include" />
   <set name="OUT_DIR" value="../ndll" />

   <set name="SLIBEXT" value=".lib" if="windows"/>
   <set name="SLIBEXT" value=".a" unless="windows"/>
   <set name="PRELIB" value="${NME_DEV}/lib/${BINDIR}/lib" />
   <set name="POSTLIB" value="${LIBEXTRA}${SLIBEXT}" />
   
   <set name="LIBNAME" value="lumen" />
   <set name="DEBUGEXTRA" value="-debug" if="lumen fulldebug" />

<!-- Build configs -->

   <!-- always using SDL2 for main platforms -->
   <set name="LUMEN_SDL2" value="1"/>
   <!-- always using OpenAL for main platforms -->
   <set name="LUMEN_OPENAL" value="1"/>
   <!-- always using stb_image for main platforms  -->
   <set name="LUMEN_STB_IMAGE" value="1"/>

   <!-- Do we need to implement curl in NME -->
   <set name="LUMEN_CURL" value="1" />

   <!-- And allow https ? -->
   <set name="LUMEN_CURL_SSL" value="1" />
   <set name="LUMEN_CURL_SSL_EXTRA" value="_ssl" if="LUMEN_CURL"/>

<!-- Files/Sources -->

   <files id="lumen">

      <compilerflag value="-I${LUMEN_INC_DIR}"/>
      <compilerflag value="-I${INC_DIR}"/>
      <compilerflag value="-DHX_LUMEN"  />

      <compilerflag value="-I${NME_DEV}/include" />
      <compilerflag value="-D_7ZIP_ST" unless="windows"/>
      <compilerflag value="-DGLEW_STATIC"/>
      
   <!-- Common sources -->

      <file name="src/hx_bindings.cpp" />
      <file name="src/common/ByteArray.cpp" />
      <file name="src/common/lumen_images.cpp" />
      <file name="src/common/lumen_timestamp.cpp" />

   <!-- Platform sources -->

      <file name="src/platform/windows/lumen_windows.cpp" if="windows"/>
      <file name="src/platform/mac/lumen_mac.mm" if="macos"/>
      <file name="src/platform/linux/lumen_linux.cpp" if="linux"/>
      <file name="src/platform/ios/lumen_ios.mm" if="iphone"/>
      <file name="src/platform/android/lumen_android.cpp" if="android"/>

      <!-- audio sources -->
      
      <file name="src/audio/lumen_audio_files.cpp" />

   <!-- Lib sources -->

         <!-- lzma -->
      <file name="${SRC_DIR}/libs/lzma/LzmaBinding.cpp" />
      <file name="${SRC_DIR}/libs/lzma/LzFind.c" />
      <file name="${SRC_DIR}/libs/lzma/LzmaDec.c" />
      <file name="${SRC_DIR}/libs/lzma/LzmaEnc.c" />
      <file name="${SRC_DIR}/libs/lzma/LzFindMt.c" if="windows" />
      <file name="${SRC_DIR}/libs/lzma/Threads.c" if="windows" />
      <file name="${SRC_DIR}/libs/lzma/Threads.c" if="windows" />

         <!-- glew -->
      <file name="${SRC_DIR}/libs/glew/glew.c" />


   <!-- Platform specific sources  -->

      <section if="windows">
         <!-- <file name="${SRC_DIR}/windows/GDIFont.cpp"/> -->
         <!-- <file name="${SRC_DIR}/windows/System.cpp" /> -->
      </section>

      <section if="linux">
         <compilerflag value="-Wno-conversion" if="linux"/>
         <!-- <file name="${SRC_DIR}/linux/NativeFont.cpp"/> -->
         <!-- <file name="${SRC_DIR}/linux/System.cpp"/> -->
      </section>

      <section if="macos">
         <!-- <file name="${SRC_DIR}/mac/NSFont.cpp"/> -->
         <!-- <file name="${SRC_DIR}/mac/MacBoot.m" /> -->
         <!-- <file name="${SRC_DIR}/mac/System.mm"/> -->
         <!-- <file name="${SRC_DIR}/cocoa/FileManager.mm"/> -->
      </section>

      <section if="iphone">
         <!-- <file name="${SRC_DIR}/iPhone/UIStageView.mm"/> -->
         <!-- <file name="${SRC_DIR}/iPhone/UIDeviceHardware.mm"/> -->
         <!-- <file name="${SRC_DIR}/iPhone/Sound.mm"/> -->
         <!-- <file name="${SRC_DIR}/iPhone/NativeFont.mm"/> -->
         <!-- <file name="${SRC_DIR}/iPhone/System.mm"/> -->
         <!-- <file name="${SRC_DIR}/cocoa/FileManager.mm"/> -->
      </section>

      <section if="android">
         <!-- <file name="${SRC_DIR}/android/AndroidCommon.cpp" />
         <file name="${SRC_DIR}/android/AndroidSound.cpp" unless="NME_OPENAL"/>
         <file name="${SRC_DIR}/android/AndroidFont.cpp"/>
         <file name="${SRC_DIR}/android/AndroidFrame.cpp"/>
         <file name="${SRC_DIR}/android/JNI.cpp"/>
         <file name="${SRC_DIR}/android/System.cpp"/> -->
      </section>

   <!-- Library specifics -->

      <section if="LUMEN_SDL2">

        <compilerflag value="-I${NME_DEV}/include/SDL2" />
        <compilerflag value="-DSDL_OGL" />
        <compilerflag value="-DLUMEN_SDL2" />

        <file name="${SRC_DIR}/lumen/sdl2/lumen_core_sdl2.cpp" />
        <file name="${SRC_DIR}/window/sdl2/lumen_window_sdl2.cpp"/>
        <file name="${SRC_DIR}/input/sdl2/lumen_input_sdl2.cpp"/>
        <file name="${SRC_DIR}/render/opengl/sdl2/lumen_opengl_sdl2.cpp" />

      </section>

      <section if="LUMEN_CURL">
         <compilerflag value="-DLUMEN_CURL_SSL" if="LUMEN_CURL_SSL"/>
      </section>

      <section if="LUMEN_OPENAL">
         <compilerflag value="-DAL_LIBTYPE_STATIC=1" if="windows || mac || linux" />
         <file name="${SRC_DIR}/audio/openal/lumen_audio_openal.cpp" />
         <!-- <file name="${SRC_DIR}/openal/OpenALSound.cpp" /> -->
         <!-- <file name="${SRC_DIR}/common/Audio.cpp" /> -->
      </section>

      <section if="LUMEN_STB_IMAGE">
         <file name="${SRC_DIR}/libs/stb_image/stb_image.c" />
      </section>

   </files>

<!-- Targets -->

   <target id="NDLL" output="${LIBPREFIX}${LIBNAME}${MSVC_LIB_VERSION}${DEBUGEXTRA}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">

      <outdir name="${OUT_DIR}/${BINDIR}" />

      <files id="lumen"/>

         <lib name="${PRELIB}freetype${POSTLIB}" />
         <lib name="${PRELIB}jpeg${POSTLIB}" />
         <lib name="${PRELIB}png${POSTLIB}" />         

         <section if="LUMEN_SDL2">
            <lib name="${PRELIB}SDL2${POSTLIB}" unless="iphone || android" />
            <lib name="${PRELIB}SDL2${POSTLIB}" if="linux"/>
         </section>

         <section if="LUMEN_OPENAL">
            <lib name="${PRELIB}openal${POSTLIB}" if="windows || mac || linux"/>
            <lib name="${PRELIB}vorbis${POSTLIB}" />
            <lib name="${PRELIB}ogg${POSTLIB}" />
         </section>
         
         <section>
            <!-- <section if="NME_SDL2" unless="LUMEN_OPENAL">
               <lib name="${PRELIB}vorbis${POSTLIB}" />
               <lib name="${PRELIB}ogg${POSTLIB}" />
               <lib name="${PRELIB}theora${POSTLIB}" />
            </section> -->

            <section if="LUMEN_CURL">
               <lib name="${PRELIB}curl${LUMEN_CURL_SSL_EXTRA}${POSTLIB}" />
            </section>

            <lib name="${PRELIB}z${POSTLIB}" unless="android"/>
         </section>


      <section unless="static_link">

         <ext value=".so" />
         <ext value=".ndll" if="windows || mac || linux" />

         <!-- <lib name="${PRELIB}libfreetype${LIBEXTRA}${SLIBEXT}" if="iphone"/> -->

         <section if="windows">
            <lib name="gdi32.lib" />
            <lib name="opengl32.lib" />
            <lib name="user32.lib" />
            <lib name="kernel32.lib" />
            <lib name="advapi32.lib" />
            <lib name="winmm.lib" />
            <lib name="imm32.lib"  />
            <lib name="ole32.lib" />
            <lib name="oleaut32.lib" />
            <lib name="version.lib" />
            <lib name="ws2_32.lib"  />
            <lib name="wldap32.lib" />
            <lib name="shell32.lib" />
            <lib name="comdlg32.lib" />
         </section>

         <section if="linux">
            <lib name="${HXCPP}/lib/${BINDIR}/liblinuxcompat.a" />
            <lib name="-lpthread" />
            <lib name="-lrt" />
            <lib name="lib/${BINDIR}/libGL.so" />
            <!-- <lib name="-lGL" />/ -->
         </section>

         <section if="macos">
            <vflag name="-framework" value="IOKit" />
            <vflag name="-framework" value="Foundation" />
            <vflag name="-framework" value="CoreAudio" />
            <vflag name="-framework" value="AudioToolbox" />
            <vflag name="-framework" value="AudioUnit" />
            <vflag name="-framework" value="ForceFeedback" />
            <vflag name="-framework" value="Carbon" />
            <vflag name="-framework" value="Cocoa" />
            <vflag name="-framework" value="OpenGL" />
            <vflag name="-framework" value="AppKit" />
            <vflag name="-framework" value="OpenAL"/>
         </section>

         <section if="android">
            <lib name="-ldl" />
            <lib name="-landroid" />
            <lib name="-lGLESv2" />
            <lib name="-lz" />

            <lib name="-L../ndll/Android" if="LUMEN_OPENAL"/>
            <lib name="-lopenal" if="LUMEN_OPENAL"/>
         </section>
      
      </section>

   </target>

   <target id="default">
     <target id="NDLL"/>
   </target>

</xml>
