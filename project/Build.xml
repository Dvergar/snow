<xml>

   <!--
      Build with:
         -Diphonesim              -> build i386 version
         -Diphoneos               -> build armv6
         -Diphoneos -DHXCPP_ARMV7 -> build armv7
         -Dandroid                -> build android armv5
         -Dandroid  -DHXCPP_ARMV7 -> build android armv7
         -Dandroid  -DHXCPP_X86   -> build android x86
         - no defines             -> build current OS
         -DHXCPP_M64              -> build current OS, 64 but version
         -Ddebug                  -> Used in combination with above for debug
   -->

<!-- Configure HXCPP -->

      <!-- Require Android 2.3+ -->
   <set name="PLATFORM" value="android-10" if="android" />
   <set name="PLATFORM" value="android-14" if="HXCPP_X86" />
   <set name="HXCPP_CPP11" value="1" />

<!-- Build set up -->

      <!-- included to import existing defines and built in defined values -->
   <include name="${HXCPP}/build-tool/BuildCommon.xml"/>
      <!-- consistency, ios is a better define than iphone and should always be used in lumen instead -->
   <set name="ios" value="1" if="iphone" />

      <!-- where to build from -->
   <set name="LUMEN_ROOT" value="" />
      <!-- paths -->
   <set name="SRC_DIR" value="${LUMEN_ROOT}src" />
   <set name="INC_DIR" value="${LUMEN_ROOT}include" />
   <set name="LUMEN_INC_DIR" value="${LUMEN_ROOT}../include" />
   <set name="OUT_DIR" value="../ndll" />
      <!-- lib values -->
   <set name="LIBNAME" value="lumen" />
   <set name="SLIBEXT" value=".lib" if="windows"/>
   <set name="SLIBEXT" value=".a" unless="windows"/>
   <set name="SHLIBEXT" value=".dll" if="windows"/>
   <set name="SHLIBEXT" value=".so" unless="windows"/>
   <set name="SHLIBEXT" value=".dylib" if="mac || ios"/>
   <set name="DEBUGEXTRA" value="" />

   <set name="PRELIB" value="lib/${BINDIR}/${LIBPREFIX}" />
   <set name="POSTLIB" value="${LIBEXTRA}${SLIBEXT}" />
   <set name="POSTSHAREDLIB" value="${LIBEXTRA}${SHLIBEXT}" />

<!-- Build configs -->

   <!-- Ideally, I want to enclose these in an "unless" section as well, so you can use command line/builds to disable them -->

   <set name="LUMEN_CORE_LOOP" value="1"              unless="ios"/>
   <!-- always using SDL2 for main platforms -->
   <set name="LUMEN_LIB_SDL" value="1"/>
   <!-- enable this to build sdl as a .a file, and then link it (instead of embedded in the core code) -->
   <!-- <set name="LUMEN_LIB_SDL_STATIC_EXTERNAL" value="1" /> -->
   <!-- enable this to build sdl as a .so/.dll file, and then link it (instead of embedded in the core code) -->
   <!-- <set name="LUMEN_LIB_SDL_SHARED_EXTERNAL" value="1" /> -->

   <!-- sometimes glew needs to be disabled because it can make null function pointers -->
   <set name="LUMEN_LIB_GLEW" value="1"               unless="android || ios"/>
   <!-- always using OpenAL for main platforms by default -->
   <set name="LUMEN_LIB_OPENAL" value="1"/>
   <!-- always using stb_image for main platforms by default -->
   <set name="LUMEN_LIB_STB_IMAGE" value="1"/>
   <!-- always including lzma for main platforms by default -->
   <set name="LUMEN_LIB_LZMA" value="1" />
   <!-- always including zlib for main platforms by default -->
   <set name="LUMEN_LIB_ZLIB" value="1" />
   <!-- always including media libs for main platforms by default -->
   <set name="LUMEN_LIB_MEDIA" value="1" />
   <!-- always including curl for main platforms by default -->
   <set name="LUMEN_LIB_CURL" value="1" />
   <!-- default to using SSL, but can be toggled -->
   <set name="LUMEN_LIB_CURL_SSL" value="1" />

<!-- Files/Sources -->

      <!-- include statically linked third party libs -->
   <include name="build-include-libs.xml" />
   <include name="build-include-sdl2.xml" />

      <!-- lumen sources -->
   <files id="lumen">

         <!-- include paths -->
      <compilerflag value="-I${LUMEN_INC_DIR}"/>
      <compilerflag value="-I${INC_DIR}"/>

         <!-- c++ defines -->
      <compilerflag value="-DHX_LUMEN"  />
      <compilerflag value="-DLUMEN_CORE_LOOP"         if="LUMEN_CORE_LOOP"/>
      <compilerflag value="-DGL_GLEXT_PROTOTYPES"     if="android"/>
      <compilerflag value="-DLUMEN_GLES"              if="android || ios"/>
      <compilerflag value="-D__IPHONEOS__"            if="ios"/>
      <compilerflag value="-Wno-conversion"           if="linux"/>

         <!-- lib specific flags -->
      <section if="LUMEN_LIB_LZMA">
         <!-- :todo: investigate why it's flagged as single threaded on non-windows -->
         <compilerflag value="-D_7ZIP_ST"             unless="windows"/>
      </section>

      <section if="LUMEN_LIB_GLEW">
         <compilerflag value="-DLUMEN_LIB_GLEW"/>
         <compilerflag value="-DGLEW_STATIC"/>
      </section>

   <!-- Common sources -->

      <file name="${SRC_DIR}/hx_bindings.cpp" />
      <file name="${SRC_DIR}/common/ByteArray.cpp" />
      <file name="${SRC_DIR}/common/lumen_images.cpp" />
      <file name="${SRC_DIR}/common/lumen_timestamp.cpp" />
      <file name="${SRC_DIR}/render/opengl/lumen_render_opengl.cpp" />
      <file name="${SRC_DIR}/audio/lumen_audio_files.cpp" />

   <!-- Platform specific sources -->

      <section if="mac">
         <file name="${SRC_DIR}/platform/mac/lumen_mac.mm"/>
      </section>

      <section if="linux">
         <file name="${SRC_DIR}/platform/linux/lumen_linux.cpp"/>
      </section>

      <section if="windows">
         <file name="${SRC_DIR}/platform/windows/lumen_windows.cpp"/>
      </section>

      <section if="android">
         <file name="${SRC_DIR}/platform/android/lumen_android.cpp"/>
      </section>

      <section if="ios">
         <file name="${SRC_DIR}/platform/ios/lumen_ios.mm"/>
      </section>

   <!-- Library specifics -->

      <section if="LUMEN_LIB_SDL">

        <compilerflag value="-DLUMEN_LIB_SDL" />
        <compilerflag value="-DHAVE_LIBC" />

            <!-- per platform configs preconfigured -->
        <compilerflag value="-I${INC_DIR}/libs/sdl/"/>
        <compilerflag value="-I${INC_DIR}/libs/sdl/configs/default/" unless="windows || mac || linux"/>
        <compilerflag value="-I${INC_DIR}/libs/sdl/configs/linux/" if="linux"/>
        <compilerflag value="-I${INC_DIR}/libs/sdl/configs/windows/" if="windows"/>
        <compilerflag value="-I${INC_DIR}/libs/sdl/configs/mac/" if="mac"/>

        <file name="${SRC_DIR}/lumen/sdl2/lumen_core_sdl2.cpp" />
        <file name="${SRC_DIR}/lumen/sdl2/lumen_io_sdl2.cpp" />
        <file name="${SRC_DIR}/window/sdl2/lumen_window_sdl2.cpp"/>
        <file name="${SRC_DIR}/input/sdl2/lumen_input_sdl2.cpp"/>

      </section>


      <section if="LUMEN_LIB_CURL">

         <compilerflag value="-DLUMEN_LIB_CURL_SSL" if="LUMEN_LIB_CURL_SSL"/>

      </section>


      <section if="LUMEN_LIB_OPENAL">

         <compilerflag value="-DAL_LIBTYPE_STATIC=1" />

         <file name="${SRC_DIR}/audio/openal/lumen_audio_openal.cpp" />

      </section>

   </files>

<!-- Targets -->

   <target id="lumen" output="${LIBPREFIX}${LIBNAME}${MSVC_LIB_VERSION}${DEBUGEXTRA}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">

      <outdir name="${OUT_DIR}/${BINDIR}" />

      <files id="libs-glew"         if="LUMEN_LIB_GLEW"/>
      <files id="libs-stb_image"    if="LUMEN_LIB_STB_IMAGE"/>
      <files id="libs-lzma"         if="LUMEN_LIB_LZMA"/>
      <files id="libs-zlib"         if="LUMEN_LIB_ZLIB"/>
      <files id="libs-media"        if="LUMEN_LIB_MEDIA"/>
      <files id="libs-curl"         if="LUMEN_LIB_CURL"/>
         <!-- mac and iOS have OpenAL.framework, and rather rely on system version than statically linked one -->
      <files id="libs-openal"       if="LUMEN_LIB_OPENAL" unless="mac || iphone"/>
         <!-- by using the flags you can build a static, dynamic or embedded SDL (default is embedded) -->
      <files id="libs-sdl"          unless="LUMEN_LIB_SDL_STATIC_EXTERNAL || LUMEN_LIB_SDL_SHARED_EXTERNAL"/>

      <files id="lumen"/>

         <section if="LUMEN_LIB_SDL">
            <lib name="${PRELIB}SDL2${POSTLIB}"       if="LUMEN_LIB_SDL_STATIC_EXTERNAL"/>
            <lib name="${PRELIB}SDL2${POSTSHAREDLIB}" if="LUMEN_LIB_SDL_SHARED_EXTERNAL"/>
         </section>

      <section unless="static_link">

         <ext value=".so" />
         <ext value=".ndll" if="windows || mac || linux" />

         <section if="windows">
            <lib name="gdi32.lib" />
            <lib name="opengl32.lib" />
            <lib name="user32.lib" />
            <lib name="kernel32.lib" />
            <lib name="advapi32.lib" />
            <lib name="winmm.lib" />
            <lib name="imm32.lib"  />
            <lib name="ole32.lib" />
            <lib name="oleaut32.lib" />
            <lib name="version.lib" />
            <lib name="ws2_32.lib"  />
            <lib name="wldap32.lib" />
            <lib name="shell32.lib" />
            <lib name="comdlg32.lib" />
         </section> <!-- windows -->

         <section if="linux">
            <lib name="${HXCPP}/lib/${BINDIR}/liblinuxcompat.a" />
            <lib name="-lpthread" />
            <lib name="-lrt" />
            <lib name="lib/${BINDIR}/libGL.so" />
            <!-- <lib name="-lGL" />/ -->
         </section> <!-- linux -->

         <section if="mac">
            <vflag name="-l" value="iconv"/>
            <vflag name="-framework" value="IOKit" />
            <vflag name="-framework" value="Foundation" />
            <vflag name="-framework" value="CoreAudio" />
            <vflag name="-framework" value="Cocoa" />
            <vflag name="-framework" value="OpenGL" />
            <vflag name="-framework" value="AudioToolbox" />
            <vflag name="-framework" value="AudioUnit" />
            <vflag name="-framework" value="ForceFeedback" />
            <vflag name="-framework" value="Carbon" />
            <vflag name="-framework" value="AppKit" />
            <vflag name="-framework" value="OpenAL"/>
         </section> <!-- mac -->

         <section if="ios">

         </section>

         <section if="android">
            <lib name="-Wl,--undefined=Java_org_libsdl_app_SDLActivity_nativeInit" if="LUMEN_LIB_SDL"/>
            <lib name="-ldl" />
            <lib name="-llog" />
            <lib name="-landroid" />
            <lib name="-lEGL" />
            <lib name="-lGLESv2" />
            <lib name="-lGLESv1_CM" />
            <lib name="-lOpenSLES" />
            <!-- <lib name="-L../ndll/Android" if="LUMEN_LIB_OPENAL"/> -->
            <!-- <lib name="-lopenal" if="LUMEN_LIB_OPENAL"/> -->
         </section> <!-- android -->

      </section> <!-- unless static_link -->

   </target>

   <target id="default">

         <!-- if we have sdl set to build as static but not embedded, build it -->
      <target id="libs-sdl" if="LUMEN_LIB_SDL_STATIC_EXTERNAL"/>
         <!-- if we have sdl set to build as shared, build it -->
      <target id="libs-sdl-shared" if="LUMEN_LIB_SDL_SHARED_EXTERNAL"/>
         <!--  -->
      <target id="lumen" unless="no_lumen"/>

   </target>

</xml>
