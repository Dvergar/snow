{
  "source": "lumen.io.IOFile",
  "doc": "This class is a low level cross platform file access helper, that handles in bundle assets etc. \n    If you want a file, use `Assets` instead, unless really required.",
  "links": [],
  "toplinks": [],
  "sections": [
    {
      "name": "Members",
      "link": "#Members",
      "values": [
        {
          "name": "handle",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "handle : Dynamic",
          "type": "Dynamic",
          "doc": "The internal native file handle"
        },
        {
          "name": "lumen_iosrc_file_tell",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_iosrc_file_tell : Dynamic->Dynamic",
          "type": "Dynamic->Dynamic",
          "doc": ""
        },
        {
          "name": "haxe_doc",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": false,
          "signature": "haxe_doc : Dynamic",
          "type": "Dynamic",
          "doc": ""
        },
        {
          "name": "lumen_iosrc_file_read",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_iosrc_file_read : Dynamic->lumen.utils.ByteArray->Int->Int->Dynamic",
          "type": "Dynamic->lumen.utils.ByteArray->Int->Int->Dynamic",
          "doc": ""
        },
        {
          "name": "lumen_iosrc_file_close",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_iosrc_file_close : Dynamic->Dynamic",
          "type": "Dynamic->Dynamic",
          "doc": ""
        },
        {
          "name": "lumen_iosrc_file_write",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_iosrc_file_write : Dynamic->lumen.utils.ByteArray->Int->Int->Dynamic",
          "type": "Dynamic->lumen.utils.ByteArray->Int->Int->Dynamic",
          "doc": ""
        },
        {
          "name": "lumen_iosrc_file_seek",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_iosrc_file_seek : Dynamic->Int->Int->Dynamic",
          "type": "Dynamic->Int->Int->Dynamic",
          "doc": ""
        }
      ]
    },
    {
      "name": "StaticMethods",
      "link": "#StaticMethods",
      "values": []
    },
    {
      "name": "Methods",
      "link": "#Methods",
      "values": [
        {
          "name": "new",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "new(_handle:Dynamic) ",
          "return": "",
          "args": [
            {
              "name": "_handle",
              "type": "Dynamic",
              "value": "null"
            }
          ]
        },
        {
          "name": "write",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Write `num` of items of `size` in bytes, from `src` into this file. Same signature/returns as `fwrite`",
          "signature": "write(src:lumen.utils.ByteArray, size:Int, num:Int) : Dynamic",
          "return": ": Dynamic",
          "args": [
            {
              "name": "src",
              "type": "lumen.utils.ByteArray",
              "value": "null"
            },
            {
              "name": "size",
              "type": "Int",
              "value": "null"
            },
            {
              "name": "num",
              "type": "Int",
              "value": "null"
            }
          ]
        },
        {
          "name": "read",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Read a `maxnum` of items of `size` in bytes, into `dest`. Same signature/returns as `fread`",
          "signature": "read(dest:lumen.utils.ByteArray, size:Int, maxnum:Int) : Dynamic",
          "return": ": Dynamic",
          "args": [
            {
              "name": "dest",
              "type": "lumen.utils.ByteArray",
              "value": "null"
            },
            {
              "name": "size",
              "type": "Int",
              "value": "null"
            },
            {
              "name": "maxnum",
              "type": "Int",
              "value": "null"
            }
          ]
        },
        {
          "name": "close",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Close the file",
          "signature": "close() : Dynamic",
          "return": ": Dynamic",
          "args": []
        },
        {
          "name": "seek",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Seek `offset` from `whence`, where whence is an int matching `set=0`, `cur=1`, `end=2`. Same signature/returns as `fseek`",
          "signature": "seek(offset:Int, whence:Int) : Dynamic",
          "return": ": Dynamic",
          "args": [
            {
              "name": "offset",
              "type": "Int",
              "value": "null"
            },
            {
              "name": "whence",
              "type": "Int",
              "value": "null"
            }
          ]
        },
        {
          "name": "tell",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Tell the current position in the file, in bytes",
          "signature": "tell() : Dynamic",
          "return": ": Dynamic",
          "args": []
        }
      ]
    }
  ]
}