{
  "source": "lumen.utils.UInt8Array",
  "doc": "",
  "links": [],
  "toplinks": [],
  "sections": [
    {
      "name": "Extends",
      "link": "#Extends",
      "values": [
        {
          "name": "lumen.utils.ArrayBufferView"
        }
      ]
    },
    {
      "name": "StaticMethods",
      "link": "#StaticMethods",
      "values": []
    },
    {
      "name": "Methods",
      "link": "#Methods",
      "values": [
        {
          "name": "set",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "set(bufferOrArray:Dynamic, ?offset:Int) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "bufferOrArray",
              "type": "Dynamic"
            },
            {
              "name": "?offset",
              "type": "Int"
            }
          ]
        },
        {
          "name": "subarray",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "subarray(start:Int, ?end:Int) : lumen.utils.UInt8Array",
          "return": ": lumen.utils.UInt8Array",
          "args": [
            {
              "name": "start",
              "type": "Int"
            },
            {
              "name": "?end",
              "type": "Int"
            }
          ]
        },
        {
          "name": "new",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "new(bufferOrArray:Dynamic, ?start:Int, ?length:Int) ",
          "return": "",
          "args": [
            {
              "name": "bufferOrArray",
              "type": "Dynamic"
            },
            {
              "name": "?start",
              "type": "Int"
            },
            {
              "name": "?length",
              "type": "Int"
            }
          ]
        }
      ]
    }
  ]
}