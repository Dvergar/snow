{
  "source": "lumen.utils.native.ByteArray",
  "doc": "",
  "links": [],
  "toplinks": [],
  "sections": [
    {
      "name": "Extends",
      "link": "#Extends",
      "values": [
        {
          "name": "haxe.io.Bytes"
        }
      ]
    },
    {
      "name": "Implements",
      "link": "#Implements",
      "values": [
        {
          "name": "lumen.utils.IMemoryRange"
        },
        {
          "name": "lumen.utils.IDataInput"
        }
      ]
    },
    {
      "name": "Members",
      "link": "#Members",
      "values": [
        {
          "name": "position",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "position : Int",
          "type": "Int",
          "doc": ""
        },
        {
          "name": "_float_of_bytes",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "_float_of_bytes : Dynamic",
          "type": "Dynamic",
          "doc": "@private"
        },
        {
          "name": "lumen_byte_array_read_file",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_byte_array_read_file : Dynamic",
          "type": "Dynamic",
          "doc": ""
        },
        {
          "name": "lumen_lzma_encode",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_lzma_encode : Dynamic",
          "type": "Dynamic",
          "doc": ""
        },
        {
          "name": "bigEndian",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "bigEndian : Bool",
          "type": "Bool",
          "doc": ""
        },
        {
          "name": "_double_of_bytes",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "_double_of_bytes : Dynamic",
          "type": "Dynamic",
          "doc": "@private"
        },
        {
          "name": "lumen_lzma_decode",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_lzma_decode : Dynamic",
          "type": "Dynamic",
          "doc": ""
        },
        {
          "name": "_float_bytes",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "_float_bytes : Dynamic",
          "type": "Dynamic",
          "doc": "@private"
        },
        {
          "name": "lumen_byte_array_overwrite_file",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_byte_array_overwrite_file : Dynamic",
          "type": "Dynamic",
          "doc": ""
        },
        {
          "name": "_double_bytes",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "_double_bytes : Dynamic",
          "type": "Dynamic",
          "doc": "@private"
        }
      ]
    },
    {
      "name": "Properties",
      "link": "#Properties",
      "values": [
        {
          "name": "bytesAvailable",
          "meta": [],
          "get": true,
          "set": false,
          "signature": "bytesAvailable : Int",
          "doc": "",
          "type": "Int",
          "type_desc": "(read only)"
        },
        {
          "name": "endian",
          "meta": [],
          "get": true,
          "set": true,
          "signature": "endian : String",
          "doc": "",
          "type": "String",
          "type_desc": "read/write"
        },
        {
          "name": "byteLength",
          "meta": [],
          "get": true,
          "set": false,
          "signature": "byteLength : Int",
          "doc": "",
          "type": "Int",
          "type_desc": "(read only)"
        }
      ]
    },
    {
      "name": "StaticMethods",
      "link": "#StaticMethods",
      "values": [
        {
          "name": "fromBytes",
          "meta": [],
          "ispublic": true,
          "isstatic": true,
          "isinline": false,
          "doc": "",
          "signature": "fromBytes(inBytes:haxe.io.Bytes) : lumen.utils.native.ByteArray",
          "return": ": lumen.utils.native.ByteArray",
          "args": [
            {
              "name": "inBytes",
              "type": "haxe.io.Bytes"
            }
          ]
        },
        {
          "name": "readFile",
          "meta": [],
          "ispublic": true,
          "isstatic": true,
          "isinline": false,
          "doc": "",
          "signature": "readFile(inString:String) : lumen.utils.native.ByteArray",
          "return": ": lumen.utils.native.ByteArray",
          "args": [
            {
              "name": "inString",
              "type": "String"
            }
          ]
        }
      ]
    },
    {
      "name": "Methods",
      "link": "#Methods",
      "values": [
        {
          "name": "ensureElem",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "@private",
          "signature": "ensureElem(inSize:Int, inUpdateLenght:Bool) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "inSize",
              "type": "Int"
            },
            {
              "name": "inUpdateLenght",
              "type": "Bool"
            }
          ]
        },
        {
          "name": "writeFile",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeFile(inString:String) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "inString",
              "type": "String"
            }
          ]
        },
        {
          "name": "compress",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "compress(?algorithm:lumen.utils.compat.CompressionAlgorithm) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "?algorithm",
              "type": "lumen.utils.compat.CompressionAlgorithm"
            }
          ]
        },
        {
          "name": "readUnsignedInt",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "readUnsignedInt() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "writeBytes",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeBytes(bytes:haxe.io.Bytes, ?inOffset:Int, ?inLength:Int) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "bytes",
              "type": "haxe.io.Bytes"
            },
            {
              "name": "?inOffset",
              "type": "Int"
            },
            {
              "name": "?inLength",
              "type": "Int"
            }
          ]
        },
        {
          "name": "set_endian",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "set_endian(s:String) : String",
          "return": ": String",
          "args": [
            {
              "name": "s",
              "type": "String"
            }
          ]
        },
        {
          "name": "readShort",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "readShort() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "readDouble",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "readDouble() : Float",
          "return": ": Float",
          "args": []
        },
        {
          "name": "getLength",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "getLength() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "writeDouble",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeDouble(x:Float) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "x",
              "type": "Float"
            }
          ]
        },
        {
          "name": "new",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "new(?inSize:Int) ",
          "return": "",
          "args": [
            {
              "name": "?inSize",
              "type": "Int"
            }
          ]
        },
        {
          "name": "inflate",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "inflate() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "readInt",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "readInt() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "readUTF",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "readUTF() : String",
          "return": ": String",
          "args": []
        },
        {
          "name": "writeUnsignedInt",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeUnsignedInt(value:Int) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "value",
              "type": "Int"
            }
          ]
        },
        {
          "name": "writeUTF",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeUTF(s:String) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "s",
              "type": "String"
            }
          ]
        },
        {
          "name": "writeFloat",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeFloat(x:Float) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "x",
              "type": "Float"
            }
          ]
        },
        {
          "name": "readFloat",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "readFloat() : Float",
          "return": ": Float",
          "args": []
        },
        {
          "name": "asString",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "asString() : String",
          "return": ": String",
          "args": []
        },
        {
          "name": "get_byteLength",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_byteLength() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "getStart",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "getStart() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "get_endian",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_endian() : String",
          "return": ": String",
          "args": []
        },
        {
          "name": "deflate",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "deflate() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "readUnsignedShort",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "readUnsignedShort() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "get_bytesAvailable",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_bytesAvailable() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "writeInt",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeInt(value:Int) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "value",
              "type": "Int"
            }
          ]
        },
        {
          "name": "writeBoolean",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeBoolean(value:Bool) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "value",
              "type": "Bool"
            }
          ]
        },
        {
          "name": "writeUTFBytes",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeUTFBytes(s:String) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "s",
              "type": "String"
            }
          ]
        },
        {
          "name": "getByteBuffer",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "getByteBuffer() : lumen.utils.native.ByteArray",
          "return": ": lumen.utils.native.ByteArray",
          "args": []
        },
        {
          "name": "readUTFBytes",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "readUTFBytes(inLen:Int) : String",
          "return": ": String",
          "args": [
            {
              "name": "inLen",
              "type": "Int"
            }
          ]
        },
        {
          "name": "clear",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "clear() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "setLength",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "setLength(inLength:Int) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "inLength",
              "type": "Int"
            }
          ]
        },
        {
          "name": "ThrowEOFi",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "@private",
          "signature": "ThrowEOFi() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "writeShort",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "writeShort(value:Int) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "value",
              "type": "Int"
            }
          ]
        },
        {
          "name": "checkData",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "checkData(inLength:Int) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "inLength",
              "type": "Int"
            }
          ]
        },
        {
          "name": "slice",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "slice(inBegin:Int, ?inEnd:Int) : lumen.utils.native.ByteArray",
          "return": ": lumen.utils.native.ByteArray",
          "args": [
            {
              "name": "inBegin",
              "type": "Int"
            },
            {
              "name": "?inEnd",
              "type": "Int"
            }
          ]
        },
        {
          "name": "readBytes",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "readBytes(outData:lumen.utils.native.ByteArray, ?inOffset:Int, ?inLen:Int) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "outData",
              "type": "lumen.utils.native.ByteArray"
            },
            {
              "name": "?inOffset",
              "type": "Int"
            },
            {
              "name": "?inLen",
              "type": "Int"
            }
          ]
        },
        {
          "name": "uncompress",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "uncompress(?algorithm:lumen.utils.compat.CompressionAlgorithm) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "?algorithm",
              "type": "lumen.utils.compat.CompressionAlgorithm"
            }
          ]
        }
      ]
    }
  ]
}