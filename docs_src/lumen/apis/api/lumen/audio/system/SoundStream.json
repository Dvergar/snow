{
  "source": "lumen.audio.system.SoundStream",
  "doc": "",
  "links": [],
  "toplinks": [],
  "sections": [
    {
      "name": "Extends",
      "link": "#Extends",
      "values": [
        {
          "name": "lumen.audio.system.Sound"
        }
      ]
    },
    {
      "name": "Members",
      "link": "#Members",
      "values": [
        {
          "name": "buffer_count",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "buffer_count : Int",
          "type": "Int",
          "doc": "The number of buffers to use in the queue for streaming. Default is `4` `todo` optionize"
        },
        {
          "name": "data_seek",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "data_seek : Int->Bool",
          "type": "Int->Bool",
          "doc": "The seek function, assign a function here if you want to stream data to the source manually, like generative sound."
        },
        {
          "name": "buffer_length",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "buffer_length : Int",
          "type": "Int",
          "doc": "The length of bytes for a single buffer to queue up to stream. Default is `176400`, about 1 second in 16 bit mono. `todo` optionize"
        },
        {
          "name": "data_get",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "data_get : Int->Int->lumen.types.AudioDataBlob",
          "type": "Int->Int->lumen.types.AudioDataBlob",
          "doc": "The get function, assign a function here if you want to stream data to the source manually, like generative sound."
        }
      ]
    },
    {
      "name": "StaticMethods",
      "link": "#StaticMethods",
      "values": []
    },
    {
      "name": "Methods",
      "link": "#Methods",
      "values": [
        {
          "name": "default_data_get",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Default data get implementation uses `assets.audio_load_portion`",
          "signature": "default_data_get(_start:Int, _length:Int) : lumen.types.AudioDataBlob",
          "return": ": lumen.types.AudioDataBlob",
          "args": [
            {
              "name": "_start",
              "type": "Int",
              "value": "null"
            },
            {
              "name": "_length",
              "type": "Int",
              "value": "null"
            }
          ]
        },
        {
          "name": "new",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "new(_manager:lumen.audio.Audio, _name:String, _audio_info:lumen.types.AudioInfo) ",
          "return": "",
          "args": [
            {
              "name": "_manager",
              "type": "lumen.audio.Audio",
              "value": "null"
            },
            {
              "name": "_name",
              "type": "String",
              "value": "null"
            },
            {
              "name": "_audio_info",
              "type": "lumen.types.AudioInfo",
              "value": "null"
            }
          ]
        },
        {
          "name": "default_data_seek",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Default data seek implementation uses `assets.audio_seek_source`",
          "signature": "default_data_seek(_to:Int) : Bool",
          "return": ": Bool",
          "args": [
            {
              "name": "_to",
              "type": "Int",
              "value": "null"
            }
          ]
        }
      ]
    }
  ]
}