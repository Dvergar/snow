{
  "source": "lumen.audio.system.Sound",
  "doc": "",
  "links": [],
  "toplinks": [],
  "sections": [
    {
      "name": "Members",
      "link": "#Members",
      "values": [
        {
          "name": "name",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "name : String",
          "type": "String",
          "doc": "The name of this sound"
        },
        {
          "name": "playing",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "playing : Bool",
          "type": "Bool",
          "doc": "If the sound is playing"
        },
        {
          "name": "is_stream",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "is_stream : Bool",
          "type": "Bool",
          "doc": "If the sound is a stream source"
        },
        {
          "name": "paused",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "paused : Bool",
          "type": "Bool",
          "doc": "If the sound is paused"
        },
        {
          "name": "manager",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "manager : lumen.audio.Audio",
          "type": "lumen.audio.Audio",
          "doc": "The `Audio` system handling this sound"
        },
        {
          "name": "info",
          "meta": [],
          "ispublic": true,
          "isinline": false,
          "isstatic": false,
          "signature": "info : lumen.types.AudioInfo",
          "type": "lumen.types.AudioInfo",
          "doc": "The `AudioInfo` this sound is created from"
        }
      ]
    },
    {
      "name": "Properties",
      "link": "#Properties",
      "values": [
        {
          "name": "pitch",
          "meta": [
            {
              "name": ":isVar",
              "value": ""
            }
          ],
          "get": true,
          "set": true,
          "signature": "pitch : Float",
          "doc": "The pitch of this sound",
          "type": "Float",
          "type_desc": "read/write"
        },
        {
          "name": "position",
          "meta": [
            {
              "name": ":isVar",
              "value": ""
            }
          ],
          "get": true,
          "set": true,
          "signature": "position : Int",
          "doc": "The current playback position of this sound in `bytes`",
          "type": "Int",
          "type_desc": "read/write"
        },
        {
          "name": "volume",
          "meta": [
            {
              "name": ":isVar",
              "value": ""
            }
          ],
          "get": true,
          "set": true,
          "signature": "volume : Float",
          "doc": "The volume of this sound",
          "type": "Float",
          "type_desc": "read/write"
        },
        {
          "name": "looping",
          "meta": [
            {
              "name": ":isVar",
              "value": ""
            }
          ],
          "get": true,
          "set": true,
          "signature": "looping : Bool",
          "doc": "If the sound is looping or not",
          "type": "Bool",
          "type_desc": "read/write"
        },
        {
          "name": "time",
          "meta": [
            {
              "name": ":isVar",
              "value": ""
            }
          ],
          "get": true,
          "set": true,
          "signature": "time : Float",
          "doc": "The current playback time of this sound in `seconds`",
          "type": "Float",
          "type_desc": "read/write"
        },
        {
          "name": "length",
          "meta": [
            {
              "name": ":isVar",
              "value": ""
            }
          ],
          "get": true,
          "set": false,
          "signature": "length : Int",
          "doc": "The length of this sound in `seconds`",
          "type": "Int",
          "type_desc": "(read only)"
        },
        {
          "name": "pan",
          "meta": [
            {
              "name": ":isVar",
              "value": ""
            }
          ],
          "get": true,
          "set": true,
          "signature": "pan : Float",
          "doc": "The pan of this sound. Pan only logically works on mono sounds, and is by default 2D sounds",
          "type": "Float",
          "type_desc": "read/write"
        },
        {
          "name": "duration",
          "meta": [
            {
              "name": ":isVar",
              "value": ""
            }
          ],
          "get": true,
          "set": false,
          "signature": "duration : Float",
          "doc": "The duration of this sound, in `bytes`",
          "type": "Float",
          "type_desc": "(read only)"
        }
      ]
    },
    {
      "name": "StaticMethods",
      "link": "#StaticMethods",
      "values": []
    },
    {
      "name": "Methods",
      "link": "#Methods",
      "values": [
        {
          "name": "seconds_to_bytes",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "A helper for converting seconds to bytes for this sound source, using the format settings specific to this sound",
          "signature": "seconds_to_bytes(_seconds:Float) : Int",
          "return": ": Int",
          "args": [
            {
              "name": "_seconds",
              "type": "Float",
              "value": "null"
            }
          ]
        },
        {
          "name": "get_pitch",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_pitch() : Float",
          "return": ": Float",
          "args": []
        },
        {
          "name": "set_looping",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "set_looping(_looping:Bool) : Bool",
          "return": ": Bool",
          "args": [
            {
              "name": "_looping",
              "type": "Bool",
              "value": "null"
            }
          ]
        },
        {
          "name": "stop",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Stop this sound",
          "signature": "stop() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "internal_play",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "internal_play() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "get_time",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_time() : Float",
          "return": ": Float",
          "args": []
        },
        {
          "name": "get_duration",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_duration() : Float",
          "return": ": Float",
          "args": []
        },
        {
          "name": "set_pitch",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "set_pitch(_pitch:Float) : Float",
          "return": ": Float",
          "args": [
            {
              "name": "_pitch",
              "type": "Float",
              "value": "null"
            }
          ]
        },
        {
          "name": "internal_pause",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "internal_pause() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "set_time",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "set_time(_time:Float) : Float",
          "return": ": Float",
          "args": [
            {
              "name": "_time",
              "type": "Float",
              "value": "null"
            }
          ]
        },
        {
          "name": "loop",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Loop this sound",
          "signature": "loop() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "toggle",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Toggle this sound",
          "signature": "toggle() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "get_pan",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_pan() : Float",
          "return": ": Float",
          "args": []
        },
        {
          "name": "bytes_to_seconds",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "A helper for converting bytes to seconds for this sound source, using the format settings specific to this sound",
          "signature": "bytes_to_seconds(_bytes:Int) : Float",
          "return": ": Float",
          "args": [
            {
              "name": "_bytes",
              "type": "Int",
              "value": "null"
            }
          ]
        },
        {
          "name": "set_pan",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "set_pan(_pan:Float) : Float",
          "return": ": Float",
          "args": [
            {
              "name": "_pan",
              "type": "Float",
              "value": "null"
            }
          ]
        },
        {
          "name": "new",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "new(_manager:lumen.audio.Audio, _name:String, _audio_info:lumen.types.AudioInfo) ",
          "return": "",
          "args": [
            {
              "name": "_manager",
              "type": "lumen.audio.Audio",
              "value": "null"
            },
            {
              "name": "_name",
              "type": "String",
              "value": "null"
            },
            {
              "name": "_audio_info",
              "type": "lumen.types.AudioInfo",
              "value": "null"
            }
          ]
        },
        {
          "name": "internal_update",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "internal_update() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "get_volume",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_volume() : Float",
          "return": ": Float",
          "args": []
        },
        {
          "name": "pause",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Pause this sound",
          "signature": "pause() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "internal_stop",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "internal_stop() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "get_length",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_length() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "set_volume",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "set_volume(_volume:Float) : Float",
          "return": ": Float",
          "args": [
            {
              "name": "_volume",
              "type": "Float",
              "value": "null"
            }
          ]
        },
        {
          "name": "play",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Play this sound",
          "signature": "play() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "destroy",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Destroy this sound and it's data",
          "signature": "destroy() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "internal_loop",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "internal_loop() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "get_position",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_position() : Int",
          "return": ": Int",
          "args": []
        },
        {
          "name": "get_looping",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "get_looping() : Bool",
          "return": ": Bool",
          "args": []
        },
        {
          "name": "set_position",
          "meta": [],
          "ispublic": false,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "set_position(_position:Int) : Int",
          "return": ": Int",
          "args": [
            {
              "name": "_position",
              "type": "Int",
              "value": "null"
            }
          ]
        }
      ]
    }
  ]
}