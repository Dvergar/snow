{
  "source": "lumen.input.Input",
  "doc": "Internal input system, accessed via `app.input`",
  "links": [],
  "toplinks": [],
  "sections": [
    {
      "name": "Members",
      "link": "#Members",
      "values": [
        {
          "name": "key_code_released",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": false,
          "signature": "key_code_released : Map<Int,Bool>",
          "type": "Map<Int,Bool>",
          "doc": ""
        },
        {
          "name": "system",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": false,
          "signature": "system : lumen.input.system.LumenInputSystem",
          "type": "lumen.input.system.LumenInputSystem",
          "doc": ""
        },
        {
          "name": "lib",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": false,
          "signature": "lib : lumen.Lumen",
          "type": "lumen.Lumen",
          "doc": ""
        },
        {
          "name": "haxe_doc",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": false,
          "signature": "haxe_doc : Dynamic",
          "type": "Dynamic",
          "doc": ""
        },
        {
          "name": "lumen_gamepad_close",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_gamepad_close : Dynamic->Dynamic",
          "type": "Dynamic->Dynamic",
          "doc": ""
        },
        {
          "name": "key_code_down",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": false,
          "signature": "key_code_down : Map<Int,Bool>",
          "type": "Map<Int,Bool>",
          "doc": ""
        },
        {
          "name": "key_code_pressed",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": false,
          "signature": "key_code_pressed : Map<Int,Bool>",
          "type": "Map<Int,Bool>",
          "doc": ""
        },
        {
          "name": "lumen_gamepad_open",
          "meta": [],
          "ispublic": false,
          "isinline": false,
          "isstatic": true,
          "signature": "lumen_gamepad_open : Dynamic->Dynamic",
          "type": "Dynamic->Dynamic",
          "doc": ""
        }
      ]
    },
    {
      "name": "StaticMethods",
      "link": "#StaticMethods",
      "values": []
    },
    {
      "name": "Methods",
      "link": "#Methods",
      "values": [
        {
          "name": "keypressed",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "returns true if the `Key` value was pressed in the latest frame",
          "signature": "keypressed(_code:Int) : Bool",
          "return": ": Bool",
          "args": [
            {
              "name": "_code",
              "type": "Int",
              "value": "null"
            }
          ]
        },
        {
          "name": "keyreleased",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "returns true if the `Key` value was released in the latest frame",
          "signature": "keyreleased(_code:Int) : Bool",
          "return": ": Bool",
          "args": [
            {
              "name": "_code",
              "type": "Int",
              "value": "null"
            }
          ]
        },
        {
          "name": "on_event",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "on_event(_event:lumen.types.SystemEvent) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "_event",
              "type": "lumen.types.SystemEvent",
              "value": "null"
            }
          ]
        },
        {
          "name": "dispatch_touch_event",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "manually dispatch a touch event through the system, delivered to the app handlers, internal and external",
          "signature": "dispatch_touch_event(_event:lumen.input.TouchEvent) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.TouchEvent",
              "value": "null"
            }
          ]
        },
        {
          "name": "keydown",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "returns true if the `Key` value is down at the time of calling this",
          "signature": "keydown(_code:Int) : Bool",
          "return": ": Bool",
          "args": [
            {
              "name": "_code",
              "type": "Int",
              "value": "null"
            }
          ]
        },
        {
          "name": "dispatch_mouse_event",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "manually dispatch a mouse event through the system, delivered to the app handlers, internal and external",
          "signature": "dispatch_mouse_event(_event:lumen.input.MouseEvent) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.MouseEvent",
              "value": "null"
            }
          ]
        },
        {
          "name": "mod_state_from_event",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "Helper to return a `ModState` (shift, ctrl etc) from a given `InputEvent`",
          "signature": "mod_state_from_event(event:lumen.types.InputEvent) : lumen.input.ModState",
          "return": ": lumen.input.ModState",
          "args": [
            {
              "name": "event",
              "type": "lumen.types.InputEvent",
              "value": "null"
            }
          ]
        },
        {
          "name": "new",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "new(_lib:lumen.Lumen) ",
          "return": "",
          "args": [
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": "null"
            }
          ]
        },
        {
          "name": "dispatch_text_event",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "manually dispatch a text event through the system, delivered to the app handlers, internal and external",
          "signature": "dispatch_text_event(_event:lumen.input.TextEvent) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.TextEvent",
              "value": "null"
            }
          ]
        },
        {
          "name": "dispatch_gamepad_event",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "manually dispatch a gamepad event through the system, delivered to the app handlers, internal and external",
          "signature": "dispatch_gamepad_event(_event:lumen.input.GamepadEvent) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.GamepadEvent",
              "value": "null"
            }
          ]
        },
        {
          "name": "update",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "update() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "on_gamepad_added",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "on_gamepad_added(_event:Dynamic) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "_event",
              "type": "Dynamic",
              "value": "null"
            }
          ]
        },
        {
          "name": "destroy",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "destroy() : Void",
          "return": ": Void",
          "args": []
        },
        {
          "name": "dispatch_key_event",
          "meta": [],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "manually dispatch a keyboard event through the system, delivered to the app handlers, internal and external",
          "signature": "dispatch_key_event(_event:lumen.input.KeyEvent) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.KeyEvent",
              "value": "null"
            }
          ]
        },
        {
          "name": "on_gamepad_removed",
          "meta": [
            {
              "name": ":noCompletion",
              "value": ""
            }
          ],
          "ispublic": true,
          "isstatic": false,
          "isinline": false,
          "doc": "",
          "signature": "on_gamepad_removed(_event:Dynamic) : Void",
          "return": ": Void",
          "args": [
            {
              "name": "_event",
              "type": "Dynamic",
              "value": "null"
            }
          ]
        }
      ]
    }
  ]
}