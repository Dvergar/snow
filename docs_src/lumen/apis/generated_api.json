{
  "typedefs": {
    "lumen.platform.native.render.gl.GLContextAttributes": {
      "meta": {},
      "name": "lumen.platform.native.render.gl.GLContextAttributes",
      "doc": "",
      "ispublic": true,
      "members": {
        "preserveDrawingBuffer": {
          "meta": {},
          "name": "preserveDrawingBuffer",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "preserveDrawingBuffer : Bool",
          "isstatic": false,
          "isinline": false
        },
        "depth": {
          "meta": {},
          "name": "depth",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "depth : Bool",
          "isstatic": false,
          "isinline": false
        },
        "antialias": {
          "meta": {},
          "name": "antialias",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "antialias : Bool",
          "isstatic": false,
          "isinline": false
        },
        "stencil": {
          "meta": {},
          "name": "stencil",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "stencil : Bool",
          "isstatic": false,
          "isinline": false
        },
        "premultipliedAlpha": {
          "meta": {},
          "name": "premultipliedAlpha",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "premultipliedAlpha : Bool",
          "isstatic": false,
          "isinline": false
        },
        "alpha": {
          "meta": {},
          "name": "alpha",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "alpha : Bool",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.render.gl.GLBuffer": {
      "meta": {},
      "name": "lumen.render.gl.GLBuffer",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.render.gl.GLBuffer"
    },
    "lumen.platform.native.utils.ArrayBuffer": {
      "meta": {},
      "name": "lumen.platform.native.utils.ArrayBuffer",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.utils.ByteArray"
    },
    "lumen.types.AssetAudioOptions": {
      "meta": {},
      "name": "lumen.types.AssetAudioOptions",
      "doc": "The options for an `AssetAudio` asset",
      "ispublic": true,
      "members": {
        "load": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "load",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "load : Null<Bool>",
          "isstatic": false,
          "isinline": false
        },
        "type": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "type",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "type : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.audio.openal.AL": {
      "meta": {},
      "name": "lumen.audio.openal.AL",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.audio.openal.AL"
    },
    "lumen.input.MouseEvent": {
      "meta": {},
      "name": "lumen.input.MouseEvent",
      "doc": "Information about a mouse event \\n\\n`raw` : The raw event from the system, unmodified   \\n`timestamp` : The time in seconds when this touch event occurred, use for deltas   \\n`window_id` : The window id this event originated from    \\n`which` : Which mouse this event originated from (usually 0)   \\n`state` : The state this event is in   \\n`button` : The button id, if the event `state` is `down` or `up`   \\n`x` : The x position in the window of the mouse event   \\n`y` : The y position in the window of the mouse event   \\n`xrel` : The relative x position if `state` is `move` or a window has grabbed state   \\n`yrel` : The relative y position if `state` is `move` or a window has grabbed state",
      "ispublic": true,
      "members": {
        "which": {
          "meta": {},
          "name": "which",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "which : Int",
          "isstatic": false,
          "isinline": false
        },
        "xrel": {
          "meta": {},
          "name": "xrel",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "xrel : Int",
          "isstatic": false,
          "isinline": false
        },
        "yrel": {
          "meta": {},
          "name": "yrel",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "yrel : Int",
          "isstatic": false,
          "isinline": false
        },
        "button": {
          "meta": {},
          "name": "button",
          "type": "lumen.input.MouseButton",
          "doc": "",
          "ispublic": true,
          "signature": "button : lumen.input.MouseButton",
          "isstatic": false,
          "isinline": false
        },
        "x": {
          "meta": {},
          "name": "x",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "x : Int",
          "isstatic": false,
          "isinline": false
        },
        "y": {
          "meta": {},
          "name": "y",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "y : Int",
          "isstatic": false,
          "isinline": false
        },
        "raw": {
          "meta": {},
          "name": "raw",
          "type": "lumen.types.InputEvent",
          "doc": "",
          "ispublic": true,
          "signature": "raw : lumen.types.InputEvent",
          "isstatic": false,
          "isinline": false
        },
        "state": {
          "meta": {},
          "name": "state",
          "type": "lumen.input.MouseState",
          "doc": "",
          "ispublic": true,
          "signature": "state : lumen.input.MouseState",
          "isstatic": false,
          "isinline": false
        },
        "window_id": {
          "meta": {},
          "name": "window_id",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "window_id : Int",
          "isstatic": false,
          "isinline": false
        },
        "timestamp": {
          "meta": {},
          "name": "timestamp",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "timestamp : Float",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.types.SystemEvent": {
      "meta": {},
      "name": "lumen.types.SystemEvent",
      "doc": "A system event. \\nValues below are null unless the event `type` matches. _i.e_ if type is `window`, the `window` value is not null, and so on",
      "ispublic": true,
      "members": {
        "type": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "type",
          "type": "lumen.types.SystemEventType",
          "doc": "",
          "ispublic": true,
          "signature": "type : lumen.types.SystemEventType",
          "isstatic": false,
          "isinline": false
        },
        "window": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "window",
          "type": "Null<lumen.types.WindowEvent>",
          "doc": "",
          "ispublic": true,
          "signature": "window : Null<lumen.types.WindowEvent>",
          "isstatic": false,
          "isinline": false
        },
        "input": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "input",
          "type": "Null<lumen.types.InputEvent>",
          "doc": "",
          "ispublic": true,
          "signature": "input : Null<lumen.types.InputEvent>",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.types.WindowConfig": {
      "meta": {},
      "name": "lumen.types.WindowConfig",
      "doc": "Window configuration information for creating windows\\n\\n`? fullscreen` : create in fullscreen   \\n`? resizable` : allow the window to be resized   \\n`? borderless` : create as a borderless window   \\n`? antialiasing` : a value of `2`, `4`, `8` or other valid antialiasing flags   \\n`? stencil_buffer` : create a stencil buffer (not per window)   \\n`? depth_buffer` : create a depth buffer (not per window)   \\n`? vsync` : enable vsync (not per window)   \\n`? fps` : window max fps if any   \\n`? x` : window y at creation   \\n`? y` : window x at creation   \\n`? width` : window height at creation   \\n`? height` : window width at creation   \\n`? title` : window title   \\n`? orientation` : `Mobile specific` - window orientation setting",
      "ispublic": true,
      "members": {
        "antialiasing": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "antialiasing",
          "type": "Null<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "antialiasing : Null<Int>",
          "isstatic": false,
          "isinline": false
        },
        "width": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "width",
          "type": "Null<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "width : Null<Int>",
          "isstatic": false,
          "isinline": false
        },
        "multitouch": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "multitouch",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "multitouch : Null<Bool>",
          "isstatic": false,
          "isinline": false
        },
        "fullscreen": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "fullscreen",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "fullscreen : Null<Bool>",
          "isstatic": false,
          "isinline": false
        },
        "orientation": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "orientation",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "orientation : String",
          "isstatic": false,
          "isinline": false
        },
        "x": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "x",
          "type": "Null<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "x : Null<Int>",
          "isstatic": false,
          "isinline": false
        },
        "y": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "y",
          "type": "Null<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "y : Null<Int>",
          "isstatic": false,
          "isinline": false
        },
        "fps": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "fps",
          "type": "Null<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "fps : Null<Int>",
          "isstatic": false,
          "isinline": false
        },
        "height": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "height",
          "type": "Null<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "height : Null<Int>",
          "isstatic": false,
          "isinline": false
        },
        "title": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "title",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "title : String",
          "isstatic": false,
          "isinline": false
        },
        "borderless": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "borderless",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "borderless : Null<Bool>",
          "isstatic": false,
          "isinline": false
        },
        "stencil_buffer": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "stencil_buffer",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "stencil_buffer : Null<Bool>",
          "isstatic": false,
          "isinline": false
        },
        "resizable": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "resizable",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "resizable : Null<Bool>",
          "isstatic": false,
          "isinline": false
        },
        "multitouch_supported": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "multitouch_supported",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "multitouch_supported : Null<Bool>",
          "isstatic": false,
          "isinline": false
        },
        "depth_buffer": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "depth_buffer",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "depth_buffer : Null<Bool>",
          "isstatic": false,
          "isinline": false
        },
        "vsync": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "vsync",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "vsync : Null<Bool>",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.types.LumenConfig": {
      "meta": {},
      "name": "lumen.types.LumenConfig",
      "doc": "The lumen core configuration information\\n\\n`? host` : the bootstrapped application   \\n`? window_config` : the window config for a default window, if any   \\n`? run_loop` : whether or not the core should run a loop at all   \\n`? runtime_config` : the user specific config read from json at runtime   \\n`? asset_data` : the raw list of assets. use the app.assets from Lumen for access",
      "ispublic": true,
      "members": {
        "host": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "host",
          "type": "lumen.App",
          "doc": "",
          "ispublic": true,
          "signature": "host : lumen.App",
          "isstatic": false,
          "isinline": false
        },
        "run_loop": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "run_loop",
          "type": "Null<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "run_loop : Null<Bool>",
          "isstatic": false,
          "isinline": false
        },
        "asset_data": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "asset_data",
          "type": "Array<lumen.types.AssetInfo>",
          "doc": "",
          "ispublic": true,
          "signature": "asset_data : Array<lumen.types.AssetInfo>",
          "isstatic": false,
          "isinline": false
        },
        "window_config": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "window_config",
          "type": "Null<lumen.types.WindowConfig>",
          "doc": "",
          "ispublic": true,
          "signature": "window_config : Null<lumen.types.WindowConfig>",
          "isstatic": false,
          "isinline": false
        },
        "runtime_config": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "runtime_config",
          "type": "Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "runtime_config : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.types.AudioDataBlob": {
      "meta": {},
      "name": "lumen.types.AudioDataBlob",
      "doc": "Information about an audio portion requested via assets\\n\\n`complete` : True if the file has reached the end in this blob   \\n`data` : The data stored in this blob",
      "ispublic": true,
      "members": {
        "data": {
          "meta": {},
          "name": "data",
          "type": "lumen.utils.ByteArray",
          "doc": "",
          "ispublic": true,
          "signature": "data : lumen.utils.ByteArray",
          "isstatic": false,
          "isinline": false
        },
        "complete": {
          "meta": {},
          "name": "complete",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "complete : Bool",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.input.Key": {
      "meta": {},
      "name": "lumen.input.Key",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.input.Keycodes"
    },
    "lumen.render.gl.GLUniformLocation": {
      "meta": {},
      "name": "lumen.render.gl.GLUniformLocation",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": ""
    },
    "lumen.audio.Sound": {
      "meta": {},
      "name": "lumen.audio.Sound",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.audio.openal.Sound"
    },
    "lumen.render.gl.GLContextAttributes": {
      "meta": {},
      "name": "lumen.render.gl.GLContextAttributes",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": ""
    },
    "lumen.window.WindowSystem": {
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.window.WindowSystem",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.window.sdl.WindowSystem"
    },
    "lumen.types.ImageInfo": {
      "meta": {},
      "name": "lumen.types.ImageInfo",
      "doc": "Information about an image file/data\\n\\n`id` : source asset id   \\n`bpp` : used bits per pixel   \\n`width` : image width   \\n`height` : image height   \\n`bpp_source` : source bits per pixel   \\n`data` : image data",
      "ispublic": true,
      "members": {
        "data": {
          "meta": {},
          "name": "data",
          "type": "lumen.utils.ByteArray",
          "doc": "",
          "ispublic": true,
          "signature": "data : lumen.utils.ByteArray",
          "isstatic": false,
          "isinline": false
        },
        "width": {
          "meta": {},
          "name": "width",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "width : Int",
          "isstatic": false,
          "isinline": false
        },
        "id": {
          "meta": {},
          "name": "id",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "id : String",
          "isstatic": false,
          "isinline": false
        },
        "bpp": {
          "meta": {},
          "name": "bpp",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "bpp : Int",
          "isstatic": false,
          "isinline": false
        },
        "height": {
          "meta": {},
          "name": "height",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "height : Int",
          "isstatic": false,
          "isinline": false
        },
        "bpp_source": {
          "meta": {},
          "name": "bpp_source",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "bpp_source : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.Core": {
      "meta": {},
      "name": "lumen.Core",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.Core"
    },
    "lumen.utils.Int32Array": {
      "meta": {},
      "name": "lumen.utils.Int32Array",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.utils.Int32Array"
    },
    "lumen.window.DisplayBounds": {
      "meta": {},
      "name": "lumen.window.DisplayBounds",
      "doc": "",
      "ispublic": true,
      "members": {
        "width": {
          "meta": {},
          "name": "width",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "width : Int",
          "isstatic": false,
          "isinline": false
        },
        "x": {
          "meta": {},
          "name": "x",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "x : Int",
          "isstatic": false,
          "isinline": false
        },
        "y": {
          "meta": {},
          "name": "y",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "y : Int",
          "isstatic": false,
          "isinline": false
        },
        "height": {
          "meta": {},
          "name": "height",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "height : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.types.AssetInfo": {
      "meta": {},
      "name": "lumen.types.AssetInfo",
      "doc": "Information for a single asset \\n\\n`id` : the asset id   \\n`path` : the location of the asset   \\n`ext` : the asset extension, if any   \\n`type` : a convenience type indicator",
      "ispublic": true,
      "members": {
        "path": {
          "meta": {},
          "name": "path",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "path : String",
          "isstatic": false,
          "isinline": false
        },
        "type": {
          "meta": {},
          "name": "type",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "type : String",
          "isstatic": false,
          "isinline": false
        },
        "id": {
          "meta": {},
          "name": "id",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "id : String",
          "isstatic": false,
          "isinline": false
        },
        "ext": {
          "meta": {},
          "name": "ext",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "ext : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.utils.ArrayBuffer": {
      "meta": {},
      "name": "lumen.utils.ArrayBuffer",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": ""
    },
    "lumen.input.KeyEvent": {
      "meta": {},
      "name": "lumen.input.KeyEvent",
      "doc": "Information about a keyboard event\\n\\n`raw` : The raw event from the system, unmodified   \\n`scancode` : The `lumen.input.Scan` code value for this event   \\n`keycode` : The `lumen.input.Key` code value for this event   \\n`state` : The state of the key in this event   \\n`mod` : The modifier state of this event   \\n`repeat` : If this value is bigger than 0 this is a key repeat event of a key held down   \\n`timestamp` : The time in seconds when this touch event occurred, use for deltas   \\n`window_id` : The window id this event originated from",
      "ispublic": true,
      "members": {
        "mod": {
          "meta": {},
          "name": "mod",
          "type": "lumen.input.ModState",
          "doc": "",
          "ispublic": true,
          "signature": "mod : lumen.input.ModState",
          "isstatic": false,
          "isinline": false
        },
        "raw": {
          "meta": {},
          "name": "raw",
          "type": "lumen.types.InputEvent",
          "doc": "",
          "ispublic": true,
          "signature": "raw : lumen.types.InputEvent",
          "isstatic": false,
          "isinline": false
        },
        "state": {
          "meta": {},
          "name": "state",
          "type": "lumen.input.PressedState",
          "doc": "",
          "ispublic": true,
          "signature": "state : lumen.input.PressedState",
          "isstatic": false,
          "isinline": false
        },
        "repeat": {
          "meta": {},
          "name": "repeat",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "repeat : Bool",
          "isstatic": false,
          "isinline": false
        },
        "window_id": {
          "meta": {},
          "name": "window_id",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "window_id : Int",
          "isstatic": false,
          "isinline": false
        },
        "timestamp": {
          "meta": {},
          "name": "timestamp",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "timestamp : Float",
          "isstatic": false,
          "isinline": false
        },
        "scancode": {
          "meta": {},
          "name": "scancode",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "scancode : Int",
          "isstatic": false,
          "isinline": false
        },
        "keycode": {
          "meta": {},
          "name": "keycode",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "keycode : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.input.InputSystem": {
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.input.InputSystem",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.input.sdl.InputSystem"
    },
    "lumen.render.gl.GLProgram": {
      "meta": {},
      "name": "lumen.render.gl.GLProgram",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.render.gl.GLProgram"
    },
    "lumen.utils._AbstractClass.StringMap": {
      "meta": {},
      "name": "lumen.utils._AbstractClass.StringMap",
      "doc": "",
      "ispublic": false,
      "members": {},
      "alias": ""
    },
    "lumen.types.InputEvent": {
      "meta": {},
      "name": "lumen.types.InputEvent",
      "doc": "A system input event \\n   \\n`? type` : The type of input event this was   \\n`? timestamp` : The time in seconds that this event occured, useful for deltas   \\n`? window_id` : The window id from which this event originated   \\n`? event` : The raw platform event data",
      "ispublic": true,
      "members": {
        "type": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "type",
          "type": "lumen.types.InputEventType",
          "doc": "",
          "ispublic": true,
          "signature": "type : lumen.types.InputEventType",
          "isstatic": false,
          "isinline": false
        },
        "event": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "event",
          "type": "Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "event : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "window_id": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "window_id",
          "type": "Null<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "window_id : Null<Int>",
          "isstatic": false,
          "isinline": false
        },
        "timestamp": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "timestamp",
          "type": "Null<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "timestamp : Null<Float>",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.platform.native.render.gl.GLActiveInfo": {
      "meta": {},
      "name": "lumen.platform.native.render.gl.GLActiveInfo",
      "doc": "",
      "ispublic": true,
      "members": {
        "name": {
          "meta": {},
          "name": "name",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "name : String",
          "isstatic": false,
          "isinline": false
        },
        "size": {
          "meta": {},
          "name": "size",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "size : Int",
          "isstatic": false,
          "isinline": false
        },
        "type": {
          "meta": {},
          "name": "type",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "type : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.input.Scan": {
      "meta": {},
      "name": "lumen.input.Scan",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.input.Scancodes"
    },
    "lumen.platform.native.render.gl.GLUniformLocation": {
      "meta": {},
      "name": "lumen.platform.native.render.gl.GLUniformLocation",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": ""
    },
    "lumen.render.gl.GLShader": {
      "meta": {},
      "name": "lumen.render.gl.GLShader",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.render.gl.GLShader"
    },
    "lumen.render.gl.GLActiveInfo": {
      "meta": {},
      "name": "lumen.render.gl.GLActiveInfo",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": ""
    },
    "lumen.utils.UInt8Array": {
      "meta": {},
      "name": "lumen.utils.UInt8Array",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.utils.UInt8Array"
    },
    "lumen.audio.openal.Context": {
      "meta": {},
      "name": "lumen.audio.openal.Context",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": ""
    },
    "lumen.render.gl.GL": {
      "meta": {},
      "name": "lumen.render.gl.GL",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.render.gl.GL"
    },
    "lumen.input.GamepadEvent": {
      "meta": {},
      "name": "lumen.input.GamepadEvent",
      "doc": "Information about a gamepad event\\n\\n`raw` : The raw event from the system, unmodified   \\n`timestamp` : The time in seconds when this touch event occurred, use for deltas   \\n`type` : The button id, if the event `type` is `button`   \\n`state` : The state this event is in   \\n`which` : The id of the gamepad this event comes from   \\n`button` : The button id, if the event `type` is `button`   \\n`axis` : The axis id, if the event `type` is `button`   \\n`value` : The axis value, if the event `type` is `axis`",
      "ispublic": true,
      "members": {
        "axis": {
          "meta": {},
          "name": "axis",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "axis : Int",
          "isstatic": false,
          "isinline": false
        },
        "which": {
          "meta": {},
          "name": "which",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "which : Int",
          "isstatic": false,
          "isinline": false
        },
        "type": {
          "meta": {},
          "name": "type",
          "type": "lumen.input.GamepadEventType",
          "doc": "",
          "ispublic": true,
          "signature": "type : lumen.input.GamepadEventType",
          "isstatic": false,
          "isinline": false
        },
        "button": {
          "meta": {},
          "name": "button",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "button : Int",
          "isstatic": false,
          "isinline": false
        },
        "raw": {
          "meta": {},
          "name": "raw",
          "type": "lumen.types.InputEvent",
          "doc": "",
          "ispublic": true,
          "signature": "raw : lumen.types.InputEvent",
          "isstatic": false,
          "isinline": false
        },
        "state": {
          "meta": {},
          "name": "state",
          "type": "lumen.input.PressedState",
          "doc": "",
          "ispublic": true,
          "signature": "state : lumen.input.PressedState",
          "isstatic": false,
          "isinline": false
        },
        "timestamp": {
          "meta": {},
          "name": "timestamp",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "timestamp : Float",
          "isstatic": false,
          "isinline": false
        },
        "value": {
          "meta": {},
          "name": "value",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "value : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.platform.native.render.gl.ShaderPrecisionFormat": {
      "meta": {},
      "name": "lumen.platform.native.render.gl.ShaderPrecisionFormat",
      "doc": "",
      "ispublic": true,
      "members": {
        "rangeMax": {
          "meta": {},
          "name": "rangeMax",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "rangeMax : Int",
          "isstatic": false,
          "isinline": false
        },
        "rangeMin": {
          "meta": {},
          "name": "rangeMin",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "rangeMin : Int",
          "isstatic": false,
          "isinline": false
        },
        "precision": {
          "meta": {},
          "name": "precision",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "precision : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.audio.openal.ALC": {
      "meta": {},
      "name": "lumen.audio.openal.ALC",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.audio.openal.ALC"
    },
    "lumen.window.DisplayMode": {
      "meta": {},
      "name": "lumen.window.DisplayMode",
      "doc": "",
      "ispublic": true,
      "members": {
        "width": {
          "meta": {},
          "name": "width",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "width : Int",
          "isstatic": false,
          "isinline": false
        },
        "format": {
          "meta": {},
          "name": "format",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "format : Int",
          "isstatic": false,
          "isinline": false
        },
        "refresh_rate": {
          "meta": {},
          "name": "refresh_rate",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "refresh_rate : Int",
          "isstatic": false,
          "isinline": false
        },
        "height": {
          "meta": {},
          "name": "height",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "height : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.input.TouchEvent": {
      "meta": {},
      "name": "lumen.input.TouchEvent",
      "doc": "Information about a touch event\\n\\n`raw` : The raw event from the system, unmodified   \\n`state` : The state this touch event is in   \\n`timestamp` : The time in seconds when this touch event occurred, use for deltas   \\n`touch_id` : The id of the touch that this event comes from, a finger id   \\n`device_id` : The device id this touch comes from   \\n`x` : The x position in the window of the touch event   \\n`y` : The x position in the window of the touch event   \\n`dx` : The delta x value of the touch event, if the state is `moving`   \\n`dy` : The delta y value of the touch event, if the state is `moving`   \\n`pressure` : The pressure value of the touch event, where available",
      "ispublic": true,
      "members": {
        "device_id": {
          "meta": {},
          "name": "device_id",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "device_id : Int",
          "isstatic": false,
          "isinline": false
        },
        "pressure": {
          "meta": {},
          "name": "pressure",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "pressure : Float",
          "isstatic": false,
          "isinline": false
        },
        "x": {
          "meta": {},
          "name": "x",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "x : Float",
          "isstatic": false,
          "isinline": false
        },
        "y": {
          "meta": {},
          "name": "y",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "y : Float",
          "isstatic": false,
          "isinline": false
        },
        "dx": {
          "meta": {},
          "name": "dx",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "dx : Float",
          "isstatic": false,
          "isinline": false
        },
        "dy": {
          "meta": {},
          "name": "dy",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "dy : Float",
          "isstatic": false,
          "isinline": false
        },
        "touch_id": {
          "meta": {},
          "name": "touch_id",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "touch_id : Int",
          "isstatic": false,
          "isinline": false
        },
        "raw": {
          "meta": {},
          "name": "raw",
          "type": "lumen.types.InputEvent",
          "doc": "",
          "ispublic": true,
          "signature": "raw : lumen.types.InputEvent",
          "isstatic": false,
          "isinline": false
        },
        "state": {
          "meta": {},
          "name": "state",
          "type": "lumen.input.TouchState",
          "doc": "",
          "ispublic": true,
          "signature": "state : lumen.input.TouchState",
          "isstatic": false,
          "isinline": false
        },
        "timestamp": {
          "meta": {},
          "name": "timestamp",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "timestamp : Float",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.window.WindowPosition": {
      "meta": {},
      "name": "lumen.window.WindowPosition",
      "doc": "",
      "ispublic": true,
      "members": {
        "x": {
          "meta": {},
          "name": "x",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "x : Int",
          "isstatic": false,
          "isinline": false
        },
        "y": {
          "meta": {},
          "name": "y",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "y : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.render.gl.GLTexture": {
      "meta": {},
      "name": "lumen.render.gl.GLTexture",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.render.gl.GLTexture"
    },
    "lumen.types.AudioInfo": {
      "meta": {},
      "name": "lumen.types.AudioInfo",
      "doc": "Information about an audio file/data\\n\\n`id` : file source   \\n`format` : format   \\n`channels` : number of channels   \\n`rate` : hz rate    \\n`bitrate` : sound bitrate   \\n`bits_per_sample` : bits per sample, 8 / 16   \\n`data` : sound raw data,   \\n`length` : the file length in bytes   \\n`length_pcm` : the pcm uncompressed raw length in bytes   \\n`handle` : the native audio handle for later manipulation",
      "ispublic": true,
      "members": {
        "data": {
          "meta": {},
          "name": "data",
          "type": "lumen.utils.ByteArray",
          "doc": "",
          "ispublic": true,
          "signature": "data : lumen.utils.ByteArray",
          "isstatic": false,
          "isinline": false
        },
        "rate": {
          "meta": {},
          "name": "rate",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "rate : Int",
          "isstatic": false,
          "isinline": false
        },
        "channels": {
          "meta": {},
          "name": "channels",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "channels : Int",
          "isstatic": false,
          "isinline": false
        },
        "bitrate": {
          "meta": {},
          "name": "bitrate",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "bitrate : Int",
          "isstatic": false,
          "isinline": false
        },
        "format": {
          "meta": {},
          "name": "format",
          "type": "lumen.types.AudioFormatType",
          "doc": "",
          "ispublic": true,
          "signature": "format : lumen.types.AudioFormatType",
          "isstatic": false,
          "isinline": false
        },
        "id": {
          "meta": {},
          "name": "id",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "id : String",
          "isstatic": false,
          "isinline": false
        },
        "length": {
          "meta": {},
          "name": "length",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "length : Int",
          "isstatic": false,
          "isinline": false
        },
        "length_pcm": {
          "meta": {},
          "name": "length_pcm",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "length_pcm : Int",
          "isstatic": false,
          "isinline": false
        },
        "bits_per_sample": {
          "meta": {},
          "name": "bits_per_sample",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "bits_per_sample : Int",
          "isstatic": false,
          "isinline": false
        },
        "handle": {
          "meta": {},
          "name": "handle",
          "type": "Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "handle : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.types.AssetImageOptions": {
      "meta": {},
      "name": "lumen.types.AssetImageOptions",
      "doc": "The options for an `AssetImage` asset. Get assets from the `Assets` class, via `app.assets`",
      "ispublic": true,
      "members": {
        "components": {
          "meta": {},
          "name": "components",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "components : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.utils.ArrayBufferView": {
      "meta": {},
      "name": "lumen.utils.ArrayBufferView",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.utils.ArrayBufferView"
    },
    "lumen.render.gl.GLRenderbuffer": {
      "meta": {},
      "name": "lumen.render.gl.GLRenderbuffer",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.render.gl.GLRenderbuffer"
    },
    "lumen.assets.AssetSystem": {
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.assets.AssetSystem",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.assets.AssetSystem"
    },
    "lumen.input.TextEvent": {
      "meta": {},
      "name": "lumen.input.TextEvent",
      "doc": "Information about a text input event\\n\\n`raw` : The raw event from the system, unmodified   \\n`text` : The text that this event has generated   \\n`type` : The type of text event   \\n`timestamp` : The time in seconds when this touch event occurred, use for deltas   \\n`window_id` : The window id this event originated from   \\n`start` : The start position, if the `type` is `edit`   \\n`length` : The length position, if the `type` is `edit`",
      "ispublic": true,
      "members": {
        "text": {
          "meta": {},
          "name": "text",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "text : String",
          "isstatic": false,
          "isinline": false
        },
        "type": {
          "meta": {},
          "name": "type",
          "type": "lumen.input.TextEventType",
          "doc": "",
          "ispublic": true,
          "signature": "type : lumen.input.TextEventType",
          "isstatic": false,
          "isinline": false
        },
        "raw": {
          "meta": {},
          "name": "raw",
          "type": "lumen.types.InputEvent",
          "doc": "",
          "ispublic": true,
          "signature": "raw : lumen.types.InputEvent",
          "isstatic": false,
          "isinline": false
        },
        "start": {
          "meta": {},
          "name": "start",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "start : Int",
          "isstatic": false,
          "isinline": false
        },
        "window_id": {
          "meta": {},
          "name": "window_id",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "window_id : Int",
          "isstatic": false,
          "isinline": false
        },
        "length": {
          "meta": {},
          "name": "length",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "length : Int",
          "isstatic": false,
          "isinline": false
        },
        "timestamp": {
          "meta": {},
          "name": "timestamp",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "timestamp : Float",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.utils.ByteArray": {
      "meta": {},
      "name": "lumen.utils.ByteArray",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.utils.ByteArray"
    },
    "lumen.utils.Float32Array": {
      "meta": {},
      "name": "lumen.utils.Float32Array",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.utils.Float32Array"
    },
    "lumen.input.ModState": {
      "meta": {},
      "name": "lumen.input.ModState",
      "doc": "Input modifier state \\n\\n`none` : no modifiers are down   \\n`lshift` : left shift key is down   \\n`rshift` : right shift key is down   \\n`lctrl` : left ctrl key is down   \\n`rctrl` : right ctrl key is down   \\n`lalt` : left alt/option key is down   \\n`ralt` : right alt/option key is down   \\n`lmeta` : left windows/command key is down   \\n`rmeta` : right windows/command key is down   \\n`num` : numlock is enabled   \\n`caps` : capslock is enabled   \\n`mode` : mode key is down   \\n`ctrl` : left or right ctrl key is down   \\n`shift` : left or right shift key is down   \\n`alt` : left or right alt/option key is down   \\n`meta` : left or right windows/command key is down",
      "ispublic": true,
      "members": {
        "caps": {
          "meta": {},
          "name": "caps",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "caps : Bool",
          "isstatic": false,
          "isinline": false
        },
        "ctrl": {
          "meta": {},
          "name": "ctrl",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "ctrl : Bool",
          "isstatic": false,
          "isinline": false
        },
        "lalt": {
          "meta": {},
          "name": "lalt",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "lalt : Bool",
          "isstatic": false,
          "isinline": false
        },
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "meta : Bool",
          "isstatic": false,
          "isinline": false
        },
        "mode": {
          "meta": {},
          "name": "mode",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "mode : Bool",
          "isstatic": false,
          "isinline": false
        },
        "none": {
          "meta": {},
          "name": "none",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "none : Bool",
          "isstatic": false,
          "isinline": false
        },
        "ralt": {
          "meta": {},
          "name": "ralt",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "ralt : Bool",
          "isstatic": false,
          "isinline": false
        },
        "rctrl": {
          "meta": {},
          "name": "rctrl",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "rctrl : Bool",
          "isstatic": false,
          "isinline": false
        },
        "rmeta": {
          "meta": {},
          "name": "rmeta",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "rmeta : Bool",
          "isstatic": false,
          "isinline": false
        },
        "lctrl": {
          "meta": {},
          "name": "lctrl",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "lctrl : Bool",
          "isstatic": false,
          "isinline": false
        },
        "lmeta": {
          "meta": {},
          "name": "lmeta",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "lmeta : Bool",
          "isstatic": false,
          "isinline": false
        },
        "shift": {
          "meta": {},
          "name": "shift",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "shift : Bool",
          "isstatic": false,
          "isinline": false
        },
        "alt": {
          "meta": {},
          "name": "alt",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "alt : Bool",
          "isstatic": false,
          "isinline": false
        },
        "num": {
          "meta": {},
          "name": "num",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "num : Bool",
          "isstatic": false,
          "isinline": false
        },
        "rshift": {
          "meta": {},
          "name": "rshift",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "rshift : Bool",
          "isstatic": false,
          "isinline": false
        },
        "lshift": {
          "meta": {},
          "name": "lshift",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "lshift : Bool",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.audio.openal.Device": {
      "meta": {},
      "name": "lumen.audio.openal.Device",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": ""
    },
    "lumen.window.WindowSize": {
      "meta": {},
      "name": "lumen.window.WindowSize",
      "doc": "",
      "ispublic": true,
      "members": {
        "h": {
          "meta": {},
          "name": "h",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "h : Int",
          "isstatic": false,
          "isinline": false
        },
        "w": {
          "meta": {},
          "name": "w",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "w : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.audio.AudioSystem": {
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.audio.AudioSystem",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.audio.openal.AudioSystem"
    },
    "lumen.types.WindowEvent": {
      "meta": {},
      "name": "lumen.types.WindowEvent",
      "doc": "A system window event \\n\\n`? type` : The type of window event this was   \\n`? timestamp` : The time in seconds that this event occured, useful for deltas   \\n`? window_id` : The window id from which this event originated   \\n`? event` : The raw platform event data",
      "ispublic": true,
      "members": {
        "type": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "type",
          "type": "lumen.types.WindowEventType",
          "doc": "",
          "ispublic": true,
          "signature": "type : lumen.types.WindowEventType",
          "isstatic": false,
          "isinline": false
        },
        "event": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "event",
          "type": "Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "event : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "window_id": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "window_id",
          "type": "Null<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "window_id : Null<Int>",
          "isstatic": false,
          "isinline": false
        },
        "timestamp": {
          "meta": {
            "meta": {
              "name": ":optional",
              "value": ""
            }
          },
          "name": "timestamp",
          "type": "Null<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "timestamp : Null<Float>",
          "isstatic": false,
          "isinline": false
        }
      },
      "alias": ""
    },
    "lumen.render.gl.GLFramebuffer": {
      "meta": {},
      "name": "lumen.render.gl.GLFramebuffer",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.render.gl.GLFramebuffer"
    },
    "lumen.audio.SoundStream": {
      "meta": {},
      "name": "lumen.audio.SoundStream",
      "doc": "",
      "ispublic": true,
      "members": {},
      "alias": "lumen.platform.native.audio.openal.SoundStream"
    }
  },
  "classnames": [
    "lumen.App",
    "lumen.AppFixedTimestep",
    "lumen.utils.AbstractClass",
    "lumen.CoreBinding",
    "lumen.Lumen",
    "lumen.assets.AssetSystemBinding",
    "lumen.assets.Assets",
    "lumen.audio.Audio",
    "lumen.audio.AudioSystemBinding",
    "lumen.audio.SoundBinding",
    "lumen.input.Input",
    "lumen.input.InputSystemBinding",
    "lumen.input.Scancodes",
    "lumen.input.Keycodes",
    "lumen.utils.Libs",
    "lumen.io.IOFile",
    "lumen.io.IO",
    "lumen.platform.native.Core",
    "lumen.platform.native.assets.AssetSystem",
    "lumen.platform.native.audio.AudioSystem",
    "lumen.platform.native.audio.Sound",
    "lumen.platform.native.audio.openal.Sound",
    "lumen.platform.native.audio.SoundStream",
    "lumen.platform.native.audio.openal._AL.Context_Impl_",
    "lumen.platform.native.audio.openal._AL.Device_Impl_",
    "lumen.platform.native.audio.openal.AL",
    "lumen.platform.native.audio.openal.ALC",
    "lumen.platform.native.audio.openal.AudioSystem",
    "lumen.platform.native.audio.openal.OpenALHelper",
    "lumen.platform.native.audio.openal.SoundStream",
    "lumen.platform.native.input.InputSystem",
    "lumen.platform.native.input.sdl.InputSystem",
    "lumen.platform.native.input.sdl.KeyEventTypes",
    "lumen.platform.native.input.sdl.GamepadEventTypes",
    "lumen.platform.native.input.sdl.TouchEventTypes",
    "lumen.platform.native.input.sdl.MouseEventTypes",
    "lumen.platform.native.input.sdl.ModValue",
    "lumen.render.gl.GLObject",
    "lumen.platform.native.render.gl.GLBuffer",
    "lumen.platform.native.render.gl.GLFramebuffer",
    "lumen.platform.native.render.gl.GLProgram",
    "lumen.platform.native.render.gl.GLRenderbuffer",
    "lumen.platform.native.render.gl.GLShader",
    "lumen.platform.native.render.gl.GLTexture",
    "lumen.platform.native.render.gl.GL",
    "lumen.utils.IMemoryRange",
    "lumen.platform.native.utils.ArrayBufferView",
    "lumen.utils.IDataInput",
    "lumen.platform.native.utils.ByteArray",
    "lumen.platform.native.utils.Float32Array",
    "lumen.platform.native.utils.Int32Array",
    "lumen.platform.native.utils.UInt8Array",
    "lumen.window.WindowSystemBinding",
    "lumen.platform.native.window.WindowSystem",
    "lumen.platform.native.window.sdl.WindowSystem",
    "lumen.types.Asset",
    "lumen.types.AssetBytes",
    "lumen.types.AssetText",
    "lumen.types.AssetImage",
    "lumen.types.AssetAudio",
    "lumen.types.SystemEvents",
    "lumen.types.WindowEvents",
    "lumen.types.InputEvents",
    "lumen.utils.AbstractClassBuilder",
    "lumen.utils.compat.Endian",
    "lumen.utils.compat.Matrix3D",
    "lumen.utils.compat._Vector.Vector_Impl_",
    "lumen.utils.compat.Vector3D",
    "lumen.window._Window.WindowHandle_Impl_",
    "lumen.window.Window",
    "lumen.window.Windowing"
  ],
  "classes": {
    "lumen.platform.native.audio.openal.SoundStream": {
      "extend": [
        "lumen.platform.native.audio.SoundStream"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.audio.openal.SoundStream",
      "properties": {},
      "doc": "The openal specific implementation of SoundStream",
      "ispublic": true,
      "members": {
        "buffers_left": {
          "meta": {},
          "name": "buffers_left",
          "type": "Int",
          "doc": "remaining buffers to play",
          "ispublic": true,
          "signature": "buffers_left : Int",
          "isstatic": false,
          "isinline": false
        },
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "half_pi": {
          "meta": {},
          "name": "half_pi",
          "type": "Float",
          "doc": "",
          "ispublic": false,
          "signature": "half_pi : Float",
          "isstatic": true,
          "isinline": false
        },
        "buffers": {
          "meta": {},
          "name": "buffers",
          "type": "Array<Int>",
          "doc": "the sound buffer names",
          "ispublic": true,
          "signature": "buffers : Array<Int>",
          "isstatic": false,
          "isinline": false
        },
        "current_time": {
          "meta": {},
          "name": "current_time",
          "type": "Float",
          "doc": "",
          "ispublic": false,
          "signature": "current_time : Float",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "loop": {
          "args": [],
          "meta": {},
          "name": "loop",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "loop() : Void",
          "isstatic": false,
          "isinline": false
        },
        "play": {
          "args": [],
          "meta": {},
          "name": "play",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "play() : Void",
          "isstatic": false,
          "isinline": false
        },
        "stop": {
          "args": [],
          "meta": {},
          "name": "stop",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "stop() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_time": {
          "args": [],
          "meta": {},
          "name": "get_time",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "get_time() : Float",
          "isstatic": false,
          "isinline": false
        },
        "flush_queue": {
          "args": [],
          "meta": {},
          "name": "flush_queue",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "flush_queue() : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_volume": {
          "args": [
            {
              "name": "_volume",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_volume",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_volume(_volume:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "internal_update": {
          "args": [],
          "meta": {},
          "name": "internal_update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "internal_update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_pitch": {
          "args": [
            {
              "name": "_pitch",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_pitch",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_pitch(_pitch:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "set_time": {
          "args": [
            {
              "name": "_time",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_time",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_time(_time:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "update_stream": {
          "args": [],
          "meta": {},
          "name": "update_stream",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "update_stream() : Bool",
          "isstatic": false,
          "isinline": false
        },
        "get_position": {
          "args": [],
          "meta": {},
          "name": "get_position",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "get_position() : Int",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.audio.Audio",
              "value": null
            },
            {
              "name": "_name",
              "type": "String",
              "value": null
            },
            {
              "name": "_audio_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.audio.Audio, _name:String, _audio_info:lumen.types.AudioInfo) ",
          "isstatic": false,
          "isinline": false
        },
        "internal_play": {
          "args": [],
          "meta": {},
          "name": "internal_play",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "internal_play() : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_position": {
          "args": [
            {
              "name": "_position",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_position",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "set_position(_position:Int) : Int",
          "isstatic": false,
          "isinline": false
        },
        "fill_buffer": {
          "args": [
            {
              "name": "_buffer",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "fill_buffer",
          "returntype": ": lumen.types.AudioDataBlob",
          "doc": "",
          "ispublic": false,
          "signature": "fill_buffer(_buffer:Int) : lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "set_pan": {
          "args": [
            {
              "name": "_pan",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_pan",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_pan(_pan:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "init_queue": {
          "args": [
            {
              "name": "?_buffer_start",
              "type": "Int",
              "value": "-1"
            }
          ],
          "meta": {},
          "name": "init_queue",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "init_queue(?_buffer_start:Int=-1) : Void",
          "isstatic": false,
          "isinline": false
        },
        "internal_pause": {
          "args": [],
          "meta": {},
          "name": "internal_pause",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "internal_pause() : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_looping": {
          "args": [
            {
              "name": "_looping",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_looping",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "set_looping(_looping:Bool) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "pause": {
          "args": [],
          "meta": {},
          "name": "pause",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "pause() : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.window.sdl.WindowSystem": {
      "extend": [
        "lumen.platform.native.window.WindowSystem"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.window.sdl.WindowSystem",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.window.Windowing",
              "value": null
            },
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.window.Windowing, _lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.input.Input": {
      "extend": [],
      "meta": {},
      "name": "lumen.input.Input",
      "properties": {},
      "doc": "Internal input system, accessed via `app.input`",
      "ispublic": true,
      "members": {
        "key_code_down": {
          "meta": {},
          "name": "key_code_down",
          "type": "Map<Int,Bool>",
          "doc": "",
          "ispublic": false,
          "signature": "key_code_down : Map<Int,Bool>",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "key_code_released": {
          "meta": {},
          "name": "key_code_released",
          "type": "Map<Int,Bool>",
          "doc": "",
          "ispublic": false,
          "signature": "key_code_released : Map<Int,Bool>",
          "isstatic": false,
          "isinline": false
        },
        "system": {
          "meta": {},
          "name": "system",
          "type": "lumen.input.InputSystem",
          "doc": "",
          "ispublic": false,
          "signature": "system : lumen.input.InputSystem",
          "isstatic": false,
          "isinline": false
        },
        "lib": {
          "meta": {},
          "name": "lib",
          "type": "lumen.Lumen",
          "doc": "",
          "ispublic": false,
          "signature": "lib : lumen.Lumen",
          "isstatic": false,
          "isinline": false
        },
        "key_code_pressed": {
          "meta": {},
          "name": "key_code_pressed",
          "type": "Map<Int,Bool>",
          "doc": "",
          "ispublic": false,
          "signature": "key_code_pressed : Map<Int,Bool>",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "dispatch_touch_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.TouchEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "dispatch_touch_event",
          "returntype": ": Void",
          "doc": "manually dispatch a touch event through the system, delivered to the app handlers, internal and external",
          "ispublic": true,
          "signature": "dispatch_touch_event(_event:lumen.input.TouchEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_gamepad_removed": {
          "args": [
            {
              "name": "_event",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_gamepad_removed",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_gamepad_removed(_event:Dynamic) : Void",
          "isstatic": false,
          "isinline": false
        },
        "dispatch_mouse_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.MouseEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "dispatch_mouse_event",
          "returntype": ": Void",
          "doc": "manually dispatch a mouse event through the system, delivered to the app handlers, internal and external",
          "ispublic": true,
          "signature": "dispatch_mouse_event(_event:lumen.input.MouseEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "keypressed": {
          "args": [
            {
              "name": "_code",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "keypressed",
          "returntype": ": Bool",
          "doc": "returns true if the `Key` value was pressed in the latest frame",
          "ispublic": true,
          "signature": "keypressed(_code:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "dispatch_key_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.KeyEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "dispatch_key_event",
          "returntype": ": Void",
          "doc": "manually dispatch a keyboard event through the system, delivered to the app handlers, internal and external",
          "ispublic": true,
          "signature": "dispatch_key_event(_event:lumen.input.KeyEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "keyreleased": {
          "args": [
            {
              "name": "_code",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "keyreleased",
          "returntype": ": Bool",
          "doc": "returns true if the `Key` value was released in the latest frame",
          "ispublic": true,
          "signature": "keyreleased(_code:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "dispatch_text_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.TextEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "dispatch_text_event",
          "returntype": ": Void",
          "doc": "manually dispatch a text event through the system, delivered to the app handlers, internal and external",
          "ispublic": true,
          "signature": "dispatch_text_event(_event:lumen.input.TextEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.types.SystemEvent",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_event",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_event(_event:lumen.types.SystemEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_gamepad_added": {
          "args": [
            {
              "name": "_event",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_gamepad_added",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_gamepad_added(_event:Dynamic) : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "mod_state_from_event": {
          "args": [
            {
              "name": "event",
              "type": "lumen.types.InputEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "mod_state_from_event",
          "returntype": ": lumen.input.ModState",
          "doc": "Helper to return a `ModState` (shift, ctrl etc) from a given `InputEvent`",
          "ispublic": true,
          "signature": "mod_state_from_event(event:lumen.types.InputEvent) : lumen.input.ModState",
          "isstatic": false,
          "isinline": false
        },
        "keydown": {
          "args": [
            {
              "name": "_code",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "keydown",
          "returntype": ": Bool",
          "doc": "returns true if the `Key` value is down at the time of calling this",
          "ispublic": true,
          "signature": "keydown(_code:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "dispatch_gamepad_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.GamepadEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "dispatch_gamepad_event",
          "returntype": ": Void",
          "doc": "manually dispatch a gamepad event through the system, delivered to the app handlers, internal and external",
          "ispublic": true,
          "signature": "dispatch_gamepad_event(_event:lumen.input.GamepadEvent) : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.render.gl.GLProgram": {
      "extend": [
        "lumen.render.gl.GLObject"
      ],
      "meta": {},
      "name": "lumen.platform.native.render.gl.GLProgram",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "shaders": {
          "meta": {},
          "name": "shaders",
          "type": "Array<lumen.platform.native.render.gl.GLShader>",
          "doc": "",
          "ispublic": true,
          "signature": "shaders : Array<lumen.platform.native.render.gl.GLShader>",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "attach": {
          "args": [
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            }
          ],
          "meta": {},
          "name": "attach",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "attach(shader:lumen.platform.native.render.gl.GLShader) : Void",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "version",
              "type": "Int",
              "value": null
            },
            {
              "name": "id",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(version:Int, id:Dynamic) ",
          "isstatic": false,
          "isinline": false
        },
        "getType": {
          "args": [],
          "meta": {},
          "name": "getType",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "getType() : String",
          "isstatic": false,
          "isinline": false
        },
        "getShaders": {
          "args": [],
          "meta": {},
          "name": "getShaders",
          "returntype": ": Array<lumen.platform.native.render.gl.GLShader>",
          "doc": "",
          "ispublic": true,
          "signature": "getShaders() : Array<lumen.platform.native.render.gl.GLShader>",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.utils.compat.Matrix3D": {
      "extend": [],
      "meta": {},
      "name": "lumen.utils.compat.Matrix3D",
      "properties": {
        "position": {
          "meta": {},
          "name": "position",
          "type": "lumen.utils.compat.Vector3D",
          "iswrite": true,
          "isread": true,
          "doc": "",
          "signature": "position : lumen.utils.compat.Vector3D",
          "type_desc": "read/write"
        },
        "determinant": {
          "meta": {},
          "name": "determinant",
          "type": "Float",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "determinant : Float",
          "type_desc": "(read only)"
        }
      },
      "doc": "",
      "ispublic": true,
      "members": {
        "rawData": {
          "meta": {},
          "name": "rawData",
          "type": "lumen.utils.compat.Vector<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "rawData : lumen.utils.compat.Vector<Float>",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "appendRotation": {
          "args": [
            {
              "name": "degrees",
              "type": "Float",
              "value": ""
            },
            {
              "name": "axis",
              "type": "lumen.utils.compat.Vector3D",
              "value": ""
            },
            {
              "name": "?pivotPoint",
              "type": "lumen.utils.compat.Vector3D",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "appendRotation",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "appendRotation(degrees:Float, axis:lumen.utils.compat.Vector3D, ?pivotPoint:lumen.utils.compat.Vector3D) : Void",
          "isstatic": false,
          "isinline": false
        },
        "createABCD": {
          "args": [
            {
              "name": "a",
              "type": "Float",
              "value": null
            },
            {
              "name": "b",
              "type": "Float",
              "value": null
            },
            {
              "name": "c",
              "type": "Float",
              "value": null
            },
            {
              "name": "d",
              "type": "Float",
              "value": null
            },
            {
              "name": "tx",
              "type": "Float",
              "value": null
            },
            {
              "name": "ty",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "createABCD",
          "returntype": ": lumen.utils.compat.Matrix3D",
          "doc": "",
          "ispublic": true,
          "signature": "createABCD(a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float) : lumen.utils.compat.Matrix3D",
          "isstatic": true,
          "isinline": false
        },
        "createOrtho": {
          "args": [
            {
              "name": "x0",
              "type": "Float",
              "value": null
            },
            {
              "name": "x1",
              "type": "Float",
              "value": null
            },
            {
              "name": "y0",
              "type": "Float",
              "value": null
            },
            {
              "name": "y1",
              "type": "Float",
              "value": null
            },
            {
              "name": "zNear",
              "type": "Float",
              "value": null
            },
            {
              "name": "zFar",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "createOrtho",
          "returntype": ": lumen.utils.compat.Matrix3D",
          "doc": "",
          "ispublic": true,
          "signature": "createOrtho(x0:Float, x1:Float, y0:Float, y1:Float, zNear:Float, zFar:Float) : lumen.utils.compat.Matrix3D",
          "isstatic": true,
          "isinline": false
        },
        "decompose": {
          "args": [],
          "meta": {},
          "name": "decompose",
          "returntype": ": lumen.utils.compat.Vector<lumen.utils.compat.Vector3D>",
          "doc": "",
          "ispublic": true,
          "signature": "decompose() : lumen.utils.compat.Vector<lumen.utils.compat.Vector3D>",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "?v",
              "type": "lumen.utils.compat.Vector<Float>",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(?v:lumen.utils.compat.Vector<Float>) ",
          "isstatic": false,
          "isinline": false
        },
        "recompose": {
          "args": [
            {
              "name": "components",
              "type": "lumen.utils.compat.Vector<lumen.utils.compat.Vector3D>",
              "value": null
            }
          ],
          "meta": {},
          "name": "recompose",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "recompose(components:lumen.utils.compat.Vector<lumen.utils.compat.Vector3D>) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "transformVectors": {
          "args": [
            {
              "name": "vin",
              "type": "lumen.utils.compat.Vector<Float>",
              "value": null
            },
            {
              "name": "vout",
              "type": "lumen.utils.compat.Vector<Float>",
              "value": null
            }
          ],
          "meta": {},
          "name": "transformVectors",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "transformVectors(vin:lumen.utils.compat.Vector<Float>, vout:lumen.utils.compat.Vector<Float>) : Void",
          "isstatic": false,
          "isinline": false
        },
        "append": {
          "args": [
            {
              "name": "lhs",
              "type": "lumen.utils.compat.Matrix3D",
              "value": null
            }
          ],
          "meta": {},
          "name": "append",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "append(lhs:lumen.utils.compat.Matrix3D) : Void",
          "isstatic": false,
          "isinline": false
        },
        "create2D": {
          "args": [
            {
              "name": "x",
              "type": "Float",
              "value": ""
            },
            {
              "name": "y",
              "type": "Float",
              "value": ""
            },
            {
              "name": "?scale",
              "type": "Float",
              "value": "1"
            },
            {
              "name": "?rotation",
              "type": "Float",
              "value": "0"
            }
          ],
          "meta": {},
          "name": "create2D",
          "returntype": ": lumen.utils.compat.Matrix3D",
          "doc": "",
          "ispublic": true,
          "signature": "create2D(x:Float, y:Float, ?scale:Float=1, ?rotation:Float=0) : lumen.utils.compat.Matrix3D",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.render.gl.GL": {
      "extend": [],
      "meta": {},
      "name": "lumen.platform.native.render.gl.GL",
      "properties": {
        "version": {
          "meta": {},
          "name": "version",
          "type": "Int",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "version : Int",
          "type_desc": "(read only)"
        }
      },
      "doc": "",
      "ispublic": true,
      "members": {
        "lumen_gl_compressed_tex_image_2d": {
          "meta": {},
          "name": "lumen_gl_compressed_tex_image_2d",
          "type": "Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_compressed_tex_image_2d : Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_copy_tex_sub_image_2d": {
          "meta": {},
          "name": "lumen_gl_copy_tex_sub_image_2d",
          "type": "Int->Int->Int->Int->Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_copy_tex_sub_image_2d : Int->Int->Int->Int->Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_viewport": {
          "meta": {},
          "name": "lumen_gl_viewport",
          "type": "Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_viewport : Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_uniform": {
          "meta": {},
          "name": "lumen_gl_get_uniform",
          "type": "Dynamic->lumen.platform.native.render.gl.GLUniformLocation->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_uniform : Dynamic->lumen.platform.native.render.gl.GLUniformLocation->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_vertex_attrib1f": {
          "meta": {},
          "name": "lumen_gl_vertex_attrib1f",
          "type": "Int->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_vertex_attrib1f : Int->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_vertex_attrib2f": {
          "meta": {},
          "name": "lumen_gl_vertex_attrib2f",
          "type": "Int->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_vertex_attrib2f : Int->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_vertex_attrib3f": {
          "meta": {},
          "name": "lumen_gl_vertex_attrib3f",
          "type": "Int->Float->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_vertex_attrib3f : Int->Float->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_vertex_attrib4f": {
          "meta": {},
          "name": "lumen_gl_vertex_attrib4f",
          "type": "Int->Float->Float->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_vertex_attrib4f : Int->Float->Float->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_flush": {
          "meta": {},
          "name": "lumen_gl_flush",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_flush : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_tex_sub_image_2d": {
          "meta": {},
          "name": "lumen_gl_tex_sub_image_2d",
          "type": "Int->Int->Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_tex_sub_image_2d : Int->Int->Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_blend_color": {
          "meta": {},
          "name": "lumen_gl_blend_color",
          "type": "Float->Float->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_blend_color : Float->Float->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_sample_coverage": {
          "meta": {},
          "name": "lumen_gl_sample_coverage",
          "type": "Float->Bool->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_sample_coverage : Float->Bool->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_vertex_attrib": {
          "meta": {},
          "name": "lumen_gl_get_vertex_attrib",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_vertex_attrib : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_framebuffer_attachment_parameter": {
          "meta": {},
          "name": "lumen_gl_get_framebuffer_attachment_parameter",
          "type": "Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_framebuffer_attachment_parameter : Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_color_mask": {
          "meta": {},
          "name": "lumen_gl_color_mask",
          "type": "Bool->Bool->Bool->Bool->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_color_mask : Bool->Bool->Bool->Bool->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_cull_face": {
          "meta": {},
          "name": "lumen_gl_cull_face",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_cull_face : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_front_face": {
          "meta": {},
          "name": "lumen_gl_front_face",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_front_face : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_shader_parameter": {
          "meta": {},
          "name": "lumen_gl_get_shader_parameter",
          "type": "Dynamic->Int->Int",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_shader_parameter : Dynamic->Int->Int",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_validate_program": {
          "meta": {},
          "name": "lumen_gl_validate_program",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_validate_program : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_create_framebuffer": {
          "meta": {},
          "name": "lumen_gl_create_framebuffer",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_create_framebuffer : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_program_info_log": {
          "meta": {},
          "name": "lumen_gl_get_program_info_log",
          "type": "Dynamic->String",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_program_info_log : Dynamic->String",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_delete_render_buffer": {
          "meta": {},
          "name": "lumen_gl_delete_render_buffer",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_delete_render_buffer : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_is_renderbuffer": {
          "meta": {},
          "name": "lumen_gl_is_renderbuffer",
          "type": "Dynamic->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_is_renderbuffer : Dynamic->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_stencil_mask_separate": {
          "meta": {},
          "name": "lumen_gl_stencil_mask_separate",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_stencil_mask_separate : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_blend_equation": {
          "meta": {},
          "name": "lumen_gl_blend_equation",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_blend_equation : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_vertex_attrib1fv": {
          "meta": {},
          "name": "lumen_gl_vertex_attrib1fv",
          "type": "Int->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_vertex_attrib1fv : Int->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_vertex_attrib2fv": {
          "meta": {},
          "name": "lumen_gl_vertex_attrib2fv",
          "type": "Int->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_vertex_attrib2fv : Int->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_vertex_attrib3fv": {
          "meta": {},
          "name": "lumen_gl_vertex_attrib3fv",
          "type": "Int->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_vertex_attrib3fv : Int->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_vertex_attrib4fv": {
          "meta": {},
          "name": "lumen_gl_vertex_attrib4fv",
          "type": "Int->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_vertex_attrib4fv : Int->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_link_program": {
          "meta": {},
          "name": "lumen_gl_link_program",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_link_program : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_tex_image_2d": {
          "meta": {},
          "name": "lumen_gl_tex_image_2d",
          "type": "Int->Int->Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_tex_image_2d : Int->Int->Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_is_buffer": {
          "meta": {},
          "name": "lumen_gl_is_buffer",
          "type": "Dynamic->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_is_buffer : Dynamic->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_vertex_attrib_offset": {
          "meta": {},
          "name": "lumen_gl_get_vertex_attrib_offset",
          "type": "Int->Int->Int",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_vertex_attrib_offset : Int->Int->Int",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_draw_elements": {
          "meta": {},
          "name": "lumen_gl_draw_elements",
          "type": "Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_draw_elements : Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_disable": {
          "meta": {},
          "name": "lumen_gl_disable",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_disable : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_parameter": {
          "meta": {},
          "name": "lumen_gl_get_parameter",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_parameter : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_shader_info_log": {
          "meta": {},
          "name": "lumen_gl_get_shader_info_log",
          "type": "Dynamic->String",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_shader_info_log : Dynamic->String",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_pixel_storei": {
          "meta": {},
          "name": "lumen_gl_pixel_storei",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_pixel_storei : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_is_framebuffer": {
          "meta": {},
          "name": "lumen_gl_is_framebuffer",
          "type": "Dynamic->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_is_framebuffer : Dynamic->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_bind_framebuffer": {
          "meta": {},
          "name": "lumen_gl_bind_framebuffer",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_bind_framebuffer : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_clear_stencil": {
          "meta": {},
          "name": "lumen_gl_clear_stencil",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_clear_stencil : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_attrib_location": {
          "meta": {},
          "name": "lumen_gl_get_attrib_location",
          "type": "Dynamic->String->Int",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_attrib_location : Dynamic->String->Int",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform_matrix": {
          "meta": {},
          "name": "lumen_gl_uniform_matrix",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->Bool->lumen.platform.native.utils.ByteArray->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform_matrix : lumen.platform.native.render.gl.GLUniformLocation->Bool->lumen.platform.native.utils.ByteArray->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform1f": {
          "meta": {},
          "name": "lumen_gl_uniform1f",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform1f : lumen.platform.native.render.gl.GLUniformLocation->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform1i": {
          "meta": {},
          "name": "lumen_gl_uniform1i",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform1i : lumen.platform.native.render.gl.GLUniformLocation->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform2f": {
          "meta": {},
          "name": "lumen_gl_uniform2f",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform2f : lumen.platform.native.render.gl.GLUniformLocation->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform2i": {
          "meta": {},
          "name": "lumen_gl_uniform2i",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform2i : lumen.platform.native.render.gl.GLUniformLocation->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform3f": {
          "meta": {},
          "name": "lumen_gl_uniform3f",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->Float->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform3f : lumen.platform.native.render.gl.GLUniformLocation->Float->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform3i": {
          "meta": {},
          "name": "lumen_gl_uniform3i",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform3i : lumen.platform.native.render.gl.GLUniformLocation->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform4f": {
          "meta": {},
          "name": "lumen_gl_uniform4f",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->Float->Float->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform4f : lumen.platform.native.render.gl.GLUniformLocation->Float->Float->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform4i": {
          "meta": {},
          "name": "lumen_gl_uniform4i",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform4i : lumen.platform.native.render.gl.GLUniformLocation->Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_active_texture": {
          "meta": {},
          "name": "lumen_gl_active_texture",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_active_texture : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_context_attributes": {
          "meta": {},
          "name": "lumen_gl_get_context_attributes",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_context_attributes : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_buffer_sub_data": {
          "meta": {},
          "name": "lumen_gl_buffer_sub_data",
          "type": "Int->Int->lumen.utils.ByteArray->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_buffer_sub_data : Int->Int->lumen.utils.ByteArray->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_delete_shader": {
          "meta": {},
          "name": "lumen_gl_delete_shader",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_delete_shader : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_tex_parameter": {
          "meta": {},
          "name": "lumen_gl_get_tex_parameter",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_tex_parameter : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_hint": {
          "meta": {},
          "name": "lumen_gl_hint",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_hint : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_bind_buffer": {
          "meta": {},
          "name": "lumen_gl_bind_buffer",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_bind_buffer : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_render_buffer_parameter": {
          "meta": {},
          "name": "lumen_gl_get_render_buffer_parameter",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_render_buffer_parameter : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_blend_func_separate": {
          "meta": {},
          "name": "lumen_gl_blend_func_separate",
          "type": "Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_blend_func_separate : Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_stencil_op": {
          "meta": {},
          "name": "lumen_gl_stencil_op",
          "type": "Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_stencil_op : Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_uniform_location": {
          "meta": {},
          "name": "lumen_gl_get_uniform_location",
          "type": "Dynamic->String->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_uniform_location : Dynamic->String->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_copy_tex_image_2d": {
          "meta": {},
          "name": "lumen_gl_copy_tex_image_2d",
          "type": "Int->Int->Int->Int->Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_copy_tex_image_2d : Int->Int->Int->Int->Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_create_shader": {
          "meta": {},
          "name": "lumen_gl_create_shader",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_create_shader : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_create_program": {
          "meta": {},
          "name": "lumen_gl_create_program",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_create_program : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_check_framebuffer_status": {
          "meta": {},
          "name": "lumen_gl_check_framebuffer_status",
          "type": "Int->Int",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_check_framebuffer_status : Int->Int",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_framebuffer_texture2D": {
          "meta": {},
          "name": "lumen_gl_framebuffer_texture2D",
          "type": "Int->Int->Int->Dynamic->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_framebuffer_texture2D : Int->Int->Int->Dynamic->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_enable_vertex_attrib_array": {
          "meta": {},
          "name": "lumen_gl_enable_vertex_attrib_array",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_enable_vertex_attrib_array : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_depth_func": {
          "meta": {},
          "name": "lumen_gl_depth_func",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_depth_func : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_compressed_tex_sub_image_2d": {
          "meta": {},
          "name": "lumen_gl_compressed_tex_sub_image_2d",
          "type": "Int->Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_compressed_tex_sub_image_2d : Int->Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_buffer_data": {
          "meta": {},
          "name": "lumen_gl_buffer_data",
          "type": "Int->lumen.utils.ByteArray->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_buffer_data : Int->lumen.utils.ByteArray->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_delete_program": {
          "meta": {},
          "name": "lumen_gl_delete_program",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_delete_program : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_shader_precision_format": {
          "meta": {},
          "name": "lumen_gl_get_shader_precision_format",
          "type": "Int->Int->lumen.platform.native.render.gl.ShaderPrecisionFormat",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_shader_precision_format : Int->Int->lumen.platform.native.render.gl.ShaderPrecisionFormat",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_depth_mask": {
          "meta": {},
          "name": "lumen_gl_depth_mask",
          "type": "Bool->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_depth_mask : Bool->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_read_pixels": {
          "meta": {},
          "name": "lumen_gl_read_pixels",
          "type": "Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_read_pixels : Int->Int->Int->Int->Int->Int->Null->Null->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_program_parameter": {
          "meta": {},
          "name": "lumen_gl_get_program_parameter",
          "type": "Dynamic->Int->Int",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_program_parameter : Dynamic->Int->Int",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_disable_vertex_attrib_array": {
          "meta": {},
          "name": "lumen_gl_disable_vertex_attrib_array",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_disable_vertex_attrib_array : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_delete_framebuffer": {
          "meta": {},
          "name": "lumen_gl_delete_framebuffer",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_delete_framebuffer : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_tex_parameterf": {
          "meta": {},
          "name": "lumen_gl_tex_parameterf",
          "type": "Int->Int->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_tex_parameterf : Int->Int->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_tex_parameteri": {
          "meta": {},
          "name": "lumen_gl_tex_parameteri",
          "type": "Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_tex_parameteri : Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_vertex_attrib_pointer": {
          "meta": {},
          "name": "lumen_gl_vertex_attrib_pointer",
          "type": "Int->Int->Int->Bool->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_vertex_attrib_pointer : Int->Int->Int->Bool->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_renderbuffer_storage": {
          "meta": {},
          "name": "lumen_gl_renderbuffer_storage",
          "type": "Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_renderbuffer_storage : Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_stencil_func": {
          "meta": {},
          "name": "lumen_gl_stencil_func",
          "type": "Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_stencil_func : Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_active_uniform": {
          "meta": {},
          "name": "lumen_gl_get_active_uniform",
          "type": "Dynamic->Int->lumen.platform.native.render.gl.GLActiveInfo",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_active_uniform : Dynamic->Int->lumen.platform.native.render.gl.GLActiveInfo",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_stencil_func_separate": {
          "meta": {},
          "name": "lumen_gl_stencil_func_separate",
          "type": "Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_stencil_func_separate : Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_is_program": {
          "meta": {},
          "name": "lumen_gl_is_program",
          "type": "Dynamic->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_is_program : Dynamic->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_stencil_mask": {
          "meta": {},
          "name": "lumen_gl_stencil_mask",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_stencil_mask : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_clear": {
          "meta": {},
          "name": "lumen_gl_clear",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_clear : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_active_attrib": {
          "meta": {},
          "name": "lumen_gl_get_active_attrib",
          "type": "Dynamic->Int->lumen.platform.native.render.gl.GLActiveInfo",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_active_attrib : Dynamic->Int->lumen.platform.native.render.gl.GLActiveInfo",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_enable": {
          "meta": {},
          "name": "lumen_gl_enable",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_enable : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_is_enabled": {
          "meta": {},
          "name": "lumen_gl_is_enabled",
          "type": "Int->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_is_enabled : Int->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform1fv": {
          "meta": {},
          "name": "lumen_gl_uniform1fv",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform1fv : lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform1iv": {
          "meta": {},
          "name": "lumen_gl_uniform1iv",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform1iv : lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform2fv": {
          "meta": {},
          "name": "lumen_gl_uniform2fv",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform2fv : lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform2iv": {
          "meta": {},
          "name": "lumen_gl_uniform2iv",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform2iv : lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform3fv": {
          "meta": {},
          "name": "lumen_gl_uniform3fv",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform3fv : lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform3iv": {
          "meta": {},
          "name": "lumen_gl_uniform3iv",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform3iv : lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform4fv": {
          "meta": {},
          "name": "lumen_gl_uniform4fv",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform4fv : lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_uniform4iv": {
          "meta": {},
          "name": "lumen_gl_uniform4iv",
          "type": "lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_uniform4iv : lumen.platform.native.render.gl.GLUniformLocation->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_error": {
          "meta": {},
          "name": "lumen_gl_get_error",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_error : Int",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_polygon_offset": {
          "meta": {},
          "name": "lumen_gl_polygon_offset",
          "type": "Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_polygon_offset : Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_blend_equation_separate": {
          "meta": {},
          "name": "lumen_gl_blend_equation_separate",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_blend_equation_separate : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_detach_shader": {
          "meta": {},
          "name": "lumen_gl_detach_shader",
          "type": "Dynamic->Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_detach_shader : Dynamic->Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_shader_source": {
          "meta": {},
          "name": "lumen_gl_shader_source",
          "type": "Dynamic->String->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_shader_source : Dynamic->String->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_supported_extensions": {
          "meta": {},
          "name": "lumen_gl_get_supported_extensions",
          "type": "Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_supported_extensions : Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_finish": {
          "meta": {},
          "name": "lumen_gl_finish",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_finish : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_bind_renderbuffer": {
          "meta": {},
          "name": "lumen_gl_bind_renderbuffer",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_bind_renderbuffer : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_buffer_paramerter": {
          "meta": {},
          "name": "lumen_gl_get_buffer_paramerter",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_buffer_paramerter : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_stencil_op_separate": {
          "meta": {},
          "name": "lumen_gl_stencil_op_separate",
          "type": "Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_stencil_op_separate : Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_delete_buffer": {
          "meta": {},
          "name": "lumen_gl_delete_buffer",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_delete_buffer : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_create_render_buffer": {
          "meta": {},
          "name": "lumen_gl_create_render_buffer",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_create_render_buffer : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_line_width": {
          "meta": {},
          "name": "lumen_gl_line_width",
          "type": "Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_line_width : Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_draw_arrays": {
          "meta": {},
          "name": "lumen_gl_draw_arrays",
          "type": "Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_draw_arrays : Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_bind_attrib_location": {
          "meta": {},
          "name": "lumen_gl_bind_attrib_location",
          "type": "Dynamic->Int->String->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_bind_attrib_location : Dynamic->Int->String->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_create_texture": {
          "meta": {},
          "name": "lumen_gl_create_texture",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_create_texture : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_is_shader": {
          "meta": {},
          "name": "lumen_gl_is_shader",
          "type": "Dynamic->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_is_shader : Dynamic->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_get_shader_source": {
          "meta": {},
          "name": "lumen_gl_get_shader_source",
          "type": "Dynamic->String",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_get_shader_source : Dynamic->String",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_attach_shader": {
          "meta": {},
          "name": "lumen_gl_attach_shader",
          "type": "Dynamic->Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_attach_shader : Dynamic->Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_clear_color": {
          "meta": {},
          "name": "lumen_gl_clear_color",
          "type": "Float->Float->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_clear_color : Float->Float->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_version": {
          "meta": {},
          "name": "lumen_gl_version",
          "type": "String",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_version : String",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_generate_mipmap": {
          "meta": {},
          "name": "lumen_gl_generate_mipmap",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_generate_mipmap : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_framebuffer_renderbuffer": {
          "meta": {},
          "name": "lumen_gl_framebuffer_renderbuffer",
          "type": "Int->Int->Int->Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_framebuffer_renderbuffer : Int->Int->Int->Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_create_buffer": {
          "meta": {},
          "name": "lumen_gl_create_buffer",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_create_buffer : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_delete_texture": {
          "meta": {},
          "name": "lumen_gl_delete_texture",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_delete_texture : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_bind_texture": {
          "meta": {},
          "name": "lumen_gl_bind_texture",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_bind_texture : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_depth_range": {
          "meta": {},
          "name": "lumen_gl_depth_range",
          "type": "Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_depth_range : Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_use_program": {
          "meta": {},
          "name": "lumen_gl_use_program",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_use_program : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_scissor": {
          "meta": {},
          "name": "lumen_gl_scissor",
          "type": "Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_scissor : Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_compile_shader": {
          "meta": {},
          "name": "lumen_gl_compile_shader",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_compile_shader : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_clear_depth": {
          "meta": {},
          "name": "lumen_gl_clear_depth",
          "type": "Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_clear_depth : Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_is_texture": {
          "meta": {},
          "name": "lumen_gl_is_texture",
          "type": "Dynamic->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_is_texture : Dynamic->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gl_blend_func": {
          "meta": {},
          "name": "lumen_gl_blend_func",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gl_blend_func : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "depthRange": {
          "args": [
            {
              "name": "zNear",
              "type": "Float",
              "value": null
            },
            {
              "name": "zFar",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "depthRange",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "depthRange(zNear:Float, zFar:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "stencilFunc": {
          "args": [
            {
              "name": "func",
              "type": "Int",
              "value": null
            },
            {
              "name": "ref",
              "type": "Int",
              "value": null
            },
            {
              "name": "mask",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "stencilFunc",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "stencilFunc(func:Int, ref:Int, mask:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getShaderSource": {
          "args": [
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            }
          ],
          "meta": {},
          "name": "getShaderSource",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "getShaderSource(shader:lumen.platform.native.render.gl.GLShader) : String",
          "isstatic": true,
          "isinline": false
        },
        "hint": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "mode",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "hint",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "hint(target:Int, mode:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "stencilMask": {
          "args": [
            {
              "name": "mask",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "stencilMask",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "stencilMask(mask:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniformMatrix2fv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "transpose",
              "type": "Bool",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniformMatrix2fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniformMatrix2fv(location:lumen.platform.native.render.gl.GLUniformLocation, transpose:Bool, v:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniformMatrix3fv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "transpose",
              "type": "Bool",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniformMatrix3fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniformMatrix3fv(location:lumen.platform.native.render.gl.GLUniformLocation, transpose:Bool, v:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniformMatrix4fv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "transpose",
              "type": "Bool",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniformMatrix4fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniformMatrix4fv(location:lumen.platform.native.render.gl.GLUniformLocation, transpose:Bool, v:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bufferSubData": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "offset",
              "type": "Int",
              "value": null
            },
            {
              "name": "data",
              "type": "lumen.utils.IMemoryRange",
              "value": null
            }
          ],
          "meta": {},
          "name": "bufferSubData",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bufferSubData(target:Int, offset:Int, data:lumen.utils.IMemoryRange) : Void",
          "isstatic": true,
          "isinline": false
        },
        "stencilMaskSeparate": {
          "args": [
            {
              "name": "face",
              "type": "Int",
              "value": null
            },
            {
              "name": "mask",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "stencilMaskSeparate",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "stencilMaskSeparate(face:Int, mask:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "load": {
          "args": [
            {
              "name": "inName",
              "type": "String",
              "value": null
            },
            {
              "name": "inArgCount",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "load",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "load(inName:String, inArgCount:Int) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "clear": {
          "args": [
            {
              "name": "mask",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "clear",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "clear(mask:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "disableVertexAttribArray": {
          "args": [
            {
              "name": "index",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "disableVertexAttribArray",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "disableVertexAttribArray(index:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "blendFuncSeparate": {
          "args": [
            {
              "name": "srcRGB",
              "type": "Int",
              "value": null
            },
            {
              "name": "dstRGB",
              "type": "Int",
              "value": null
            },
            {
              "name": "srcAlpha",
              "type": "Int",
              "value": null
            },
            {
              "name": "dstAlpha",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "blendFuncSeparate",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "blendFuncSeparate(srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "createFramebuffer": {
          "args": [],
          "meta": {},
          "name": "createFramebuffer",
          "returntype": ": lumen.platform.native.render.gl.GLFramebuffer",
          "doc": "",
          "ispublic": true,
          "signature": "createFramebuffer() : lumen.platform.native.render.gl.GLFramebuffer",
          "isstatic": true,
          "isinline": false
        },
        "getProgramInfoLog": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            }
          ],
          "meta": {},
          "name": "getProgramInfoLog",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "getProgramInfoLog(program:lumen.platform.native.render.gl.GLProgram) : String",
          "isstatic": true,
          "isinline": false
        },
        "getShaderPrecisionFormat": {
          "args": [
            {
              "name": "shadertype",
              "type": "Int",
              "value": null
            },
            {
              "name": "precisiontype",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getShaderPrecisionFormat",
          "returntype": ": lumen.platform.native.render.gl.ShaderPrecisionFormat",
          "doc": "",
          "ispublic": true,
          "signature": "getShaderPrecisionFormat(shadertype:Int, precisiontype:Int) : lumen.platform.native.render.gl.ShaderPrecisionFormat",
          "isstatic": true,
          "isinline": false
        },
        "getUniformLocation": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            },
            {
              "name": "name",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "getUniformLocation",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getUniformLocation(program:lumen.platform.native.render.gl.GLProgram, name:String) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "deleteFramebuffer": {
          "args": [
            {
              "name": "framebuffer",
              "type": "lumen.platform.native.render.gl.GLFramebuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteFramebuffer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteFramebuffer(framebuffer:lumen.platform.native.render.gl.GLFramebuffer) : Void",
          "isstatic": true,
          "isinline": false
        },
        "versionString": {
          "args": [],
          "meta": {},
          "name": "versionString",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "versionString() : String",
          "isstatic": true,
          "isinline": false
        },
        "deleteProgram": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteProgram",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteProgram(program:lumen.platform.native.render.gl.GLProgram) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getTexParameter": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getTexParameter",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getTexParameter(target:Int, pname:Int) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "getError": {
          "args": [],
          "meta": {},
          "name": "getError",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getError() : Int",
          "isstatic": true,
          "isinline": false
        },
        "stencilOpSeparate": {
          "args": [
            {
              "name": "face",
              "type": "Int",
              "value": null
            },
            {
              "name": "fail",
              "type": "Int",
              "value": null
            },
            {
              "name": "zfail",
              "type": "Int",
              "value": null
            },
            {
              "name": "zpass",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "stencilOpSeparate",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "stencilOpSeparate(face:Int, fail:Int, zfail:Int, zpass:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "vertexAttrib1f": {
          "args": [
            {
              "name": "indx",
              "type": "Int",
              "value": null
            },
            {
              "name": "x",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "vertexAttrib1f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "vertexAttrib1f(indx:Int, x:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "vertexAttrib2f": {
          "args": [
            {
              "name": "indx",
              "type": "Int",
              "value": null
            },
            {
              "name": "x",
              "type": "Float",
              "value": null
            },
            {
              "name": "y",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "vertexAttrib2f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "vertexAttrib2f(indx:Int, x:Float, y:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "vertexAttrib3f": {
          "args": [
            {
              "name": "indx",
              "type": "Int",
              "value": null
            },
            {
              "name": "x",
              "type": "Float",
              "value": null
            },
            {
              "name": "y",
              "type": "Float",
              "value": null
            },
            {
              "name": "z",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "vertexAttrib3f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "vertexAttrib3f(indx:Int, x:Float, y:Float, z:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "vertexAttrib4f": {
          "args": [
            {
              "name": "indx",
              "type": "Int",
              "value": null
            },
            {
              "name": "x",
              "type": "Float",
              "value": null
            },
            {
              "name": "y",
              "type": "Float",
              "value": null
            },
            {
              "name": "z",
              "type": "Float",
              "value": null
            },
            {
              "name": "w",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "vertexAttrib4f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "vertexAttrib4f(indx:Int, x:Float, y:Float, z:Float, w:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "activeTexture": {
          "args": [
            {
              "name": "texture",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "activeTexture",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "activeTexture(texture:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getVertexAttribOffset": {
          "args": [
            {
              "name": "index",
              "type": "Int",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getVertexAttribOffset",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getVertexAttribOffset(index:Int, pname:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "stencilOp": {
          "args": [
            {
              "name": "fail",
              "type": "Int",
              "value": null
            },
            {
              "name": "zfail",
              "type": "Int",
              "value": null
            },
            {
              "name": "zpass",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "stencilOp",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "stencilOp(fail:Int, zfail:Int, zpass:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getActiveUniform": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            },
            {
              "name": "index",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getActiveUniform",
          "returntype": ": lumen.platform.native.render.gl.GLActiveInfo",
          "doc": "",
          "ispublic": true,
          "signature": "getActiveUniform(program:lumen.platform.native.render.gl.GLProgram, index:Int) : lumen.platform.native.render.gl.GLActiveInfo",
          "isstatic": true,
          "isinline": false
        },
        "getParameter": {
          "args": [
            {
              "name": "pname",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getParameter",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getParameter(pname:Int) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "drawElements": {
          "args": [
            {
              "name": "mode",
              "type": "Int",
              "value": null
            },
            {
              "name": "count",
              "type": "Int",
              "value": null
            },
            {
              "name": "type",
              "type": "Int",
              "value": null
            },
            {
              "name": "offset",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "drawElements",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "drawElements(mode:Int, count:Int, type:Int, offset:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform1fv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "x",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform1fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform1fv(location:lumen.platform.native.render.gl.GLUniformLocation, x:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform1iv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Int32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform1iv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform1iv(location:lumen.platform.native.render.gl.GLUniformLocation, v:lumen.utils.Int32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform2fv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform2fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform2fv(location:lumen.platform.native.render.gl.GLUniformLocation, v:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform2iv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Int32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform2iv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform2iv(location:lumen.platform.native.render.gl.GLUniformLocation, v:lumen.utils.Int32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform3fv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform3fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform3fv(location:lumen.platform.native.render.gl.GLUniformLocation, v:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform3iv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Int32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform3iv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform3iv(location:lumen.platform.native.render.gl.GLUniformLocation, v:lumen.utils.Int32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform4fv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform4fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform4fv(location:lumen.platform.native.render.gl.GLUniformLocation, v:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform4iv": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "v",
              "type": "lumen.utils.Int32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform4iv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform4iv(location:lumen.platform.native.render.gl.GLUniformLocation, v:lumen.utils.Int32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "compileShader": {
          "args": [
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            }
          ],
          "meta": {},
          "name": "compileShader",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "compileShader(shader:lumen.platform.native.render.gl.GLShader) : Void",
          "isstatic": true,
          "isinline": false
        },
        "generateMipmap": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "generateMipmap",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "generateMipmap(target:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "clearStencil": {
          "args": [
            {
              "name": "s",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "clearStencil",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "clearStencil(s:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "createProgram": {
          "args": [],
          "meta": {},
          "name": "createProgram",
          "returntype": ": lumen.platform.native.render.gl.GLProgram",
          "doc": "",
          "ispublic": true,
          "signature": "createProgram() : lumen.platform.native.render.gl.GLProgram",
          "isstatic": true,
          "isinline": false
        },
        "getAttribLocation": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            },
            {
              "name": "name",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "getAttribLocation",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getAttribLocation(program:lumen.platform.native.render.gl.GLProgram, name:String) : Int",
          "isstatic": true,
          "isinline": false
        },
        "blendColor": {
          "args": [
            {
              "name": "red",
              "type": "Float",
              "value": null
            },
            {
              "name": "green",
              "type": "Float",
              "value": null
            },
            {
              "name": "blue",
              "type": "Float",
              "value": null
            },
            {
              "name": "alpha",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "blendColor",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "blendColor(red:Float, green:Float, blue:Float, alpha:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getActiveAttrib": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            },
            {
              "name": "index",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getActiveAttrib",
          "returntype": ": lumen.platform.native.render.gl.GLActiveInfo",
          "doc": "",
          "ispublic": true,
          "signature": "getActiveAttrib(program:lumen.platform.native.render.gl.GLProgram, index:Int) : lumen.platform.native.render.gl.GLActiveInfo",
          "isstatic": true,
          "isinline": false
        },
        "copyTexImage2D": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "level",
              "type": "Int",
              "value": null
            },
            {
              "name": "internalformat",
              "type": "Int",
              "value": null
            },
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            },
            {
              "name": "border",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "copyTexImage2D",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "copyTexImage2D(target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "polygonOffset": {
          "args": [
            {
              "name": "factor",
              "type": "Float",
              "value": null
            },
            {
              "name": "units",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "polygonOffset",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "polygonOffset(factor:Float, units:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bindFramebuffer": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "framebuffer",
              "type": "lumen.platform.native.render.gl.GLFramebuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "bindFramebuffer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bindFramebuffer(target:Int, framebuffer:lumen.platform.native.render.gl.GLFramebuffer) : Void",
          "isstatic": true,
          "isinline": false
        },
        "detachShader": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            },
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            }
          ],
          "meta": {},
          "name": "detachShader",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "detachShader(program:lumen.platform.native.render.gl.GLProgram, shader:lumen.platform.native.render.gl.GLShader) : Void",
          "isstatic": true,
          "isinline": false
        },
        "vertexAttrib1fv": {
          "args": [
            {
              "name": "indx",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "vertexAttrib1fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "vertexAttrib1fv(indx:Int, values:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "vertexAttrib2fv": {
          "args": [
            {
              "name": "indx",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "vertexAttrib2fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "vertexAttrib2fv(indx:Int, values:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "vertexAttrib3fv": {
          "args": [
            {
              "name": "indx",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "vertexAttrib3fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "vertexAttrib3fv(indx:Int, values:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "vertexAttrib4fv": {
          "args": [
            {
              "name": "indx",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "lumen.utils.Float32Array",
              "value": null
            }
          ],
          "meta": {},
          "name": "vertexAttrib4fv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "vertexAttrib4fv(indx:Int, values:lumen.utils.Float32Array) : Void",
          "isstatic": true,
          "isinline": false
        },
        "validateProgram": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            }
          ],
          "meta": {},
          "name": "validateProgram",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "validateProgram(program:lumen.platform.native.render.gl.GLProgram) : Void",
          "isstatic": true,
          "isinline": false
        },
        "createBuffer": {
          "args": [],
          "meta": {},
          "name": "createBuffer",
          "returntype": ": lumen.platform.native.render.gl.GLBuffer",
          "doc": "",
          "ispublic": true,
          "signature": "createBuffer() : lumen.platform.native.render.gl.GLBuffer",
          "isstatic": true,
          "isinline": false
        },
        "getShaderInfoLog": {
          "args": [
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            }
          ],
          "meta": {},
          "name": "getShaderInfoLog",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "getShaderInfoLog(shader:lumen.platform.native.render.gl.GLShader) : String",
          "isstatic": true,
          "isinline": false
        },
        "getExtension": {
          "args": [
            {
              "name": "name",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "getExtension",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getExtension(name:String) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "isShader": {
          "args": [
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            }
          ],
          "meta": {},
          "name": "isShader",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isShader(shader:lumen.platform.native.render.gl.GLShader) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "useProgram": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            }
          ],
          "meta": {},
          "name": "useProgram",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "useProgram(program:lumen.platform.native.render.gl.GLProgram) : Void",
          "isstatic": true,
          "isinline": false
        },
        "isProgram": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            }
          ],
          "meta": {},
          "name": "isProgram",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isProgram(program:lumen.platform.native.render.gl.GLProgram) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "enable": {
          "args": [
            {
              "name": "cap",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "enable",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "enable(cap:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bindBuffer": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "buffer",
              "type": "lumen.platform.native.render.gl.GLBuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "bindBuffer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bindBuffer(target:Int, buffer:lumen.platform.native.render.gl.GLBuffer) : Void",
          "isstatic": true,
          "isinline": false
        },
        "drawArrays": {
          "args": [
            {
              "name": "mode",
              "type": "Int",
              "value": null
            },
            {
              "name": "first",
              "type": "Int",
              "value": null
            },
            {
              "name": "count",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "drawArrays",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "drawArrays(mode:Int, first:Int, count:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "deleteTexture": {
          "args": [
            {
              "name": "texture",
              "type": "lumen.platform.native.render.gl.GLTexture",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteTexture",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteTexture(texture:lumen.platform.native.render.gl.GLTexture) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getFramebufferAttachmentParameter": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "attachment",
              "type": "Int",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getFramebufferAttachmentParameter",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getFramebufferAttachmentParameter(target:Int, attachment:Int, pname:Int) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "frontFace": {
          "args": [
            {
              "name": "mode",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "frontFace",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "frontFace(mode:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "pixelStorei": {
          "args": [
            {
              "name": "pname",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "pixelStorei",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "pixelStorei(pname:Int, param:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "isRenderbuffer": {
          "args": [
            {
              "name": "renderbuffer",
              "type": "lumen.platform.native.render.gl.GLRenderbuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "isRenderbuffer",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isRenderbuffer(renderbuffer:lumen.platform.native.render.gl.GLRenderbuffer) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "isEnabled": {
          "args": [
            {
              "name": "cap",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "isEnabled",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isEnabled(cap:Int) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "flush": {
          "args": [],
          "meta": {},
          "name": "flush",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "flush() : Void",
          "isstatic": true,
          "isinline": false
        },
        "blendEquation": {
          "args": [
            {
              "name": "mode",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "blendEquation",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "blendEquation(mode:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "get_version": {
          "args": [],
          "meta": {},
          "name": "get_version",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "get_version() : Int",
          "isstatic": true,
          "isinline": false
        },
        "isFramebuffer": {
          "args": [
            {
              "name": "framebuffer",
              "type": "lumen.platform.native.render.gl.GLFramebuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "isFramebuffer",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isFramebuffer(framebuffer:lumen.platform.native.render.gl.GLFramebuffer) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "deleteShader": {
          "args": [
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteShader",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteShader(shader:lumen.platform.native.render.gl.GLShader) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getUniform": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            },
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            }
          ],
          "meta": {},
          "name": "getUniform",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getUniform(program:lumen.platform.native.render.gl.GLProgram, location:lumen.platform.native.render.gl.GLUniformLocation) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "scissor": {
          "args": [
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "scissor",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "scissor(x:Int, y:Int, width:Int, height:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "createRenderbuffer": {
          "args": [],
          "meta": {},
          "name": "createRenderbuffer",
          "returntype": ": lumen.platform.native.render.gl.GLRenderbuffer",
          "doc": "",
          "ispublic": true,
          "signature": "createRenderbuffer() : lumen.platform.native.render.gl.GLRenderbuffer",
          "isstatic": true,
          "isinline": false
        },
        "readPixels": {
          "args": [
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            },
            {
              "name": "format",
              "type": "Int",
              "value": null
            },
            {
              "name": "type",
              "type": "Int",
              "value": null
            },
            {
              "name": "pixels",
              "type": "lumen.utils.ArrayBufferView",
              "value": null
            }
          ],
          "meta": {},
          "name": "readPixels",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "readPixels(x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:lumen.utils.ArrayBufferView) : Void",
          "isstatic": true,
          "isinline": false
        },
        "finish": {
          "args": [],
          "meta": {},
          "name": "finish",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "finish() : Void",
          "isstatic": true,
          "isinline": false
        },
        "createTexture": {
          "args": [],
          "meta": {},
          "name": "createTexture",
          "returntype": ": lumen.platform.native.render.gl.GLTexture",
          "doc": "",
          "ispublic": true,
          "signature": "createTexture() : lumen.platform.native.render.gl.GLTexture",
          "isstatic": true,
          "isinline": false
        },
        "renderbufferStorage": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "internalformat",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "renderbufferStorage",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "renderbufferStorage(target:Int, internalformat:Int, width:Int, height:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "blendFunc": {
          "args": [
            {
              "name": "sfactor",
              "type": "Int",
              "value": null
            },
            {
              "name": "dfactor",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "blendFunc",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "blendFunc(sfactor:Int, dfactor:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform1f": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "x",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform1f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform1f(location:lumen.platform.native.render.gl.GLUniformLocation, x:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform1i": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "x",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform1i",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform1i(location:lumen.platform.native.render.gl.GLUniformLocation, x:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform2f": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "x",
              "type": "Float",
              "value": null
            },
            {
              "name": "y",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform2f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform2f(location:lumen.platform.native.render.gl.GLUniformLocation, x:Float, y:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform2i": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform2i",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform2i(location:lumen.platform.native.render.gl.GLUniformLocation, x:Int, y:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform3f": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "x",
              "type": "Float",
              "value": null
            },
            {
              "name": "y",
              "type": "Float",
              "value": null
            },
            {
              "name": "z",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform3f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform3f(location:lumen.platform.native.render.gl.GLUniformLocation, x:Float, y:Float, z:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform3i": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            },
            {
              "name": "z",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform3i",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform3i(location:lumen.platform.native.render.gl.GLUniformLocation, x:Int, y:Int, z:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform4f": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "x",
              "type": "Float",
              "value": null
            },
            {
              "name": "y",
              "type": "Float",
              "value": null
            },
            {
              "name": "z",
              "type": "Float",
              "value": null
            },
            {
              "name": "w",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform4f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform4f(location:lumen.platform.native.render.gl.GLUniformLocation, x:Float, y:Float, z:Float, w:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniform4i": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            },
            {
              "name": "z",
              "type": "Int",
              "value": null
            },
            {
              "name": "w",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniform4i",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniform4i(location:lumen.platform.native.render.gl.GLUniformLocation, x:Int, y:Int, z:Int, w:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "linkProgram": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            }
          ],
          "meta": {},
          "name": "linkProgram",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "linkProgram(program:lumen.platform.native.render.gl.GLProgram) : Void",
          "isstatic": true,
          "isinline": false
        },
        "checkFramebufferStatus": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "checkFramebufferStatus",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "checkFramebufferStatus(target:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "lineWidth": {
          "args": [
            {
              "name": "width",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "lineWidth",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "lineWidth(width:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bufferData": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "data",
              "type": "lumen.utils.IMemoryRange",
              "value": null
            },
            {
              "name": "usage",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "bufferData",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bufferData(target:Int, data:lumen.utils.IMemoryRange, usage:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getAttachedShaders": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            }
          ],
          "meta": {},
          "name": "getAttachedShaders",
          "returntype": ": Array<lumen.platform.native.render.gl.GLShader>",
          "doc": "",
          "ispublic": true,
          "signature": "getAttachedShaders(program:lumen.platform.native.render.gl.GLProgram) : Array<lumen.platform.native.render.gl.GLShader>",
          "isstatic": true,
          "isinline": false
        },
        "getBufferParameter": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getBufferParameter",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getBufferParameter(target:Int, pname:Int) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "bindRenderbuffer": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "renderbuffer",
              "type": "lumen.platform.native.render.gl.GLRenderbuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "bindRenderbuffer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bindRenderbuffer(target:Int, renderbuffer:lumen.platform.native.render.gl.GLRenderbuffer) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getProgramParameter": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getProgramParameter",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getProgramParameter(program:lumen.platform.native.render.gl.GLProgram, pname:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "depthFunc": {
          "args": [
            {
              "name": "func",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "depthFunc",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "depthFunc(func:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bindTexture": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "texture",
              "type": "lumen.platform.native.render.gl.GLTexture",
              "value": null
            }
          ],
          "meta": {},
          "name": "bindTexture",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bindTexture(target:Int, texture:lumen.platform.native.render.gl.GLTexture) : Void",
          "isstatic": true,
          "isinline": false
        },
        "viewport": {
          "args": [
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "viewport",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "viewport(x:Int, y:Int, width:Int, height:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bindAttribLocation": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            },
            {
              "name": "index",
              "type": "Int",
              "value": null
            },
            {
              "name": "name",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "bindAttribLocation",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bindAttribLocation(program:lumen.platform.native.render.gl.GLProgram, index:Int, name:String) : Void",
          "isstatic": true,
          "isinline": false
        },
        "uniformMatrix3D": {
          "args": [
            {
              "name": "location",
              "type": "lumen.platform.native.render.gl.GLUniformLocation",
              "value": null
            },
            {
              "name": "transpose",
              "type": "Bool",
              "value": null
            },
            {
              "name": "matrix",
              "type": "lumen.utils.compat.Matrix3D",
              "value": null
            }
          ],
          "meta": {},
          "name": "uniformMatrix3D",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uniformMatrix3D(location:lumen.platform.native.render.gl.GLUniformLocation, transpose:Bool, matrix:lumen.utils.compat.Matrix3D) : Void",
          "isstatic": true,
          "isinline": false
        },
        "depthMask": {
          "args": [
            {
              "name": "flag",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "depthMask",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "depthMask(flag:Bool) : Void",
          "isstatic": true,
          "isinline": false
        },
        "clearColor": {
          "args": [
            {
              "name": "red",
              "type": "Float",
              "value": null
            },
            {
              "name": "green",
              "type": "Float",
              "value": null
            },
            {
              "name": "blue",
              "type": "Float",
              "value": null
            },
            {
              "name": "alpha",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "clearColor",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "clearColor(red:Float, green:Float, blue:Float, alpha:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getSupportedExtensions": {
          "args": [],
          "meta": {},
          "name": "getSupportedExtensions",
          "returntype": ": Array<String>",
          "doc": "",
          "ispublic": true,
          "signature": "getSupportedExtensions() : Array<String>",
          "isstatic": true,
          "isinline": false
        },
        "shaderSource": {
          "args": [
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            },
            {
              "name": "source",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "shaderSource",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "shaderSource(shader:lumen.platform.native.render.gl.GLShader, source:String) : Void",
          "isstatic": true,
          "isinline": false
        },
        "isTexture": {
          "args": [
            {
              "name": "texture",
              "type": "lumen.platform.native.render.gl.GLTexture",
              "value": null
            }
          ],
          "meta": {},
          "name": "isTexture",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isTexture(texture:lumen.platform.native.render.gl.GLTexture) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "getVertexAttrib": {
          "args": [
            {
              "name": "index",
              "type": "Int",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getVertexAttrib",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getVertexAttrib(index:Int, pname:Int) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "colorMask": {
          "args": [
            {
              "name": "red",
              "type": "Bool",
              "value": null
            },
            {
              "name": "green",
              "type": "Bool",
              "value": null
            },
            {
              "name": "blue",
              "type": "Bool",
              "value": null
            },
            {
              "name": "alpha",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "colorMask",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "colorMask(red:Bool, green:Bool, blue:Bool, alpha:Bool) : Void",
          "isstatic": true,
          "isinline": false
        },
        "framebufferTexture2D": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "attachment",
              "type": "Int",
              "value": null
            },
            {
              "name": "textarget",
              "type": "Int",
              "value": null
            },
            {
              "name": "texture",
              "type": "lumen.platform.native.render.gl.GLTexture",
              "value": null
            },
            {
              "name": "level",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "framebufferTexture2D",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "framebufferTexture2D(target:Int, attachment:Int, textarget:Int, texture:lumen.platform.native.render.gl.GLTexture, level:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "compressedTexImage2D": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "level",
              "type": "Int",
              "value": null
            },
            {
              "name": "internalformat",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            },
            {
              "name": "border",
              "type": "Int",
              "value": null
            },
            {
              "name": "data",
              "type": "lumen.utils.IMemoryRange",
              "value": null
            }
          ],
          "meta": {},
          "name": "compressedTexImage2D",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "compressedTexImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:lumen.utils.IMemoryRange) : Void",
          "isstatic": true,
          "isinline": false
        },
        "copyTexSubImage2D": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "level",
              "type": "Int",
              "value": null
            },
            {
              "name": "xoffset",
              "type": "Int",
              "value": null
            },
            {
              "name": "yoffset",
              "type": "Int",
              "value": null
            },
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "copyTexSubImage2D",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "copyTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "blendEquationSeparate": {
          "args": [
            {
              "name": "modeRGB",
              "type": "Int",
              "value": null
            },
            {
              "name": "modeAlpha",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "blendEquationSeparate",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "blendEquationSeparate(modeRGB:Int, modeAlpha:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "texSubImage2D": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "level",
              "type": "Int",
              "value": null
            },
            {
              "name": "xoffset",
              "type": "Int",
              "value": null
            },
            {
              "name": "yoffset",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            },
            {
              "name": "format",
              "type": "Int",
              "value": null
            },
            {
              "name": "type",
              "type": "Int",
              "value": null
            },
            {
              "name": "pixels",
              "type": "lumen.utils.ArrayBufferView",
              "value": null
            }
          ],
          "meta": {},
          "name": "texSubImage2D",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "texSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:lumen.utils.ArrayBufferView) : Void",
          "isstatic": true,
          "isinline": false
        },
        "isBuffer": {
          "args": [
            {
              "name": "buffer",
              "type": "lumen.platform.native.render.gl.GLBuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "isBuffer",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isBuffer(buffer:lumen.platform.native.render.gl.GLBuffer) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "cullFace": {
          "args": [
            {
              "name": "mode",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "cullFace",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "cullFace(mode:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "clearDepth": {
          "args": [
            {
              "name": "depth",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "clearDepth",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "clearDepth(depth:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "enableVertexAttribArray": {
          "args": [
            {
              "name": "index",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "enableVertexAttribArray",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "enableVertexAttribArray(index:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getContextAttributes": {
          "args": [],
          "meta": {},
          "name": "getContextAttributes",
          "returntype": ": lumen.platform.native.render.gl.GLContextAttributes",
          "doc": "",
          "ispublic": true,
          "signature": "getContextAttributes() : lumen.platform.native.render.gl.GLContextAttributes",
          "isstatic": true,
          "isinline": false
        },
        "disable": {
          "args": [
            {
              "name": "cap",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "disable",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "disable(cap:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "attachShader": {
          "args": [
            {
              "name": "program",
              "type": "lumen.platform.native.render.gl.GLProgram",
              "value": null
            },
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            }
          ],
          "meta": {},
          "name": "attachShader",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "attachShader(program:lumen.platform.native.render.gl.GLProgram, shader:lumen.platform.native.render.gl.GLShader) : Void",
          "isstatic": true,
          "isinline": false
        },
        "stencilFuncSeparate": {
          "args": [
            {
              "name": "face",
              "type": "Int",
              "value": null
            },
            {
              "name": "func",
              "type": "Int",
              "value": null
            },
            {
              "name": "ref",
              "type": "Int",
              "value": null
            },
            {
              "name": "mask",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "stencilFuncSeparate",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "stencilFuncSeparate(face:Int, func:Int, ref:Int, mask:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getShaderParameter": {
          "args": [
            {
              "name": "shader",
              "type": "lumen.platform.native.render.gl.GLShader",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getShaderParameter",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getShaderParameter(shader:lumen.platform.native.render.gl.GLShader, pname:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "compressedTexSubImage2D": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "level",
              "type": "Int",
              "value": null
            },
            {
              "name": "xoffset",
              "type": "Int",
              "value": null
            },
            {
              "name": "yoffset",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            },
            {
              "name": "format",
              "type": "Int",
              "value": null
            },
            {
              "name": "data",
              "type": "lumen.utils.IMemoryRange",
              "value": null
            }
          ],
          "meta": {},
          "name": "compressedTexSubImage2D",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "compressedTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:lumen.utils.IMemoryRange) : Void",
          "isstatic": true,
          "isinline": false
        },
        "framebufferRenderbuffer": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "attachment",
              "type": "Int",
              "value": null
            },
            {
              "name": "renderbuffertarget",
              "type": "Int",
              "value": null
            },
            {
              "name": "renderbuffer",
              "type": "lumen.platform.native.render.gl.GLRenderbuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "framebufferRenderbuffer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "framebufferRenderbuffer(target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:lumen.platform.native.render.gl.GLRenderbuffer) : Void",
          "isstatic": true,
          "isinline": false
        },
        "deleteBuffer": {
          "args": [
            {
              "name": "buffer",
              "type": "lumen.platform.native.render.gl.GLBuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteBuffer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteBuffer(buffer:lumen.platform.native.render.gl.GLBuffer) : Void",
          "isstatic": true,
          "isinline": false
        },
        "deleteRenderbuffer": {
          "args": [
            {
              "name": "renderbuffer",
              "type": "lumen.platform.native.render.gl.GLRenderbuffer",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteRenderbuffer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteRenderbuffer(renderbuffer:lumen.platform.native.render.gl.GLRenderbuffer) : Void",
          "isstatic": true,
          "isinline": false
        },
        "texImage2D": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "level",
              "type": "Int",
              "value": null
            },
            {
              "name": "internalformat",
              "type": "Int",
              "value": null
            },
            {
              "name": "width",
              "type": "Int",
              "value": null
            },
            {
              "name": "height",
              "type": "Int",
              "value": null
            },
            {
              "name": "border",
              "type": "Int",
              "value": null
            },
            {
              "name": "format",
              "type": "Int",
              "value": null
            },
            {
              "name": "type",
              "type": "Int",
              "value": null
            },
            {
              "name": "pixels",
              "type": "lumen.utils.ArrayBufferView",
              "value": null
            }
          ],
          "meta": {},
          "name": "texImage2D",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "texImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:lumen.utils.ArrayBufferView) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sampleCoverage": {
          "args": [
            {
              "name": "value",
              "type": "Float",
              "value": null
            },
            {
              "name": "invert",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "sampleCoverage",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sampleCoverage(value:Float, invert:Bool) : Void",
          "isstatic": true,
          "isinline": false
        },
        "texParameterf": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "texParameterf",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "texParameterf(target:Int, pname:Int, param:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "texParameteri": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "texParameteri",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "texParameteri(target:Int, pname:Int, param:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getRenderbufferParameter": {
          "args": [
            {
              "name": "target",
              "type": "Int",
              "value": null
            },
            {
              "name": "pname",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getRenderbufferParameter",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getRenderbufferParameter(target:Int, pname:Int) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "createShader": {
          "args": [
            {
              "name": "type",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "createShader",
          "returntype": ": lumen.platform.native.render.gl.GLShader",
          "doc": "",
          "ispublic": true,
          "signature": "createShader(type:Int) : lumen.platform.native.render.gl.GLShader",
          "isstatic": true,
          "isinline": false
        },
        "vertexAttribPointer": {
          "args": [
            {
              "name": "indx",
              "type": "Int",
              "value": null
            },
            {
              "name": "size",
              "type": "Int",
              "value": null
            },
            {
              "name": "type",
              "type": "Int",
              "value": null
            },
            {
              "name": "normalized",
              "type": "Bool",
              "value": null
            },
            {
              "name": "stride",
              "type": "Int",
              "value": null
            },
            {
              "name": "offset",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "vertexAttribPointer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "vertexAttribPointer(indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int) : Void",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.window.Window": {
      "extend": [],
      "meta": {},
      "name": "lumen.window.Window",
      "properties": {
        "grab": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "grab",
          "type": "Bool",
          "iswrite": true,
          "isread": true,
          "doc": "The window grab state `(read/write)`",
          "signature": "grab : Bool",
          "type_desc": "read/write"
        },
        "position": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "position",
          "type": "lumen.window.WindowPosition",
          "iswrite": true,
          "isread": true,
          "doc": "The window position `(read/write)`",
          "signature": "position : lumen.window.WindowPosition",
          "type_desc": "read/write"
        },
        "size": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "size",
          "type": "lumen.window.WindowSize",
          "iswrite": true,
          "isread": true,
          "doc": "The window size `(read/write)`",
          "signature": "size : lumen.window.WindowSize",
          "type_desc": "read/write"
        },
        "bordered": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "bordered",
          "type": "Bool",
          "iswrite": true,
          "isread": true,
          "doc": "The window bordered state `(read/write)`",
          "signature": "bordered : Bool",
          "type_desc": "read/write"
        },
        "min_size": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "min_size",
          "type": "lumen.window.WindowSize",
          "iswrite": true,
          "isread": true,
          "doc": "The window minimum size `(read/write)`",
          "signature": "min_size : lumen.window.WindowSize",
          "type_desc": "read/write"
        },
        "fullscreen": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "fullscreen",
          "type": "Bool",
          "iswrite": true,
          "isread": true,
          "doc": "The window fullscreen state `(read/write)`",
          "signature": "fullscreen : Bool",
          "type_desc": "read/write"
        },
        "title": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "title",
          "type": "String",
          "iswrite": true,
          "isread": true,
          "doc": "The window title `(read/write)`",
          "signature": "title : String",
          "type_desc": "read/write"
        },
        "max_size": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "max_size",
          "type": "lumen.window.WindowSize",
          "iswrite": true,
          "isread": true,
          "doc": "The window maximum size `(read/write)`",
          "signature": "max_size : lumen.window.WindowSize",
          "type_desc": "read/write"
        }
      },
      "doc": "",
      "ispublic": true,
      "members": {
        "config": {
          "meta": {},
          "name": "config",
          "type": "lumen.types.WindowConfig",
          "doc": "the actual returned window config",
          "ispublic": true,
          "signature": "config : lumen.types.WindowConfig",
          "isstatic": false,
          "isinline": false
        },
        "internal_resize": {
          "meta": {},
          "name": "internal_resize",
          "type": "Bool",
          "doc": "",
          "ispublic": false,
          "signature": "internal_resize : Bool",
          "isstatic": false,
          "isinline": false
        },
        "internal_position": {
          "meta": {},
          "name": "internal_position",
          "type": "Bool",
          "doc": "",
          "ispublic": false,
          "signature": "internal_position : Bool",
          "isstatic": false,
          "isinline": false
        },
        "asked_config": {
          "meta": {},
          "name": "asked_config",
          "type": "lumen.types.WindowConfig",
          "doc": "the requested window config",
          "ispublic": true,
          "signature": "asked_config : lumen.types.WindowConfig",
          "isstatic": false,
          "isinline": false
        },
        "fullscreen_desktop": {
          "meta": {},
          "name": "fullscreen_desktop",
          "type": "Bool",
          "doc": "set this for fullscreen desktop mode, instead of fullscreen mode",
          "ispublic": true,
          "signature": "fullscreen_desktop : Bool",
          "isstatic": false,
          "isinline": false
        },
        "window_event_handler": {
          "meta": {},
          "name": "window_event_handler",
          "type": "lumen.types.WindowEvent->Void",
          "doc": "the window event handler callback",
          "ispublic": true,
          "signature": "window_event_handler : lumen.types.WindowEvent->Void",
          "isstatic": false,
          "isinline": false
        },
        "id": {
          "meta": {},
          "name": "id",
          "type": "Int",
          "doc": "the window id, for tracking events to each window",
          "ispublic": true,
          "signature": "id : Int",
          "isstatic": false,
          "isinline": false
        },
        "manager": {
          "meta": {},
          "name": "manager",
          "type": "lumen.window.Windowing",
          "doc": "the manager this window belongs to",
          "ispublic": true,
          "signature": "manager : lumen.window.Windowing",
          "isstatic": false,
          "isinline": false
        },
        "minimized": {
          "meta": {},
          "name": "minimized",
          "type": "Bool",
          "doc": "",
          "ispublic": false,
          "signature": "minimized : Bool",
          "isstatic": false,
          "isinline": false
        },
        "window_render_handler": {
          "meta": {},
          "name": "window_render_handler",
          "type": "lumen.window.Window->Void",
          "doc": "the window render handler callback",
          "ispublic": true,
          "signature": "window_render_handler : lumen.window.Window->Void",
          "isstatic": false,
          "isinline": false
        },
        "handle": {
          "meta": {},
          "name": "handle",
          "type": "lumen.window.WindowHandle",
          "doc": "the native window handle",
          "ispublic": true,
          "signature": "handle : lumen.window.WindowHandle",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "get_grab": {
          "args": [],
          "meta": {},
          "name": "get_grab",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "get_grab() : Bool",
          "isstatic": false,
          "isinline": false
        },
        "close": {
          "args": [],
          "meta": {},
          "name": "close",
          "returntype": ": Void",
          "doc": "Close the window",
          "ispublic": true,
          "signature": "close() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_max_size": {
          "args": [],
          "meta": {},
          "name": "get_max_size",
          "returntype": ": lumen.window.WindowSize",
          "doc": "",
          "ispublic": false,
          "signature": "get_max_size() : lumen.window.WindowSize",
          "isstatic": false,
          "isinline": false
        },
        "get_size": {
          "args": [],
          "meta": {},
          "name": "get_size",
          "returntype": ": lumen.window.WindowSize",
          "doc": "",
          "ispublic": false,
          "signature": "get_size() : lumen.window.WindowSize",
          "isstatic": false,
          "isinline": false
        },
        "swap": {
          "args": [],
          "meta": {},
          "name": "swap",
          "returntype": ": Void",
          "doc": "Swap the back buffer of the window, call after rendering to update the window view",
          "ispublic": true,
          "signature": "swap() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_title": {
          "args": [],
          "meta": {},
          "name": "get_title",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "get_title() : String",
          "isstatic": false,
          "isinline": false
        },
        "set_max_size": {
          "args": [
            {
              "name": "_size",
              "type": "lumen.window.WindowSize",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_max_size",
          "returntype": ": lumen.window.WindowSize",
          "doc": "",
          "ispublic": false,
          "signature": "set_max_size(_size:lumen.window.WindowSize) : lumen.window.WindowSize",
          "isstatic": false,
          "isinline": false
        },
        "get_fullscreen": {
          "args": [],
          "meta": {},
          "name": "get_fullscreen",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "get_fullscreen() : Bool",
          "isstatic": false,
          "isinline": false
        },
        "set_grab": {
          "args": [
            {
              "name": "_grab",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_grab",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "set_grab(_grab:Bool) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "set_size": {
          "args": [
            {
              "name": "_size",
              "type": "lumen.window.WindowSize",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_size",
          "returntype": ": lumen.window.WindowSize",
          "doc": "",
          "ispublic": false,
          "signature": "set_size(_size:lumen.window.WindowSize) : lumen.window.WindowSize",
          "isstatic": false,
          "isinline": false
        },
        "get_position": {
          "args": [],
          "meta": {},
          "name": "get_position",
          "returntype": ": lumen.window.WindowPosition",
          "doc": "",
          "ispublic": false,
          "signature": "get_position() : lumen.window.WindowPosition",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.window.Windowing",
              "value": null
            },
            {
              "name": "_config",
              "type": "lumen.types.WindowConfig",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.window.Windowing, _config:lumen.types.WindowConfig) ",
          "isstatic": false,
          "isinline": false
        },
        "render": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "render",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "render() : Void",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_bordered": {
          "args": [],
          "meta": {},
          "name": "get_bordered",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "get_bordered() : Bool",
          "isstatic": false,
          "isinline": false
        },
        "set_fullscreen": {
          "args": [
            {
              "name": "_enable",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_fullscreen",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "set_fullscreen(_enable:Bool) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "on_window_created": {
          "args": [
            {
              "name": "_handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "_id",
              "type": "Int",
              "value": null
            },
            {
              "name": "_config",
              "type": "lumen.types.WindowConfig",
              "value": null
            }
          ],
          "meta": {},
          "name": "on_window_created",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "on_window_created(_handle:lumen.window.WindowHandle, _id:Int, _config:lumen.types.WindowConfig) : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_position": {
          "args": [
            {
              "name": "_pos",
              "type": "lumen.window.WindowPosition",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_position",
          "returntype": ": lumen.window.WindowPosition",
          "doc": "",
          "ispublic": false,
          "signature": "set_position(_pos:lumen.window.WindowPosition) : lumen.window.WindowPosition",
          "isstatic": false,
          "isinline": false
        },
        "get_min_size": {
          "args": [],
          "meta": {},
          "name": "get_min_size",
          "returntype": ": lumen.window.WindowSize",
          "doc": "",
          "ispublic": false,
          "signature": "get_min_size() : lumen.window.WindowSize",
          "isstatic": false,
          "isinline": false
        },
        "simple_message": {
          "args": [
            {
              "name": "message",
              "type": "String",
              "value": ""
            },
            {
              "name": "?title",
              "type": "String",
              "value": "''"
            }
          ],
          "meta": {},
          "name": "simple_message",
          "returntype": ": Void",
          "doc": "Display a cross platform message on this window",
          "ispublic": true,
          "signature": "simple_message(message:String, ?title:String='') : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.types.WindowEvent",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_event",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_event(_event:lumen.types.WindowEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_bordered": {
          "args": [
            {
              "name": "_bordered",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_bordered",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "set_bordered(_bordered:Bool) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "set_min_size": {
          "args": [
            {
              "name": "_size",
              "type": "lumen.window.WindowSize",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_min_size",
          "returntype": ": lumen.window.WindowSize",
          "doc": "",
          "ispublic": false,
          "signature": "set_min_size(_size:lumen.window.WindowSize) : lumen.window.WindowSize",
          "isstatic": false,
          "isinline": false
        },
        "set_title": {
          "args": [
            {
              "name": "_title",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_title",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "set_title(_title:String) : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.window.Windowing": {
      "extend": [],
      "meta": {},
      "name": "lumen.window.Windowing",
      "properties": {},
      "doc": "A window manager, accessed via `app.window`",
      "ispublic": true,
      "members": {
        "window_list": {
          "meta": {},
          "name": "window_list",
          "type": "Map<Int,lumen.window.Window>",
          "doc": "The list of windows in this manager",
          "ispublic": true,
          "signature": "window_list : Map<Int,lumen.window.Window>",
          "isstatic": false,
          "isinline": false
        },
        "window_count": {
          "meta": {},
          "name": "window_count",
          "type": "Int",
          "doc": "The number of windows in this manager",
          "ispublic": true,
          "signature": "window_count : Int",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "system": {
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "system",
          "type": "lumen.window.WindowSystem",
          "doc": "The concrete implementation of the window system",
          "ispublic": true,
          "signature": "system : lumen.window.WindowSystem",
          "isstatic": false,
          "isinline": false
        },
        "lib": {
          "meta": {},
          "name": "lib",
          "type": "lumen.Lumen",
          "doc": "",
          "ispublic": false,
          "signature": "lib : lumen.Lumen",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "create": {
          "args": [
            {
              "name": "_config",
              "type": "lumen.types.WindowConfig",
              "value": null
            }
          ],
          "meta": {},
          "name": "create",
          "returntype": ": lumen.window.Window",
          "doc": "Create a window with the given config",
          "ispublic": true,
          "signature": "create(_config:lumen.types.WindowConfig) : lumen.window.Window",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.types.SystemEvent",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_event",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_event(_event:lumen.types.SystemEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.audio.AudioSystemBinding": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.audio.AudioSystemBinding",
      "properties": {},
      "doc": "Internal audio system definition, interact with this system through `lumen.Audio`, not directly",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "lib": {
          "meta": {},
          "name": "lib",
          "type": "lumen.Lumen",
          "doc": "",
          "ispublic": true,
          "signature": "lib : lumen.Lumen",
          "isstatic": false,
          "isinline": false
        },
        "manager": {
          "meta": {},
          "name": "manager",
          "type": "lumen.audio.Audio",
          "doc": "",
          "ispublic": true,
          "signature": "manager : lumen.audio.Audio",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "Called by the audio manager when initiating this system",
          "ispublic": true,
          "signature": "init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "suspend": {
          "args": [],
          "meta": {},
          "name": "suspend",
          "returntype": ": Void",
          "doc": "Called by the audio manager when suspending this system",
          "ispublic": true,
          "signature": "suspend() : Void",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {},
          "name": "update",
          "returntype": ": Void",
          "doc": "Called by the audio manager when updating this system",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "resume": {
          "args": [],
          "meta": {},
          "name": "resume",
          "returntype": ": Void",
          "doc": "Called by the audio manager when resuming this system",
          "ispublic": true,
          "signature": "resume() : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "Called by the audio manager when destroying this system",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": [
        "lumen.utils.AbstractClass"
      ]
    },
    "lumen.utils.compat.Vector3D": {
      "extend": [],
      "meta": {},
      "name": "lumen.utils.compat.Vector3D",
      "properties": {
        "Z_AXIS": {
          "meta": {},
          "name": "Z_AXIS",
          "type": "lumen.utils.compat.Vector3D",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "Z_AXIS : lumen.utils.compat.Vector3D",
          "type_desc": "(read only)"
        },
        "Y_AXIS": {
          "meta": {},
          "name": "Y_AXIS",
          "type": "lumen.utils.compat.Vector3D",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "Y_AXIS : lumen.utils.compat.Vector3D",
          "type_desc": "(read only)"
        },
        "X_AXIS": {
          "meta": {},
          "name": "X_AXIS",
          "type": "lumen.utils.compat.Vector3D",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "X_AXIS : lumen.utils.compat.Vector3D",
          "type_desc": "(read only)"
        },
        "length": {
          "meta": {},
          "name": "length",
          "type": "Float",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "length : Float",
          "type_desc": "(read only)"
        },
        "lengthSquared": {
          "meta": {},
          "name": "lengthSquared",
          "type": "Float",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "lengthSquared : Float",
          "type_desc": "(read only)"
        }
      },
      "doc": "",
      "ispublic": true,
      "members": {
        "w": {
          "meta": {},
          "name": "w",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "w : Float",
          "isstatic": false,
          "isinline": false
        },
        "x": {
          "meta": {},
          "name": "x",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "x : Float",
          "isstatic": false,
          "isinline": false
        },
        "y": {
          "meta": {},
          "name": "y",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "y : Float",
          "isstatic": false,
          "isinline": false
        },
        "z": {
          "meta": {},
          "name": "z",
          "type": "Float",
          "doc": "",
          "ispublic": true,
          "signature": "z : Float",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "new": {
          "args": [
            {
              "name": "?x",
              "type": "Float",
              "value": "00"
            },
            {
              "name": "?y",
              "type": "Float",
              "value": "00"
            },
            {
              "name": "?z",
              "type": "Float",
              "value": "00"
            },
            {
              "name": "?w",
              "type": "Float",
              "value": "00"
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(?x:Float=00, ?y:Float=00, ?z:Float=00, ?w:Float=00) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.input.InputSystem": {
      "extend": [
        "lumen.input.InputSystemBinding"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.InputSystem",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "lumen_gamepad_close": {
          "meta": {},
          "name": "lumen_gamepad_close",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gamepad_close : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_gamepad_open": {
          "meta": {},
          "name": "lumen_gamepad_open",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_gamepad_open : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "gamepad_add": {
          "args": [
            {
              "name": "id",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "gamepad_add",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "gamepad_add(id:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "gamepad_remove": {
          "args": [
            {
              "name": "id",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "gamepad_remove",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "gamepad_remove(id:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.input.Input",
              "value": null
            },
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.input.Input, _lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {},
          "name": "update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.types.InputEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "on_event",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_event(_event:lumen.types.InputEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "mod_state_from_event": {
          "args": [
            {
              "name": "event",
              "type": "lumen.types.InputEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "mod_state_from_event",
          "returntype": ": lumen.input.ModState",
          "doc": "",
          "ispublic": true,
          "signature": "mod_state_from_event(event:lumen.types.InputEvent) : lumen.input.ModState",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.utils.UInt8Array": {
      "extend": [
        "lumen.platform.native.utils.ArrayBufferView"
      ],
      "meta": {},
      "name": "lumen.platform.native.utils.UInt8Array",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "new": {
          "args": [
            {
              "name": "bufferOrArray",
              "type": "Dynamic",
              "value": ""
            },
            {
              "name": "?start",
              "type": "Int",
              "value": "0"
            },
            {
              "name": "?length",
              "type": "Int",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(bufferOrArray:Dynamic, ?start:Int=0, ?length:Int) ",
          "isstatic": false,
          "isinline": false
        },
        "set": {
          "args": [
            {
              "name": "bufferOrArray",
              "type": "Dynamic",
              "value": ""
            },
            {
              "name": "?offset",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {},
          "name": "set",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "set(bufferOrArray:Dynamic, ?offset:Int=0) : Void",
          "isstatic": false,
          "isinline": false
        },
        "subarray": {
          "args": [
            {
              "name": "start",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?end",
              "type": "Int",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "subarray",
          "returntype": ": lumen.platform.native.utils.UInt8Array",
          "doc": "",
          "ispublic": true,
          "signature": "subarray(start:Int, ?end:Int) : lumen.platform.native.utils.UInt8Array",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.input.InputSystemBinding": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.input.InputSystemBinding",
      "properties": {},
      "doc": "Internal input system, accessed through `lumen.Input`, not directly",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "lib": {
          "meta": {},
          "name": "lib",
          "type": "lumen.Lumen",
          "doc": "",
          "ispublic": false,
          "signature": "lib : lumen.Lumen",
          "isstatic": false,
          "isinline": false
        },
        "manager": {
          "meta": {},
          "name": "manager",
          "type": "lumen.input.Input",
          "doc": "",
          "ispublic": false,
          "signature": "manager : lumen.input.Input",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "Called when the input manager initiates this system",
          "ispublic": true,
          "signature": "init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "gamepad_add": {
          "args": [
            {
              "name": "id",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "gamepad_add",
          "returntype": ": Void",
          "doc": "Open a gamepad with this id",
          "ispublic": true,
          "signature": "gamepad_add(id:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "gamepad_remove": {
          "args": [
            {
              "name": "id",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "gamepad_remove",
          "returntype": ": Void",
          "doc": "Close a gamepad with this id",
          "ispublic": true,
          "signature": "gamepad_remove(id:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {},
          "name": "update",
          "returntype": ": Void",
          "doc": "Called when the input manager updates this system",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.types.InputEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "on_event",
          "returntype": ": Void",
          "doc": "Called when the input manager forwards an event to this system",
          "ispublic": true,
          "signature": "on_event(_event:lumen.types.InputEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "Called when the input manager destroys this system",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "mod_state_from_event": {
          "args": [
            {
              "name": "event",
              "type": "lumen.types.InputEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "mod_state_from_event",
          "returntype": ": lumen.input.ModState",
          "doc": "Helper to return a `ModState` (shift, ctrl etc) from a given `InputEvent`",
          "ispublic": true,
          "signature": "mod_state_from_event(event:lumen.types.InputEvent) : lumen.input.ModState",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": [
        "lumen.utils.AbstractClass"
      ]
    },
    "lumen.assets.Assets": {
      "extend": [],
      "meta": {},
      "name": "lumen.assets.Assets",
      "properties": {},
      "doc": "The asset system class gives you access to fetching and manipulating assets, \\n    caching/uncaching assets, and handles loading files and data cross platform",
      "ispublic": true,
      "members": {
        "list": {
          "meta": {},
          "name": "list",
          "type": "Map<String,lumen.types.AssetInfo>",
          "doc": "The list of assets in the system, added at startup by the `App` class, in the `get_asset_list` function",
          "ispublic": true,
          "signature": "list : Map<String,lumen.types.AssetInfo>",
          "isstatic": false,
          "isinline": false
        },
        "assets_root": {
          "meta": {},
          "name": "assets_root",
          "type": "String",
          "doc": "If the assets are not relative to the runtime root path, this value can adjust all asset paths. This is automatically handled and exists to allow control.",
          "ispublic": true,
          "signature": "assets_root : String",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "system": {
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "system",
          "type": "lumen.assets.AssetSystem",
          "doc": "The asset system platform implementation",
          "ispublic": true,
          "signature": "system : lumen.assets.AssetSystem",
          "isstatic": false,
          "isinline": false
        },
        "lib": {
          "meta": {},
          "name": "lib",
          "type": "lumen.Lumen",
          "doc": "",
          "ispublic": false,
          "signature": "lib : lumen.Lumen",
          "isstatic": false,
          "isinline": false
        },
        "manifest_path": {
          "meta": {},
          "name": "manifest_path",
          "type": "String",
          "doc": "The manifest file to parse for the asset list. By default, this is set to `manifest` from the build tools but the `App` class can have a custom `get_asset_list` handler use this value.",
          "ispublic": true,
          "signature": "manifest_path : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "path": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "path",
          "returntype": ": String",
          "doc": "Get the asset path for an asset, adjusted by platform, root etc.",
          "ispublic": true,
          "signature": "path(_id:String) : String",
          "isstatic": false,
          "isinline": false
        },
        "get_text": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "get_text",
          "returntype": ": lumen.types.AssetText",
          "doc": "Get an asset as a `String`, used for text based assets",
          "ispublic": true,
          "signature": "get_text(_id:String) : lumen.types.AssetText",
          "isstatic": false,
          "isinline": false
        },
        "audio_seek_source": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_to",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "audio_seek_source",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "audio_seek_source(_info:lumen.types.AudioInfo, _to:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "get_audio": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": ""
            },
            {
              "name": "?options",
              "type": "lumen.types.AssetAudioOptions",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "get_audio",
          "returntype": ": lumen.types.AssetAudio",
          "doc": "Get an asset as a `AssetAudio`, used for audio files",
          "ispublic": true,
          "signature": "get_audio(_id:String, ?options:lumen.types.AssetAudioOptions) : lumen.types.AssetAudio",
          "isstatic": false,
          "isinline": false
        },
        "load_error": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": ""
            },
            {
              "name": "?reason",
              "type": "String",
              "value": "'unknown'"
            }
          ],
          "meta": {},
          "name": "load_error",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "load_error(_id:String, ?reason:String='unknown') : Void",
          "isstatic": false,
          "isinline": false
        },
        "_path": {
          "args": [
            {
              "name": "_asset",
              "type": "lumen.types.AssetInfo",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "_path",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "_path(_asset:lumen.types.AssetInfo) : String",
          "isstatic": false,
          "isinline": false
        },
        "add": {
          "args": [
            {
              "name": "_list",
              "type": "Array<lumen.types.AssetInfo>",
              "value": null
            }
          ],
          "meta": {},
          "name": "add",
          "returntype": ": Void",
          "doc": "Add an asset list to the system",
          "ispublic": true,
          "signature": "add(_list:Array<lumen.types.AssetInfo>) : Void",
          "isstatic": false,
          "isinline": false
        },
        "get": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "get",
          "returntype": ": lumen.types.AssetInfo",
          "doc": "Get an asset from the system",
          "ispublic": true,
          "signature": "get(_id:String) : lumen.types.AssetInfo",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "get_image": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": ""
            },
            {
              "name": "?options",
              "type": "lumen.types.AssetImageOptions",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "get_image",
          "returntype": ": lumen.types.AssetImage",
          "doc": "Get an asset as a `AssetImage`, used for image files",
          "ispublic": true,
          "signature": "get_image(_id:String, ?options:lumen.types.AssetImageOptions) : lumen.types.AssetImage",
          "isstatic": false,
          "isinline": false
        },
        "get_bytes": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "get_bytes",
          "returntype": ": lumen.types.AssetBytes",
          "doc": "Get an asset as a `ByteArray`, used for binary assets",
          "ispublic": true,
          "signature": "get_bytes(_id:String) : lumen.types.AssetBytes",
          "isstatic": false,
          "isinline": false
        },
        "exists_error": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "exists_error",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "exists_error(_id:String) : Void",
          "isstatic": false,
          "isinline": false
        },
        "audio_format_from_int": {
          "args": [
            {
              "name": "_int",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_format_from_int",
          "returntype": ": lumen.types.AudioFormatType",
          "doc": "",
          "ispublic": false,
          "signature": "audio_format_from_int(_int:Int) : lumen.types.AudioFormatType",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_portion": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_start",
              "type": "Int",
              "value": null
            },
            {
              "name": "_len",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "audio_load_portion",
          "returntype": ": lumen.types.AudioDataBlob",
          "doc": "",
          "ispublic": true,
          "signature": "audio_load_portion(_info:lumen.types.AudioInfo, _start:Int, _len:Int) : lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "exists": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "exists",
          "returntype": ": Bool",
          "doc": "Check if an asset exists in the system",
          "ispublic": true,
          "signature": "exists(_id:String) : Bool",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.utils.ByteArray": {
      "extend": [
        "haxe.io.Bytes"
      ],
      "meta": {},
      "name": "lumen.platform.native.utils.ByteArray",
      "properties": {
        "byteLength": {
          "meta": {},
          "name": "byteLength",
          "type": "Int",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "byteLength : Int",
          "type_desc": "(read only)"
        },
        "endian": {
          "meta": {},
          "name": "endian",
          "type": "String",
          "iswrite": true,
          "isread": true,
          "doc": "",
          "signature": "endian : String",
          "type_desc": "read/write"
        },
        "bytesAvailable": {
          "meta": {},
          "name": "bytesAvailable",
          "type": "Int",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "bytesAvailable : Int",
          "type_desc": "(read only)"
        }
      },
      "doc": "",
      "ispublic": true,
      "members": {
        "lumen_byte_array_read_file": {
          "meta": {},
          "name": "lumen_byte_array_read_file",
          "type": "String->lumen.platform.native.utils.ByteArray",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_byte_array_read_file : String->lumen.platform.native.utils.ByteArray",
          "isstatic": true,
          "isinline": false
        },
        "lumen_lzma_encode": {
          "meta": {},
          "name": "lumen_lzma_encode",
          "type": "Dynamic->haxe.io.BytesData",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_lzma_encode : Dynamic->haxe.io.BytesData",
          "isstatic": true,
          "isinline": false
        },
        "position": {
          "meta": {},
          "name": "position",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "position : Int",
          "isstatic": false,
          "isinline": false
        },
        "_double_bytes": {
          "meta": {},
          "name": "_double_bytes",
          "type": "Float->Bool->haxe.io.BytesData",
          "doc": "@private",
          "ispublic": false,
          "signature": "_double_bytes : Float->Bool->haxe.io.BytesData",
          "isstatic": true,
          "isinline": false
        },
        "lumen_byte_array_overwrite_file": {
          "meta": {},
          "name": "lumen_byte_array_overwrite_file",
          "type": "String->lumen.platform.native.utils.ByteArray->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_byte_array_overwrite_file : String->lumen.platform.native.utils.ByteArray->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "_float_bytes": {
          "meta": {},
          "name": "_float_bytes",
          "type": "Float->Bool->haxe.io.BytesData",
          "doc": "@private",
          "ispublic": false,
          "signature": "_float_bytes : Float->Bool->haxe.io.BytesData",
          "isstatic": true,
          "isinline": false
        },
        "_float_of_bytes": {
          "meta": {},
          "name": "_float_of_bytes",
          "type": "haxe.io.BytesData->Bool->Float",
          "doc": "@private",
          "ispublic": false,
          "signature": "_float_of_bytes : haxe.io.BytesData->Bool->Float",
          "isstatic": true,
          "isinline": false
        },
        "bigEndian": {
          "meta": {},
          "name": "bigEndian",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "bigEndian : Bool",
          "isstatic": false,
          "isinline": false
        },
        "_double_of_bytes": {
          "meta": {},
          "name": "_double_of_bytes",
          "type": "haxe.io.BytesData->Bool->Float",
          "doc": "@private",
          "ispublic": false,
          "signature": "_double_of_bytes : haxe.io.BytesData->Bool->Float",
          "isstatic": true,
          "isinline": false
        },
        "lumen_lzma_decode": {
          "meta": {},
          "name": "lumen_lzma_decode",
          "type": "haxe.io.BytesData->haxe.io.BytesData",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_lzma_decode : haxe.io.BytesData->haxe.io.BytesData",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "writeBoolean": {
          "args": [
            {
              "name": "value",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "writeBoolean",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeBoolean(value:Bool) : Void",
          "isstatic": false,
          "isinline": false
        },
        "writeDouble": {
          "args": [
            {
              "name": "x",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "writeDouble",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeDouble(x:Float) : Void",
          "isstatic": false,
          "isinline": false
        },
        "clear": {
          "args": [],
          "meta": {},
          "name": "clear",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "clear() : Void",
          "isstatic": false,
          "isinline": false
        },
        "writeFile": {
          "args": [
            {
              "name": "inString",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "writeFile",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeFile(inString:String) : Void",
          "isstatic": false,
          "isinline": false
        },
        "readShort": {
          "args": [],
          "meta": {},
          "name": "readShort",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readShort() : Int",
          "isstatic": false,
          "isinline": false
        },
        "readUTFBytes": {
          "args": [
            {
              "name": "inLen",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "readUTFBytes",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "readUTFBytes(inLen:Int) : String",
          "isstatic": false,
          "isinline": false
        },
        "writeBytes": {
          "args": [
            {
              "name": "bytes",
              "type": "haxe.io.Bytes",
              "value": ""
            },
            {
              "name": "?inOffset",
              "type": "Int",
              "value": "0"
            },
            {
              "name": "?inLength",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {},
          "name": "writeBytes",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeBytes(bytes:haxe.io.Bytes, ?inOffset:Int=0, ?inLength:Int=0) : Void",
          "isstatic": false,
          "isinline": false
        },
        "readFloat": {
          "args": [],
          "meta": {},
          "name": "readFloat",
          "returntype": ": Float",
          "doc": "",
          "ispublic": true,
          "signature": "readFloat() : Float",
          "isstatic": false,
          "isinline": false
        },
        "writeUTFBytes": {
          "args": [
            {
              "name": "s",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "writeUTFBytes",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeUTFBytes(s:String) : Void",
          "isstatic": false,
          "isinline": false
        },
        "getStart": {
          "args": [],
          "meta": {},
          "name": "getStart",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getStart() : Int",
          "isstatic": false,
          "isinline": false
        },
        "get_endian": {
          "args": [],
          "meta": {},
          "name": "get_endian",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "get_endian() : String",
          "isstatic": false,
          "isinline": false
        },
        "readFile": {
          "args": [
            {
              "name": "inString",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "readFile",
          "returntype": ": lumen.platform.native.utils.ByteArray",
          "doc": "",
          "ispublic": true,
          "signature": "readFile(inString:String) : lumen.platform.native.utils.ByteArray",
          "isstatic": true,
          "isinline": false
        },
        "get_byteLength": {
          "args": [],
          "meta": {},
          "name": "get_byteLength",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "get_byteLength() : Int",
          "isstatic": false,
          "isinline": false
        },
        "set_endian": {
          "args": [
            {
              "name": "s",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_endian",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "set_endian(s:String) : String",
          "isstatic": false,
          "isinline": false
        },
        "fromBytes": {
          "args": [
            {
              "name": "inBytes",
              "type": "haxe.io.Bytes",
              "value": null
            }
          ],
          "meta": {},
          "name": "fromBytes",
          "returntype": ": lumen.platform.native.utils.ByteArray",
          "doc": "",
          "ispublic": true,
          "signature": "fromBytes(inBytes:haxe.io.Bytes) : lumen.platform.native.utils.ByteArray",
          "isstatic": true,
          "isinline": false
        },
        "readUnsignedShort": {
          "args": [],
          "meta": {},
          "name": "readUnsignedShort",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readUnsignedShort() : Int",
          "isstatic": false,
          "isinline": false
        },
        "setLength": {
          "args": [
            {
              "name": "inLength",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "setLength",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "setLength(inLength:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "slice": {
          "args": [
            {
              "name": "inBegin",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?inEnd",
              "type": "Int",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "slice",
          "returntype": ": lumen.platform.native.utils.ByteArray",
          "doc": "",
          "ispublic": true,
          "signature": "slice(inBegin:Int, ?inEnd:Int) : lumen.platform.native.utils.ByteArray",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "?inSize",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(?inSize:Int=0) ",
          "isstatic": false,
          "isinline": false
        },
        "readInt": {
          "args": [],
          "meta": {},
          "name": "readInt",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readInt() : Int",
          "isstatic": false,
          "isinline": false
        },
        "readUTF": {
          "args": [],
          "meta": {},
          "name": "readUTF",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "readUTF() : String",
          "isstatic": false,
          "isinline": false
        },
        "compress": {
          "args": [
            {
              "name": "?algorithm",
              "type": "lumen.utils.compat.CompressionAlgorithm",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "compress",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "compress(?algorithm:lumen.utils.compat.CompressionAlgorithm) : Void",
          "isstatic": false,
          "isinline": false
        },
        "getByteBuffer": {
          "args": [],
          "meta": {},
          "name": "getByteBuffer",
          "returntype": ": lumen.platform.native.utils.ByteArray",
          "doc": "",
          "ispublic": true,
          "signature": "getByteBuffer() : lumen.platform.native.utils.ByteArray",
          "isstatic": false,
          "isinline": false
        },
        "readUnsignedInt": {
          "args": [],
          "meta": {},
          "name": "readUnsignedInt",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readUnsignedInt() : Int",
          "isstatic": false,
          "isinline": false
        },
        "uncompress": {
          "args": [
            {
              "name": "?algorithm",
              "type": "lumen.utils.compat.CompressionAlgorithm",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "uncompress",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "uncompress(?algorithm:lumen.utils.compat.CompressionAlgorithm) : Void",
          "isstatic": false,
          "isinline": false
        },
        "inflate": {
          "args": [],
          "meta": {},
          "name": "inflate",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "inflate() : Void",
          "isstatic": false,
          "isinline": false
        },
        "ThrowEOFi": {
          "args": [],
          "meta": {},
          "name": "ThrowEOFi",
          "returntype": ": Int",
          "doc": "@private",
          "ispublic": false,
          "signature": "ThrowEOFi() : Int",
          "isstatic": false,
          "isinline": false
        },
        "readBytes": {
          "args": [
            {
              "name": "outData",
              "type": "lumen.platform.native.utils.ByteArray",
              "value": ""
            },
            {
              "name": "?inOffset",
              "type": "Int",
              "value": "0"
            },
            {
              "name": "?inLen",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {},
          "name": "readBytes",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "readBytes(outData:lumen.platform.native.utils.ByteArray, ?inOffset:Int=0, ?inLen:Int=0) : Void",
          "isstatic": false,
          "isinline": false
        },
        "writeShort": {
          "args": [
            {
              "name": "value",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "writeShort",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeShort(value:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "checkData": {
          "args": [
            {
              "name": "inLength",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "checkData",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "checkData(inLength:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "writeUnsignedInt": {
          "args": [
            {
              "name": "value",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "writeUnsignedInt",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeUnsignedInt(value:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "writeFloat": {
          "args": [
            {
              "name": "x",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "writeFloat",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeFloat(x:Float) : Void",
          "isstatic": false,
          "isinline": false
        },
        "getLength": {
          "args": [],
          "meta": {},
          "name": "getLength",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getLength() : Int",
          "isstatic": false,
          "isinline": false
        },
        "ensureElem": {
          "args": [
            {
              "name": "inSize",
              "type": "Int",
              "value": null
            },
            {
              "name": "inUpdateLenght",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "ensureElem",
          "returntype": ": Void",
          "doc": "@private",
          "ispublic": false,
          "signature": "ensureElem(inSize:Int, inUpdateLenght:Bool) : Void",
          "isstatic": false,
          "isinline": false
        },
        "asString": {
          "args": [],
          "meta": {},
          "name": "asString",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "asString() : String",
          "isstatic": false,
          "isinline": false
        },
        "deflate": {
          "args": [],
          "meta": {},
          "name": "deflate",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deflate() : Void",
          "isstatic": false,
          "isinline": false
        },
        "writeInt": {
          "args": [
            {
              "name": "value",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "writeInt",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeInt(value:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "writeUTF": {
          "args": [
            {
              "name": "s",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "writeUTF",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "writeUTF(s:String) : Void",
          "isstatic": false,
          "isinline": false
        },
        "readDouble": {
          "args": [],
          "meta": {},
          "name": "readDouble",
          "returntype": ": Float",
          "doc": "",
          "ispublic": true,
          "signature": "readDouble() : Float",
          "isstatic": false,
          "isinline": false
        },
        "get_bytesAvailable": {
          "args": [],
          "meta": {},
          "name": "get_bytesAvailable",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "get_bytesAvailable() : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": [
        "lumen.utils.IMemoryRange",
        "lumen.utils.IDataInput"
      ]
    },
    "lumen.platform.native.audio.openal.ALC": {
      "extend": [],
      "meta": {},
      "name": "lumen.platform.native.audio.openal.ALC",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "INVALID_VALUE_MEANING": {
          "meta": {},
          "name": "INVALID_VALUE_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_VALUE_MEANING : String",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_DEVICE_MEANING": {
          "meta": {},
          "name": "INVALID_DEVICE_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_DEVICE_MEANING : String",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcGetIntegerv": {
          "meta": {},
          "name": "alhx_alcGetIntegerv",
          "type": "Dynamic->Int->Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcGetIntegerv : Dynamic->Int->Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "DEFAULT_ALL_DEVICES_SPECIFIER": {
          "meta": {},
          "name": "DEFAULT_ALL_DEVICES_SPECIFIER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DEFAULT_ALL_DEVICES_SPECIFIER : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcMakeContextCurrent": {
          "meta": {},
          "name": "alhx_alcMakeContextCurrent",
          "type": "Dynamic->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcMakeContextCurrent : Dynamic->Bool",
          "isstatic": true,
          "isinline": false
        },
        "DEFAULT_DEVICE_SPECIFIER": {
          "meta": {},
          "name": "DEFAULT_DEVICE_SPECIFIER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DEFAULT_DEVICE_SPECIFIER : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcProcessContext": {
          "meta": {},
          "name": "alhx_alcProcessContext",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcProcessContext : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_CONTEXT": {
          "meta": {},
          "name": "INVALID_CONTEXT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_CONTEXT : Int",
          "isstatic": true,
          "isinline": false
        },
        "STEREO_SOURCES": {
          "meta": {},
          "name": "STEREO_SOURCES",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "STEREO_SOURCES : Int",
          "isstatic": true,
          "isinline": false
        },
        "OUT_OF_MEMORY": {
          "meta": {},
          "name": "OUT_OF_MEMORY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "OUT_OF_MEMORY : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcGetCurrentContext": {
          "meta": {},
          "name": "alhx_alcGetCurrentContext",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcGetCurrentContext : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_CONTEXT_MEANING": {
          "meta": {},
          "name": "INVALID_CONTEXT_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_CONTEXT_MEANING : String",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcGetContextsDevice": {
          "meta": {},
          "name": "alhx_alcGetContextsDevice",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcGetContextsDevice : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "REFRESH": {
          "meta": {},
          "name": "REFRESH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "REFRESH : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcOpenDevice": {
          "meta": {},
          "name": "alhx_alcOpenDevice",
          "type": "String->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcOpenDevice : String->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "ALL_DEVICES_SPECIFIER": {
          "meta": {},
          "name": "ALL_DEVICES_SPECIFIER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ALL_DEVICES_SPECIFIER : Int",
          "isstatic": true,
          "isinline": false
        },
        "FALSE": {
          "meta": {},
          "name": "FALSE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FALSE : Int",
          "isstatic": true,
          "isinline": false
        },
        "EXTENSIONS": {
          "meta": {},
          "name": "EXTENSIONS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EXTENSIONS : Int",
          "isstatic": true,
          "isinline": false
        },
        "ALL_ATTRIBUTES": {
          "meta": {},
          "name": "ALL_ATTRIBUTES",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ALL_ATTRIBUTES : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcSuspendContext": {
          "meta": {},
          "name": "alhx_alcSuspendContext",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcSuspendContext : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_ENUM": {
          "meta": {},
          "name": "INVALID_ENUM",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_ENUM : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_DEVICE": {
          "meta": {},
          "name": "INVALID_DEVICE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_DEVICE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcDestroyContext": {
          "meta": {},
          "name": "alhx_alcDestroyContext",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcDestroyContext : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "ATTRIBUTES_SIZE": {
          "meta": {},
          "name": "ATTRIBUTES_SIZE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ATTRIBUTES_SIZE : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_ENUM_MEANING": {
          "meta": {},
          "name": "INVALID_ENUM_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_ENUM_MEANING : String",
          "isstatic": true,
          "isinline": false
        },
        "DEVICE_SPECIFIER": {
          "meta": {},
          "name": "DEVICE_SPECIFIER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DEVICE_SPECIFIER : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcGetString": {
          "meta": {},
          "name": "alhx_alcGetString",
          "type": "Dynamic->Int->String",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcGetString : Dynamic->Int->String",
          "isstatic": true,
          "isinline": false
        },
        "MONO_SOURCES": {
          "meta": {},
          "name": "MONO_SOURCES",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MONO_SOURCES : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcCreateContext": {
          "meta": {},
          "name": "alhx_alcCreateContext",
          "type": "Dynamic->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcCreateContext : Dynamic->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "NO_ERROR": {
          "meta": {},
          "name": "NO_ERROR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "NO_ERROR : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_VALUE": {
          "meta": {},
          "name": "INVALID_VALUE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_VALUE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcCloseDevice": {
          "meta": {},
          "name": "alhx_alcCloseDevice",
          "type": "Dynamic->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcCloseDevice : Dynamic->Bool",
          "isstatic": true,
          "isinline": false
        },
        "alhx_alcGetError": {
          "meta": {},
          "name": "alhx_alcGetError",
          "type": "Dynamic->Int",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_alcGetError : Dynamic->Int",
          "isstatic": true,
          "isinline": false
        },
        "SYNC": {
          "meta": {},
          "name": "SYNC",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SYNC : Int",
          "isstatic": true,
          "isinline": false
        },
        "FREQUENCY": {
          "meta": {},
          "name": "FREQUENCY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FREQUENCY : Int",
          "isstatic": true,
          "isinline": false
        },
        "ENUMERATE_ALL_EXT": {
          "meta": {},
          "name": "ENUMERATE_ALL_EXT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ENUMERATE_ALL_EXT : Int",
          "isstatic": true,
          "isinline": false
        },
        "TRUE": {
          "meta": {},
          "name": "TRUE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "TRUE : Int",
          "isstatic": true,
          "isinline": false
        },
        "OUT_OF_MEMORY_MEANING": {
          "meta": {},
          "name": "OUT_OF_MEMORY_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "OUT_OF_MEMORY_MEANING : String",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "getIntegerv": {
          "args": [
            {
              "name": "device",
              "type": "Dynamic",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "size",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getIntegerv",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "getIntegerv(device:Dynamic, param:Int, size:Int) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "processContext": {
          "args": [
            {
              "name": "context",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "processContext",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "processContext(context:Dynamic) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getError": {
          "args": [
            {
              "name": "device",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "getError",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getError(device:Dynamic) : Int",
          "isstatic": true,
          "isinline": false
        },
        "suspendContext": {
          "args": [
            {
              "name": "context",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "suspendContext",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "suspendContext(context:Dynamic) : Void",
          "isstatic": true,
          "isinline": false
        },
        "createContext": {
          "args": [
            {
              "name": "device",
              "type": "Dynamic",
              "value": ""
            },
            {
              "name": "?attrlist",
              "type": "Array<Int>",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "createContext",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "createContext(device:Dynamic, ?attrlist:Array<Int>) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "destroyContext": {
          "args": [
            {
              "name": "context",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "destroyContext",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroyContext(context:Dynamic) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getString": {
          "args": [
            {
              "name": "device",
              "type": "Dynamic",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getString",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "getString(device:Dynamic, param:Int) : String",
          "isstatic": true,
          "isinline": false
        },
        "getErrorMeaning": {
          "args": [
            {
              "name": "error",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getErrorMeaning",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "getErrorMeaning(error:Int) : String",
          "isstatic": true,
          "isinline": false
        },
        "makeContextCurrent": {
          "args": [
            {
              "name": "context",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "makeContextCurrent",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "makeContextCurrent(context:Dynamic) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "getCurrentContext": {
          "args": [],
          "meta": {},
          "name": "getCurrentContext",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getCurrentContext() : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "getContextsDevice": {
          "args": [
            {
              "name": "context",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "getContextsDevice",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getContextsDevice(context:Dynamic) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "closeDevice": {
          "args": [
            {
              "name": "device",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "closeDevice",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "closeDevice(device:Dynamic) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "openDevice": {
          "args": [
            {
              "name": "?devicename",
              "type": "String",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "openDevice",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "openDevice(?devicename:String) : Dynamic",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.audio.SoundBinding": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.audio.SoundBinding",
      "properties": {
        "pitch": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "pitch",
          "type": "Float",
          "iswrite": true,
          "isread": true,
          "doc": "The pitch of this sound",
          "signature": "pitch : Float",
          "type_desc": "read/write"
        },
        "position": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "position",
          "type": "Int",
          "iswrite": true,
          "isread": true,
          "doc": "The current playback position of this sound in `bytes`",
          "signature": "position : Int",
          "type_desc": "read/write"
        },
        "time": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "time",
          "type": "Float",
          "iswrite": true,
          "isread": true,
          "doc": "The current playback time of this sound in `seconds`",
          "signature": "time : Float",
          "type_desc": "read/write"
        },
        "volume": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "volume",
          "type": "Float",
          "iswrite": true,
          "isread": true,
          "doc": "The volume of this sound",
          "signature": "volume : Float",
          "type_desc": "read/write"
        },
        "pan": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "pan",
          "type": "Float",
          "iswrite": true,
          "isread": true,
          "doc": "The pan of this sound. Pan only logically works on mono sounds, and is by default 2D sounds",
          "signature": "pan : Float",
          "type_desc": "read/write"
        },
        "duration": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "duration",
          "type": "Float",
          "iswrite": false,
          "isread": true,
          "doc": "The duration of this sound, in `bytes`",
          "signature": "duration : Float",
          "type_desc": "(read only)"
        },
        "length": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "length",
          "type": "Int",
          "iswrite": false,
          "isread": true,
          "doc": "The length of this sound in `seconds`",
          "signature": "length : Int",
          "type_desc": "(read only)"
        },
        "looping": {
          "meta": {
            "meta": {
              "name": ":isVar",
              "value": ""
            }
          },
          "name": "looping",
          "type": "Bool",
          "iswrite": true,
          "isread": true,
          "doc": "If the sound is looping or not",
          "signature": "looping : Bool",
          "type_desc": "read/write"
        }
      },
      "doc": "",
      "ispublic": true,
      "members": {
        "info": {
          "meta": {},
          "name": "info",
          "type": "lumen.types.AudioInfo",
          "doc": "The `AudioInfo` this sound is created from",
          "ispublic": true,
          "signature": "info : lumen.types.AudioInfo",
          "isstatic": false,
          "isinline": false
        },
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "name": {
          "meta": {},
          "name": "name",
          "type": "String",
          "doc": "The name of this sound",
          "ispublic": true,
          "signature": "name : String",
          "isstatic": false,
          "isinline": false
        },
        "paused": {
          "meta": {},
          "name": "paused",
          "type": "Bool",
          "doc": "If the sound is paused",
          "ispublic": true,
          "signature": "paused : Bool",
          "isstatic": false,
          "isinline": false
        },
        "playing": {
          "meta": {},
          "name": "playing",
          "type": "Bool",
          "doc": "If the sound is playing",
          "ispublic": true,
          "signature": "playing : Bool",
          "isstatic": false,
          "isinline": false
        },
        "manager": {
          "meta": {},
          "name": "manager",
          "type": "lumen.audio.Audio",
          "doc": "The `Audio` system handling this sound",
          "ispublic": true,
          "signature": "manager : lumen.audio.Audio",
          "isstatic": false,
          "isinline": false
        },
        "is_stream": {
          "meta": {},
          "name": "is_stream",
          "type": "Bool",
          "doc": "If the sound is a stream source",
          "ispublic": true,
          "signature": "is_stream : Bool",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "loop": {
          "args": [],
          "meta": {},
          "name": "loop",
          "returntype": ": Void",
          "doc": "Loop this sound",
          "ispublic": true,
          "signature": "loop() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_duration": {
          "args": [],
          "meta": {},
          "name": "get_duration",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "get_duration() : Float",
          "isstatic": false,
          "isinline": false
        },
        "play": {
          "args": [],
          "meta": {},
          "name": "play",
          "returntype": ": Void",
          "doc": "Play this sound",
          "ispublic": true,
          "signature": "play() : Void",
          "isstatic": false,
          "isinline": false
        },
        "stop": {
          "args": [],
          "meta": {},
          "name": "stop",
          "returntype": ": Void",
          "doc": "Stop this sound",
          "ispublic": true,
          "signature": "stop() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_time": {
          "args": [],
          "meta": {},
          "name": "get_time",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "get_time() : Float",
          "isstatic": false,
          "isinline": false
        },
        "get_volume": {
          "args": [],
          "meta": {},
          "name": "get_volume",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "get_volume() : Float",
          "isstatic": false,
          "isinline": false
        },
        "set_volume": {
          "args": [
            {
              "name": "_volume",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_volume",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_volume(_volume:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "internal_update": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "internal_update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "internal_update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_pitch": {
          "args": [
            {
              "name": "_pitch",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_pitch",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_pitch(_pitch:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "bytes_to_seconds": {
          "args": [
            {
              "name": "_bytes",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "bytes_to_seconds",
          "returntype": ": Float",
          "doc": "A helper for converting bytes to seconds for this sound source, using the format settings specific to this sound",
          "ispublic": true,
          "signature": "bytes_to_seconds(_bytes:Int) : Float",
          "isstatic": false,
          "isinline": false
        },
        "set_time": {
          "args": [
            {
              "name": "_time",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_time",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_time(_time:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "get_position": {
          "args": [],
          "meta": {},
          "name": "get_position",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "get_position() : Int",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.audio.Audio",
              "value": null
            },
            {
              "name": "_name",
              "type": "String",
              "value": null
            },
            {
              "name": "_audio_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.audio.Audio, _name:String, _audio_info:lumen.types.AudioInfo) ",
          "isstatic": false,
          "isinline": false
        },
        "get_pitch": {
          "args": [],
          "meta": {},
          "name": "get_pitch",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "get_pitch() : Float",
          "isstatic": false,
          "isinline": false
        },
        "internal_loop": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "internal_loop",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "internal_loop() : Void",
          "isstatic": false,
          "isinline": false
        },
        "internal_play": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "internal_play",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "internal_play() : Void",
          "isstatic": false,
          "isinline": false
        },
        "toggle": {
          "args": [],
          "meta": {},
          "name": "toggle",
          "returntype": ": Void",
          "doc": "Toggle this sound",
          "ispublic": true,
          "signature": "toggle() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_length": {
          "args": [],
          "meta": {},
          "name": "get_length",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "get_length() : Int",
          "isstatic": false,
          "isinline": false
        },
        "internal_stop": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "internal_stop",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "internal_stop() : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_position": {
          "args": [
            {
              "name": "_position",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_position",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "set_position(_position:Int) : Int",
          "isstatic": false,
          "isinline": false
        },
        "set_pan": {
          "args": [
            {
              "name": "_pan",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_pan",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_pan(_pan:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "Destroy this sound and it's data",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_looping": {
          "args": [],
          "meta": {},
          "name": "get_looping",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "get_looping() : Bool",
          "isstatic": false,
          "isinline": false
        },
        "get_pan": {
          "args": [],
          "meta": {},
          "name": "get_pan",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "get_pan() : Float",
          "isstatic": false,
          "isinline": false
        },
        "internal_pause": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "internal_pause",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "internal_pause() : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_looping": {
          "args": [
            {
              "name": "_looping",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_looping",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "set_looping(_looping:Bool) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "seconds_to_bytes": {
          "args": [
            {
              "name": "_seconds",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "seconds_to_bytes",
          "returntype": ": Int",
          "doc": "A helper for converting seconds to bytes for this sound source, using the format settings specific to this sound",
          "ispublic": true,
          "signature": "seconds_to_bytes(_seconds:Float) : Int",
          "isstatic": false,
          "isinline": false
        },
        "pause": {
          "args": [],
          "meta": {},
          "name": "pause",
          "returntype": ": Void",
          "doc": "Pause this sound",
          "ispublic": true,
          "signature": "pause() : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.input.sdl.GamepadEventTypes": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.sdl.GamepadEventTypes",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "ge_removed": {
          "meta": {},
          "name": "ge_removed",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ge_removed : Int",
          "isstatic": true,
          "isinline": false
        },
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "ge_button_down": {
          "meta": {},
          "name": "ge_button_down",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ge_button_down : Int",
          "isstatic": true,
          "isinline": false
        },
        "ge_button_up": {
          "meta": {},
          "name": "ge_button_up",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ge_button_up : Int",
          "isstatic": true,
          "isinline": false
        },
        "ge_added": {
          "meta": {},
          "name": "ge_added",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ge_added : Int",
          "isstatic": true,
          "isinline": false
        },
        "ge_axis": {
          "meta": {},
          "name": "ge_axis",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ge_axis : Int",
          "isstatic": true,
          "isinline": false
        },
        "ge_remapped": {
          "meta": {},
          "name": "ge_remapped",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ge_remapped : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "typed": {
          "args": [
            {
              "name": "ge_type",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "typed",
          "returntype": ": lumen.platform.native.input.sdl.ControllerEventType",
          "doc": "",
          "ispublic": true,
          "signature": "typed(ge_type:Int) : lumen.platform.native.input.sdl.ControllerEventType",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.types.InputEvents": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.types.InputEvents",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "ie_key": {
          "meta": {},
          "name": "ie_key",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ie_key : Int",
          "isstatic": true,
          "isinline": false
        },
        "ie_controller": {
          "meta": {},
          "name": "ie_controller",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ie_controller : Int",
          "isstatic": true,
          "isinline": false
        },
        "ie_mouse": {
          "meta": {},
          "name": "ie_mouse",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ie_mouse : Int",
          "isstatic": true,
          "isinline": false
        },
        "ie_touch": {
          "meta": {},
          "name": "ie_touch",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ie_touch : Int",
          "isstatic": true,
          "isinline": false
        },
        "ie_joystick": {
          "meta": {},
          "name": "ie_joystick",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ie_joystick : Int",
          "isstatic": true,
          "isinline": false
        },
        "ie_unknown": {
          "meta": {},
          "name": "ie_unknown",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ie_unknown : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "typed": {
          "args": [
            {
              "name": "type",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "typed",
          "returntype": ": lumen.types.InputEventType",
          "doc": "returns a typed `InputEventType` from an integer ID, for communication between internal native + haxe code",
          "ispublic": true,
          "signature": "typed(type:Int) : lumen.types.InputEventType",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.types.AssetAudio": {
      "extend": [
        "lumen.types.Asset"
      ],
      "meta": {},
      "name": "lumen.types.AssetAudio",
      "properties": {},
      "doc": "An asset that contains audio file `data` as an `AudioInfo`. Get assets from the `Assets` class, via `app.assets`",
      "ispublic": true,
      "members": {
        "data": {
          "meta": {},
          "name": "data",
          "type": "lumen.types.AudioInfo",
          "doc": "The `AudioInfo` this asset contains",
          "ispublic": true,
          "signature": "data : lumen.types.AudioInfo",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "new": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AssetInfo",
              "value": null
            },
            {
              "name": "_data",
              "type": "lumen.types.AudioInfo",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_info:lumen.types.AssetInfo, _data:lumen.types.AudioInfo) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.window._Window.WindowHandle_Impl_": {
      "extend": [],
      "meta": {},
      "name": "lumen.window._Window.WindowHandle_Impl_",
      "properties": {},
      "doc": "",
      "ispublic": false,
      "members": {},
      "methods": {},
      "implement": []
    },
    "lumen.utils.AbstractClass": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":autoBuild",
          "value": "'???'"
        }
      },
      "name": "lumen.utils.AbstractClass",
      "properties": {},
      "doc": "Old school abstract class.\\n\tClasses that implements it, and their sub-classes, will be able to declare abstract methods (methods that without body).\\n\tThere will be a check in compile-time such that no public constructor is allowed without all abstract methods implemented.",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {},
      "implement": []
    },
    "lumen.platform.native.render.gl.GLTexture": {
      "extend": [
        "lumen.render.gl.GLObject"
      ],
      "meta": {},
      "name": "lumen.platform.native.render.gl.GLTexture",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "new": {
          "args": [
            {
              "name": "version",
              "type": "Int",
              "value": null
            },
            {
              "name": "id",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(version:Int, id:Dynamic) ",
          "isstatic": false,
          "isinline": false
        },
        "getType": {
          "args": [],
          "meta": {},
          "name": "getType",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "getType() : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.Lumen": {
      "extend": [],
      "meta": {},
      "name": "lumen.Lumen",
      "properties": {
        "time": {
          "meta": {},
          "name": "time",
          "type": "Float",
          "iswrite": false,
          "isread": true,
          "doc": "The current timestamp",
          "signature": "time : Float",
          "type_desc": "(read only)"
        },
        "uniqueid": {
          "meta": {},
          "name": "uniqueid",
          "type": "String",
          "iswrite": false,
          "isread": true,
          "doc": "Generate a unique ID to use",
          "signature": "uniqueid : String",
          "type_desc": "(read only)"
        }
      },
      "doc": "",
      "ispublic": true,
      "members": {
        "core": {
          "meta": {},
          "name": "core",
          "type": "lumen.Core",
          "doc": "",
          "ispublic": false,
          "signature": "core : lumen.Core",
          "isstatic": false,
          "isinline": false
        },
        "host": {
          "meta": {},
          "name": "host",
          "type": "lumen.App",
          "doc": "The host application",
          "ispublic": true,
          "signature": "host : lumen.App",
          "isstatic": false,
          "isinline": false
        },
        "config": {
          "meta": {},
          "name": "config",
          "type": "lumen.types.LumenConfig",
          "doc": "The configuration from the project file, runtime config and other configs",
          "ispublic": true,
          "signature": "config : lumen.types.LumenConfig",
          "isstatic": false,
          "isinline": false
        },
        "was_ready": {
          "meta": {},
          "name": "was_ready",
          "type": "Bool",
          "doc": "",
          "ispublic": false,
          "signature": "was_ready : Bool",
          "isstatic": false,
          "isinline": false
        },
        "assets": {
          "meta": {},
          "name": "assets",
          "type": "lumen.assets.Assets",
          "doc": "The asset system",
          "ispublic": true,
          "signature": "assets : lumen.assets.Assets",
          "isstatic": false,
          "isinline": false
        },
        "window": {
          "meta": {},
          "name": "window",
          "type": "lumen.window.Windowing",
          "doc": "The window manager",
          "ispublic": true,
          "signature": "window : lumen.window.Windowing",
          "isstatic": false,
          "isinline": false
        },
        "more_verbose": {
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "more_verbose",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "more_verbose : Bool",
          "isstatic": false,
          "isinline": false
        },
        "verbose": {
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "verbose",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "verbose : Bool",
          "isstatic": false,
          "isinline": false
        },
        "log": {
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "log",
          "type": "Bool",
          "doc": "",
          "ispublic": true,
          "signature": "log : Bool",
          "isstatic": false,
          "isinline": false
        },
        "is_ready": {
          "meta": {},
          "name": "is_ready",
          "type": "Bool",
          "doc": "",
          "ispublic": false,
          "signature": "is_ready : Bool",
          "isstatic": false,
          "isinline": false
        },
        "main_window": {
          "meta": {},
          "name": "main_window",
          "type": "lumen.window.Window",
          "doc": "If the config specifies a default window, this is it",
          "ispublic": true,
          "signature": "main_window : lumen.window.Window",
          "isstatic": false,
          "isinline": false
        },
        "has_shutdown": {
          "meta": {},
          "name": "has_shutdown",
          "type": "Bool",
          "doc": "Set if shut dow has completed",
          "ispublic": true,
          "signature": "has_shutdown : Bool",
          "isstatic": false,
          "isinline": false
        },
        "shutting_down": {
          "meta": {},
          "name": "shutting_down",
          "type": "Bool",
          "doc": "Set if shut down has commenced",
          "ispublic": true,
          "signature": "shutting_down : Bool",
          "isstatic": false,
          "isinline": false
        },
        "audio": {
          "meta": {},
          "name": "audio",
          "type": "lumen.audio.Audio",
          "doc": "The audio system",
          "ispublic": true,
          "signature": "audio : lumen.audio.Audio",
          "isstatic": false,
          "isinline": false
        },
        "input": {
          "meta": {},
          "name": "input",
          "type": "lumen.input.Input",
          "doc": "The input system",
          "ispublic": true,
          "signature": "input : lumen.input.Input",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [
            {
              "name": "_host",
              "type": "lumen.App",
              "value": null
            },
            {
              "name": "_config",
              "type": "lumen.types.LumenConfig",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "init",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "init(_host:lumen.App, _config:lumen.types.LumenConfig) : Void",
          "isstatic": false,
          "isinline": false
        },
        "load": {
          "args": [
            {
              "name": "library",
              "type": "String",
              "value": ""
            },
            {
              "name": "method",
              "type": "String",
              "value": ""
            },
            {
              "name": "?args",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {},
          "name": "load",
          "returntype": ": Dynamic",
          "doc": "Loads a function out of a library",
          "ispublic": true,
          "signature": "load(library:String, method:String, ?args:Int=0) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "get_time": {
          "args": [],
          "meta": {},
          "name": "get_time",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "get_time() : Float",
          "isstatic": false,
          "isinline": false
        },
        "_debug": {
          "args": [
            {
              "name": "value",
              "type": "Dynamic",
              "value": ""
            },
            {
              "name": "?_verbose",
              "type": "Bool",
              "value": "false"
            },
            {
              "name": "?_more_verbose",
              "type": "Bool",
              "value": "false"
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "_debug",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "_debug(value:Dynamic, ?_verbose:Bool=false, ?_more_verbose:Bool=false) : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_lumen_update": {
          "args": [],
          "meta": {},
          "name": "on_lumen_update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "on_lumen_update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "shutdown": {
          "args": [],
          "meta": {},
          "name": "shutdown",
          "returntype": ": Void",
          "doc": "Shutdown the engine and quit",
          "ispublic": true,
          "signature": "shutdown() : Void",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new() ",
          "isstatic": false,
          "isinline": false
        },
        "on_lumen_init": {
          "args": [],
          "meta": {},
          "name": "on_lumen_init",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "on_lumen_init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_uniqueid": {
          "args": [],
          "meta": {},
          "name": "get_uniqueid",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "get_uniqueid() : String",
          "isstatic": false,
          "isinline": false
        },
        "on_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.types.SystemEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "on_event",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "on_event(_event:lumen.types.SystemEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_lumen_ready": {
          "args": [],
          "meta": {},
          "name": "on_lumen_ready",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "on_lumen_ready() : Void",
          "isstatic": false,
          "isinline": false
        },
        "do_internal_render": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "do_internal_render",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "do_internal_render() : Void",
          "isstatic": false,
          "isinline": false
        },
        "do_internal_update": {
          "args": [
            {
              "name": "dt",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "do_internal_update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "do_internal_update(dt:Float) : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.audio.openal.AL": {
      "extend": [],
      "meta": {},
      "name": "lumen.platform.native.audio.openal.AL",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "PITCH": {
          "meta": {},
          "name": "PITCH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PITCH : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_VALUE_MEANING": {
          "meta": {},
          "name": "INVALID_VALUE_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_VALUE_MEANING : String",
          "isstatic": true,
          "isinline": false
        },
        "STOPPED": {
          "meta": {},
          "name": "STOPPED",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "STOPPED : Int",
          "isstatic": true,
          "isinline": false
        },
        "CHANNELS": {
          "meta": {},
          "name": "CHANNELS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CHANNELS : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_NAME_MEANING": {
          "meta": {},
          "name": "INVALID_NAME_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_NAME_MEANING : String",
          "isstatic": true,
          "isinline": false
        },
        "EXPONENT_DISTANCE": {
          "meta": {},
          "name": "EXPONENT_DISTANCE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EXPONENT_DISTANCE : Int",
          "isstatic": true,
          "isinline": false
        },
        "INITIAL": {
          "meta": {},
          "name": "INITIAL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INITIAL : Int",
          "isstatic": true,
          "isinline": false
        },
        "CONE_OUTER_ANGLE": {
          "meta": {},
          "name": "CONE_OUTER_ANGLE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CONE_OUTER_ANGLE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetBooleanv": {
          "meta": {},
          "name": "alhx_GetBooleanv",
          "type": "Int->Null->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetBooleanv : Int->Null->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_IsEnabled": {
          "meta": {},
          "name": "alhx_IsEnabled",
          "type": "Int->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_IsEnabled : Int->Bool",
          "isstatic": true,
          "isinline": false
        },
        "alhx_DeleteBuffer": {
          "meta": {},
          "name": "alhx_DeleteBuffer",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_DeleteBuffer : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetEnumValue": {
          "meta": {},
          "name": "alhx_GetEnumValue",
          "type": "String->Int",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetEnumValue : String->Int",
          "isstatic": true,
          "isinline": false
        },
        "UNDETERMINED": {
          "meta": {},
          "name": "UNDETERMINED",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "UNDETERMINED : Int",
          "isstatic": true,
          "isinline": false
        },
        "VENDOR": {
          "meta": {},
          "name": "VENDOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "VENDOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_DistanceModel": {
          "meta": {},
          "name": "alhx_DistanceModel",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_DistanceModel : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourcePause": {
          "meta": {},
          "name": "alhx_SourcePause",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourcePause : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetBoolean": {
          "meta": {},
          "name": "alhx_GetBoolean",
          "type": "Int->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetBoolean : Int->Bool",
          "isstatic": true,
          "isinline": false
        },
        "alhx_IsSource": {
          "meta": {},
          "name": "alhx_IsSource",
          "type": "Int->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_IsSource : Int->Bool",
          "isstatic": true,
          "isinline": false
        },
        "ORIENTATION": {
          "meta": {},
          "name": "ORIENTATION",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ORIENTATION : Int",
          "isstatic": true,
          "isinline": false
        },
        "MAX_GAIN": {
          "meta": {},
          "name": "MAX_GAIN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MAX_GAIN : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_OPERATION_MEANING": {
          "meta": {},
          "name": "INVALID_OPERATION_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_OPERATION_MEANING : String",
          "isstatic": true,
          "isinline": false
        },
        "DOPPLER_FACTOR": {
          "meta": {},
          "name": "DOPPLER_FACTOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DOPPLER_FACTOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "ROLLOFF_FACTOR": {
          "meta": {},
          "name": "ROLLOFF_FACTOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ROLLOFF_FACTOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "EXPONENT_DISTANCE_CLAMPED": {
          "meta": {},
          "name": "EXPONENT_DISTANCE_CLAMPED",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EXPONENT_DISTANCE_CLAMPED : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_IsExtensionPresent": {
          "meta": {},
          "name": "alhx_IsExtensionPresent",
          "type": "String->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_IsExtensionPresent : String->Bool",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourcePlayv": {
          "meta": {},
          "name": "alhx_SourcePlayv",
          "type": "Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourcePlayv : Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetString": {
          "meta": {},
          "name": "alhx_GetString",
          "type": "Int->String",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetString : Int->String",
          "isstatic": true,
          "isinline": false
        },
        "FORMAT_STEREO8": {
          "meta": {},
          "name": "FORMAT_STEREO8",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FORMAT_STEREO8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "SOURCE_TYPE": {
          "meta": {},
          "name": "SOURCE_TYPE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SOURCE_TYPE : Int",
          "isstatic": true,
          "isinline": false
        },
        "OUT_OF_MEMORY": {
          "meta": {},
          "name": "OUT_OF_MEMORY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "OUT_OF_MEMORY : Int",
          "isstatic": true,
          "isinline": false
        },
        "CONE_OUTER_GAIN": {
          "meta": {},
          "name": "CONE_OUTER_GAIN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CONE_OUTER_GAIN : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourceUnqueueBuffers": {
          "meta": {},
          "name": "alhx_SourceUnqueueBuffers",
          "type": "Int->Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourceUnqueueBuffers : Int->Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourceQueueBuffers": {
          "meta": {},
          "name": "alhx_SourceQueueBuffers",
          "type": "Int->Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourceQueueBuffers : Int->Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetInteger": {
          "meta": {},
          "name": "alhx_GetInteger",
          "type": "Int->Int",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetInteger : Int->Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_DopplerFactor": {
          "meta": {},
          "name": "alhx_DopplerFactor",
          "type": "Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_DopplerFactor : Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "BUFFERS_QUEUED": {
          "meta": {},
          "name": "BUFFERS_QUEUED",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BUFFERS_QUEUED : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_IsBuffer": {
          "meta": {},
          "name": "alhx_IsBuffer",
          "type": "Int->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_IsBuffer : Int->Bool",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetSource3f": {
          "meta": {},
          "name": "alhx_GetSource3f",
          "type": "Int->Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetSource3f : Int->Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetSource3i": {
          "meta": {},
          "name": "alhx_GetSource3i",
          "type": "Int->Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetSource3i : Int->Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetSourcefv": {
          "meta": {},
          "name": "alhx_GetSourcefv",
          "type": "Int->Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetSourcefv : Int->Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetSourceiv": {
          "meta": {},
          "name": "alhx_GetSourceiv",
          "type": "Int->Int->Null->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetSourceiv : Int->Int->Null->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Buffer3f": {
          "meta": {},
          "name": "alhx_Buffer3f",
          "type": "Int->Int->Float->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Buffer3f : Int->Int->Float->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Buffer3i": {
          "meta": {},
          "name": "alhx_Buffer3i",
          "type": "Int->Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Buffer3i : Int->Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Bufferfv": {
          "meta": {},
          "name": "alhx_Bufferfv",
          "type": "Int->Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Bufferfv : Int->Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Bufferiv": {
          "meta": {},
          "name": "alhx_Bufferiv",
          "type": "Int->Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Bufferiv : Int->Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourcePlay": {
          "meta": {},
          "name": "alhx_SourcePlay",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourcePlay : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "VELOCITY": {
          "meta": {},
          "name": "VELOCITY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "VELOCITY : Int",
          "isstatic": true,
          "isinline": false
        },
        "FALSE": {
          "meta": {},
          "name": "FALSE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FALSE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourceStop": {
          "meta": {},
          "name": "alhx_SourceStop",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourceStop : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "FORMAT_MONO8": {
          "meta": {},
          "name": "FORMAT_MONO8",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FORMAT_MONO8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "EXTENSIONS": {
          "meta": {},
          "name": "EXTENSIONS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EXTENSIONS : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetDouble": {
          "meta": {},
          "name": "alhx_GetDouble",
          "type": "Int->Float",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetDouble : Int->Float",
          "isstatic": true,
          "isinline": false
        },
        "VERSION": {
          "meta": {},
          "name": "VERSION",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "VERSION : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourcePausev": {
          "meta": {},
          "name": "alhx_SourcePausev",
          "type": "Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourcePausev : Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "SOURCE_RELATIVE": {
          "meta": {},
          "name": "SOURCE_RELATIVE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SOURCE_RELATIVE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Disable": {
          "meta": {},
          "name": "alhx_Disable",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Disable : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourceRewindv": {
          "meta": {},
          "name": "alhx_SourceRewindv",
          "type": "Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourceRewindv : Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Bufferf": {
          "meta": {},
          "name": "alhx_Bufferf",
          "type": "Int->Int->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Bufferf : Int->Int->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Bufferi": {
          "meta": {},
          "name": "alhx_Bufferi",
          "type": "Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Bufferi : Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "DISTANCE_MODEL": {
          "meta": {},
          "name": "DISTANCE_MODEL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DISTANCE_MODEL : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GenSource": {
          "meta": {},
          "name": "alhx_GenSource",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GenSource : Int",
          "isstatic": true,
          "isinline": false
        },
        "BUFFER": {
          "meta": {},
          "name": "BUFFER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BUFFER : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetListener3f": {
          "meta": {},
          "name": "alhx_GetListener3f",
          "type": "Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetListener3f : Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetListener3i": {
          "meta": {},
          "name": "alhx_GetListener3i",
          "type": "Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetListener3i : Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetListenerfv": {
          "meta": {},
          "name": "alhx_GetListenerfv",
          "type": "Int->Null->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetListenerfv : Int->Null->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetListeneriv": {
          "meta": {},
          "name": "alhx_GetListeneriv",
          "type": "Int->Null->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetListeneriv : Int->Null->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetBufferf": {
          "meta": {},
          "name": "alhx_GetBufferf",
          "type": "Int->Int->Float",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetBufferf : Int->Int->Float",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetBufferi": {
          "meta": {},
          "name": "alhx_GetBufferi",
          "type": "Int->Int->Int",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetBufferi : Int->Int->Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Sourcef": {
          "meta": {},
          "name": "alhx_Sourcef",
          "type": "Int->Int->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Sourcef : Int->Int->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Sourcei": {
          "meta": {},
          "name": "alhx_Sourcei",
          "type": "Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Sourcei : Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "PLAYING": {
          "meta": {},
          "name": "PLAYING",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PLAYING : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetFloatv": {
          "meta": {},
          "name": "alhx_GetFloatv",
          "type": "Int->Null->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetFloatv : Int->Null->Array",
          "isstatic": true,
          "isinline": false
        },
        "DIRECTION": {
          "meta": {},
          "name": "DIRECTION",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DIRECTION : Int",
          "isstatic": true,
          "isinline": false
        },
        "RENDERER": {
          "meta": {},
          "name": "RENDERER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RENDERER : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetSourcef": {
          "meta": {},
          "name": "alhx_GetSourcef",
          "type": "Int->Int->Float",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetSourcef : Int->Int->Float",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetSourcei": {
          "meta": {},
          "name": "alhx_GetSourcei",
          "type": "Int->Int->Int",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetSourcei : Int->Int->Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_DeleteBuffers": {
          "meta": {},
          "name": "alhx_DeleteBuffers",
          "type": "Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_DeleteBuffers : Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Enable": {
          "meta": {},
          "name": "alhx_Enable",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Enable : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_ENUM": {
          "meta": {},
          "name": "INVALID_ENUM",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_ENUM : Int",
          "isstatic": true,
          "isinline": false
        },
        "CONE_INNER_ANGLE": {
          "meta": {},
          "name": "CONE_INNER_ANGLE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CONE_INNER_ANGLE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetDoublev": {
          "meta": {},
          "name": "alhx_GetDoublev",
          "type": "Int->Null->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetDoublev : Int->Null->Array",
          "isstatic": true,
          "isinline": false
        },
        "LINEAR_DISTANCE": {
          "meta": {},
          "name": "LINEAR_DISTANCE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LINEAR_DISTANCE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_DeleteSources": {
          "meta": {},
          "name": "alhx_DeleteSources",
          "type": "Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_DeleteSources : Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_BufferData": {
          "meta": {},
          "name": "alhx_BufferData",
          "type": "Int->Int->lumen.platform.native.utils.ByteArray->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_BufferData : Int->Int->lumen.platform.native.utils.ByteArray->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_NAME": {
          "meta": {},
          "name": "INVALID_NAME",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_NAME : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourceStopv": {
          "meta": {},
          "name": "alhx_SourceStopv",
          "type": "Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourceStopv : Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SourceRewind": {
          "meta": {},
          "name": "alhx_SourceRewind",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SourceRewind : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_DopplerVelocity": {
          "meta": {},
          "name": "alhx_DopplerVelocity",
          "type": "Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_DopplerVelocity : Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "REFERENCE_DISTANCE": {
          "meta": {},
          "name": "REFERENCE_DISTANCE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "REFERENCE_DISTANCE : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_ENUM_MEANING": {
          "meta": {},
          "name": "INVALID_ENUM_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_ENUM_MEANING : String",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetListenerf": {
          "meta": {},
          "name": "alhx_GetListenerf",
          "type": "Int->Float",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetListenerf : Int->Float",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetListeneri": {
          "meta": {},
          "name": "alhx_GetListeneri",
          "type": "Int->Int",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetListeneri : Int->Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetError": {
          "meta": {},
          "name": "alhx_GetError",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetError : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVERSE_DISTANCE": {
          "meta": {},
          "name": "INVERSE_DISTANCE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVERSE_DISTANCE : Int",
          "isstatic": true,
          "isinline": false
        },
        "DOPPLER_VELOCITY": {
          "meta": {},
          "name": "DOPPLER_VELOCITY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DOPPLER_VELOCITY : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GenBuffer": {
          "meta": {},
          "name": "alhx_GenBuffer",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GenBuffer : Int",
          "isstatic": true,
          "isinline": false
        },
        "LOOPING": {
          "meta": {},
          "name": "LOOPING",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LOOPING : Int",
          "isstatic": true,
          "isinline": false
        },
        "MIN_GAIN": {
          "meta": {},
          "name": "MIN_GAIN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MIN_GAIN : Int",
          "isstatic": true,
          "isinline": false
        },
        "PAUSED": {
          "meta": {},
          "name": "PAUSED",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PAUSED : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_SpeedOfSound": {
          "meta": {},
          "name": "alhx_SpeedOfSound",
          "type": "Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_SpeedOfSound : Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "POSITION": {
          "meta": {},
          "name": "POSITION",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "POSITION : Int",
          "isstatic": true,
          "isinline": false
        },
        "MAX_DISTANCE": {
          "meta": {},
          "name": "MAX_DISTANCE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MAX_DISTANCE : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVERSE_DISTANCE_CLAMPED": {
          "meta": {},
          "name": "INVERSE_DISTANCE_CLAMPED",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVERSE_DISTANCE_CLAMPED : Int",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_OPERATION": {
          "meta": {},
          "name": "INVALID_OPERATION",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_OPERATION : Int",
          "isstatic": true,
          "isinline": false
        },
        "SOURCE_STATE": {
          "meta": {},
          "name": "SOURCE_STATE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SOURCE_STATE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetFloat": {
          "meta": {},
          "name": "alhx_GetFloat",
          "type": "Int->Float",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetFloat : Int->Float",
          "isstatic": true,
          "isinline": false
        },
        "BITS": {
          "meta": {},
          "name": "BITS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BITS : Int",
          "isstatic": true,
          "isinline": false
        },
        "BUFFERS_PROCESSED": {
          "meta": {},
          "name": "BUFFERS_PROCESSED",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BUFFERS_PROCESSED : Int",
          "isstatic": true,
          "isinline": false
        },
        "SEC_OFFSET": {
          "meta": {},
          "name": "SEC_OFFSET",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SEC_OFFSET : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetIntegerv": {
          "meta": {},
          "name": "alhx_GetIntegerv",
          "type": "Int->Null->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetIntegerv : Int->Null->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Listener3f": {
          "meta": {},
          "name": "alhx_Listener3f",
          "type": "Int->Float->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Listener3f : Int->Float->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Listener3i": {
          "meta": {},
          "name": "alhx_Listener3i",
          "type": "Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Listener3i : Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Listenerfv": {
          "meta": {},
          "name": "alhx_Listenerfv",
          "type": "Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Listenerfv : Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Listeneriv": {
          "meta": {},
          "name": "alhx_Listeneriv",
          "type": "Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Listeneriv : Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "GAIN": {
          "meta": {},
          "name": "GAIN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "GAIN : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GenBuffers": {
          "meta": {},
          "name": "alhx_GenBuffers",
          "type": "Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GenBuffers : Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "NO_ERROR": {
          "meta": {},
          "name": "NO_ERROR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "NO_ERROR : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Source3f": {
          "meta": {},
          "name": "alhx_Source3f",
          "type": "Int->Int->Float->Float->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Source3f : Int->Int->Float->Float->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Source3i": {
          "meta": {},
          "name": "alhx_Source3i",
          "type": "Int->Int->Int->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Source3i : Int->Int->Int->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Sourcefv": {
          "meta": {},
          "name": "alhx_Sourcefv",
          "type": "Int->Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Sourcefv : Int->Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Sourceiv": {
          "meta": {},
          "name": "alhx_Sourceiv",
          "type": "Int->Int->Array->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Sourceiv : Int->Int->Array->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "INVALID_VALUE": {
          "meta": {},
          "name": "INVALID_VALUE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INVALID_VALUE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_DeleteSource": {
          "meta": {},
          "name": "alhx_DeleteSource",
          "type": "Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_DeleteSource : Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "STREAMING": {
          "meta": {},
          "name": "STREAMING",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "STREAMING : Int",
          "isstatic": true,
          "isinline": false
        },
        "LINEAR_DISTANCE_CLAMPED": {
          "meta": {},
          "name": "LINEAR_DISTANCE_CLAMPED",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LINEAR_DISTANCE_CLAMPED : Int",
          "isstatic": true,
          "isinline": false
        },
        "FORMAT_STEREO16": {
          "meta": {},
          "name": "FORMAT_STEREO16",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FORMAT_STEREO16 : Int",
          "isstatic": true,
          "isinline": false
        },
        "NONE": {
          "meta": {},
          "name": "NONE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "NONE : Int",
          "isstatic": true,
          "isinline": false
        },
        "SAMPLE_OFFSET": {
          "meta": {},
          "name": "SAMPLE_OFFSET",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SAMPLE_OFFSET : Int",
          "isstatic": true,
          "isinline": false
        },
        "BYTE_OFFSET": {
          "meta": {},
          "name": "BYTE_OFFSET",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BYTE_OFFSET : Int",
          "isstatic": true,
          "isinline": false
        },
        "FORMAT_MONO16": {
          "meta": {},
          "name": "FORMAT_MONO16",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FORMAT_MONO16 : Int",
          "isstatic": true,
          "isinline": false
        },
        "SIZE": {
          "meta": {},
          "name": "SIZE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SIZE : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GenSources": {
          "meta": {},
          "name": "alhx_GenSources",
          "type": "Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GenSources : Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "FREQUENCY": {
          "meta": {},
          "name": "FREQUENCY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FREQUENCY : Int",
          "isstatic": true,
          "isinline": false
        },
        "TRUE": {
          "meta": {},
          "name": "TRUE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "TRUE : Int",
          "isstatic": true,
          "isinline": false
        },
        "STATIC": {
          "meta": {},
          "name": "STATIC",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "STATIC : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetBuffer3f": {
          "meta": {},
          "name": "alhx_GetBuffer3f",
          "type": "Int->Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetBuffer3f : Int->Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetBuffer3i": {
          "meta": {},
          "name": "alhx_GetBuffer3i",
          "type": "Int->Int->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetBuffer3i : Int->Int->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetBufferfv": {
          "meta": {},
          "name": "alhx_GetBufferfv",
          "type": "Int->Int->Null->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetBufferfv : Int->Int->Null->Array",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetBufferiv": {
          "meta": {},
          "name": "alhx_GetBufferiv",
          "type": "Int->Int->Null->Array",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetBufferiv : Int->Int->Null->Array",
          "isstatic": true,
          "isinline": false
        },
        "SPEED_OF_SOUND": {
          "meta": {},
          "name": "SPEED_OF_SOUND",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SPEED_OF_SOUND : Int",
          "isstatic": true,
          "isinline": false
        },
        "alhx_GetProcAddress": {
          "meta": {},
          "name": "alhx_GetProcAddress",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_GetProcAddress : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "OUT_OF_MEMORY_MEANING": {
          "meta": {},
          "name": "OUT_OF_MEMORY_MEANING",
          "type": "String",
          "doc": "",
          "ispublic": true,
          "signature": "OUT_OF_MEMORY_MEANING : String",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Listenerf": {
          "meta": {},
          "name": "alhx_Listenerf",
          "type": "Int->Float->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Listenerf : Int->Float->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "alhx_Listeneri": {
          "meta": {},
          "name": "alhx_Listeneri",
          "type": "Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "alhx_Listeneri : Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "sourceQueueBuffers": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "nb",
              "type": "Int",
              "value": null
            },
            {
              "name": "buffers",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourceQueueBuffers",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourceQueueBuffers(source:Int, nb:Int, buffers:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getIntegerv": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?count",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "getIntegerv",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "getIntegerv(param:Int, ?count:Int=1) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "getBoolean": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getBoolean",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "getBoolean(param:Int) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "getBuffer3f": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getBuffer3f",
          "returntype": ": Array<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "getBuffer3f(buffer:Int, param:Int) : Array<Float>",
          "isstatic": true,
          "isinline": false
        },
        "getBuffer3i": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getBuffer3i",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "getBuffer3i(buffer:Int, param:Int) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "getBufferfv": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": ""
            },
            {
              "name": "param",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?count",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "getBufferfv",
          "returntype": ": Array<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "getBufferfv(buffer:Int, param:Int, ?count:Int=1) : Array<Float>",
          "isstatic": true,
          "isinline": false
        },
        "getBufferiv": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": ""
            },
            {
              "name": "param",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?count",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "getBufferiv",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "getBufferiv(buffer:Int, param:Int, ?count:Int=1) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "getError": {
          "args": [],
          "meta": {},
          "name": "getError",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getError() : Int",
          "isstatic": true,
          "isinline": false
        },
        "genBuffer": {
          "args": [],
          "meta": {},
          "name": "genBuffer",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "genBuffer() : Int",
          "isstatic": true,
          "isinline": false
        },
        "distanceModel": {
          "args": [
            {
              "name": "distanceModel",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "distanceModel",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "distanceModel(distanceModel:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourceQueueBuffer": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourceQueueBuffer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourceQueueBuffer(source:Int, buffer:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getFloat": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getFloat",
          "returntype": ": Float",
          "doc": "",
          "ispublic": true,
          "signature": "getFloat(param:Int) : Float",
          "isstatic": true,
          "isinline": false
        },
        "sourcePausev": {
          "args": [
            {
              "name": "sources",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourcePausev",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourcePausev(sources:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getInteger": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getInteger",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getInteger(param:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "source3f": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value1",
              "type": "Float",
              "value": null
            },
            {
              "name": "value2",
              "type": "Float",
              "value": null
            },
            {
              "name": "value3",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "source3f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "source3f(source:Int, param:Int, value1:Float, value2:Float, value3:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "source3i": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value1",
              "type": "Int",
              "value": null
            },
            {
              "name": "value2",
              "type": "Int",
              "value": null
            },
            {
              "name": "value3",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "source3i",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "source3i(source:Int, param:Int, value1:Int, value2:Int, value3:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourcefv": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "Array<Float>",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourcefv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourcefv(source:Int, param:Int, values:Array<Float>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourceiv": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourceiv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourceiv(source:Int, param:Int, values:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getBooleanv": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?count",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "getBooleanv",
          "returntype": ": Array<Bool>",
          "doc": "",
          "ispublic": true,
          "signature": "getBooleanv(param:Int, ?count:Int=1) : Array<Bool>",
          "isstatic": true,
          "isinline": false
        },
        "sourcePause": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourcePause",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourcePause(source:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "dopplerFactor": {
          "args": [
            {
              "name": "value",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "dopplerFactor",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "dopplerFactor(value:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourcePlay": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourcePlay",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourcePlay(source:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "listenerf": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "listenerf",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "listenerf(param:Int, value:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "listeneri": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "listeneri",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "listeneri(param:Int, value:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourcePlayv": {
          "args": [
            {
              "name": "sources",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourcePlayv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourcePlayv(sources:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourceStop": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourceStop",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourceStop(source:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "enable": {
          "args": [
            {
              "name": "capability",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "enable",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "enable(capability:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourceRewindv": {
          "args": [
            {
              "name": "sources",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourceRewindv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourceRewindv(sources:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getBufferf": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getBufferf",
          "returntype": ": Float",
          "doc": "",
          "ispublic": true,
          "signature": "getBufferf(buffer:Int, param:Int) : Float",
          "isstatic": true,
          "isinline": false
        },
        "getBufferi": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getBufferi",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getBufferi(buffer:Int, param:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "sourceRewind": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourceRewind",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourceRewind(source:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "isEnabled": {
          "args": [
            {
              "name": "capability",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "isEnabled",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isEnabled(capability:Int) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "getListenerf": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getListenerf",
          "returntype": ": Float",
          "doc": "",
          "ispublic": true,
          "signature": "getListenerf(param:Int) : Float",
          "isstatic": true,
          "isinline": false
        },
        "getListeneri": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getListeneri",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getListeneri(param:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "getListener3f": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getListener3f",
          "returntype": ": Array<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "getListener3f(param:Int) : Array<Float>",
          "isstatic": true,
          "isinline": false
        },
        "getListener3i": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getListener3i",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "getListener3i(param:Int) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "getListenerfv": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?count",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "getListenerfv",
          "returntype": ": Array<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "getListenerfv(param:Int, ?count:Int=1) : Array<Float>",
          "isstatic": true,
          "isinline": false
        },
        "getListeneriv": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?count",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "getListeneriv",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "getListeneriv(param:Int, ?count:Int=1) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "dopplerVelocity": {
          "args": [
            {
              "name": "value",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "dopplerVelocity",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "dopplerVelocity(value:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getSourcef": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getSourcef",
          "returntype": ": Float",
          "doc": "",
          "ispublic": true,
          "signature": "getSourcef(source:Int, param:Int) : Float",
          "isstatic": true,
          "isinline": false
        },
        "getSourcei": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getSourcei",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getSourcei(source:Int, param:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "getProcAddress": {
          "args": [
            {
              "name": "fname",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "getProcAddress",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "getProcAddress(fname:String) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "speedOfSound": {
          "args": [
            {
              "name": "value",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "speedOfSound",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "speedOfSound(value:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "isSource": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "isSource",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isSource(source:Int) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "getSource3f": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getSource3f",
          "returntype": ": Array<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "getSource3f(source:Int, param:Int) : Array<Float>",
          "isstatic": true,
          "isinline": false
        },
        "getSource3i": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getSource3i",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "getSource3i(source:Int, param:Int) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "getSourcefv": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getSourcefv",
          "returntype": ": Array<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "getSourcefv(source:Int, param:Int) : Array<Float>",
          "isstatic": true,
          "isinline": false
        },
        "getSourceiv": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": ""
            },
            {
              "name": "param",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?count",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "getSourceiv",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "getSourceiv(source:Int, param:Int, ?count:Int=1) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "getString": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getString",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "getString(param:Int) : String",
          "isstatic": true,
          "isinline": false
        },
        "getErrorMeaning": {
          "args": [
            {
              "name": "error",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getErrorMeaning",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "getErrorMeaning(error:Int) : String",
          "isstatic": true,
          "isinline": false
        },
        "getDoublev": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?count",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "getDoublev",
          "returntype": ": Array<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "getDoublev(param:Int, ?count:Int=1) : Array<Float>",
          "isstatic": true,
          "isinline": false
        },
        "deleteBuffers": {
          "args": [
            {
              "name": "buffers",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteBuffers",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteBuffers(buffers:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bufferData": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "format",
              "type": "Int",
              "value": null
            },
            {
              "name": "data",
              "type": "lumen.utils.Float32Array",
              "value": null
            },
            {
              "name": "size",
              "type": "Int",
              "value": null
            },
            {
              "name": "freq",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "bufferData",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bufferData(buffer:Int, format:Int, data:lumen.utils.Float32Array, size:Int, freq:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourceUnqueueBuffers": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "nb",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourceUnqueueBuffers",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "sourceUnqueueBuffers(source:Int, nb:Int) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "deleteSources": {
          "args": [
            {
              "name": "sources",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteSources",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteSources(sources:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "deleteSource": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteSource",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteSource(source:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "isBuffer": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "isBuffer",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isBuffer(buffer:Int) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "listener3f": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value1",
              "type": "Float",
              "value": null
            },
            {
              "name": "value2",
              "type": "Float",
              "value": null
            },
            {
              "name": "value3",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "listener3f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "listener3f(param:Int, value1:Float, value2:Float, value3:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "listener3i": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value1",
              "type": "Int",
              "value": null
            },
            {
              "name": "value2",
              "type": "Int",
              "value": null
            },
            {
              "name": "value3",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "listener3i",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "listener3i(param:Int, value1:Int, value2:Int, value3:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "listenerfv": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "Array<Float>",
              "value": null
            }
          ],
          "meta": {},
          "name": "listenerfv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "listenerfv(param:Int, values:Array<Float>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "listeneriv": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "listeneriv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "listeneriv(param:Int, values:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "genBuffers": {
          "args": [
            {
              "name": "n",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "genBuffers",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "genBuffers(n:Int) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "buffer3f": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value1",
              "type": "Float",
              "value": null
            },
            {
              "name": "value2",
              "type": "Float",
              "value": null
            },
            {
              "name": "value3",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "buffer3f",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "buffer3f(buffer:Int, param:Int, value1:Float, value2:Float, value3:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "buffer3i": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value1",
              "type": "Int",
              "value": null
            },
            {
              "name": "value2",
              "type": "Int",
              "value": null
            },
            {
              "name": "value3",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "buffer3i",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "buffer3i(buffer:Int, param:Int, value1:Int, value2:Int, value3:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bufferfv": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "Array<Float>",
              "value": null
            }
          ],
          "meta": {},
          "name": "bufferfv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bufferfv(buffer:Int, param:Int, values:Array<Float>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bufferiv": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "values",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "bufferiv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bufferiv(buffer:Int, param:Int, values:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourceUnqueueBuffer": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourceUnqueueBuffer",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "sourceUnqueueBuffer(source:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "getDouble": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "getDouble",
          "returntype": ": Float",
          "doc": "",
          "ispublic": true,
          "signature": "getDouble(param:Int) : Float",
          "isstatic": true,
          "isinline": false
        },
        "disable": {
          "args": [
            {
              "name": "capability",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "disable",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "disable(capability:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "genSources": {
          "args": [
            {
              "name": "n",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "genSources",
          "returntype": ": Array<Int>",
          "doc": "",
          "ispublic": true,
          "signature": "genSources(n:Int) : Array<Int>",
          "isstatic": true,
          "isinline": false
        },
        "bufferf": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "bufferf",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bufferf(buffer:Int, param:Int, value:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "bufferi": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "bufferi",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "bufferi(buffer:Int, param:Int, value:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourceStopv": {
          "args": [
            {
              "name": "sources",
              "type": "Array<Int>",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourceStopv",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourceStopv(sources:Array<Int>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "isExtensionPresent": {
          "args": [
            {
              "name": "extname",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "isExtensionPresent",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isExtensionPresent(extname:String) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "genSource": {
          "args": [],
          "meta": {},
          "name": "genSource",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "genSource() : Int",
          "isstatic": true,
          "isinline": false
        },
        "deleteBuffer": {
          "args": [
            {
              "name": "buffer",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "deleteBuffer",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "deleteBuffer(buffer:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getEnumValue": {
          "args": [
            {
              "name": "ename",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "getEnumValue",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getEnumValue(ename:String) : Int",
          "isstatic": true,
          "isinline": false
        },
        "sourcef": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourcef",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourcef(source:Int, param:Int, value:Float) : Void",
          "isstatic": true,
          "isinline": false
        },
        "sourcei": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            },
            {
              "name": "param",
              "type": "Int",
              "value": null
            },
            {
              "name": "value",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "sourcei",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sourcei(source:Int, param:Int, value:Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "getFloatv": {
          "args": [
            {
              "name": "param",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?count",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "getFloatv",
          "returntype": ": Array<Float>",
          "doc": "",
          "ispublic": true,
          "signature": "getFloatv(param:Int, ?count:Int=1) : Array<Float>",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.types.AssetText": {
      "extend": [
        "lumen.types.Asset"
      ],
      "meta": {},
      "name": "lumen.types.AssetText",
      "properties": {},
      "doc": "An asset that contains `text` as a `String`. Get assets from the `Assets` class, via `app.assets`",
      "ispublic": true,
      "members": {
        "text": {
          "meta": {},
          "name": "text",
          "type": "String",
          "doc": "The `String` this asset contains",
          "ispublic": true,
          "signature": "text : String",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "new": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AssetInfo",
              "value": null
            },
            {
              "name": "_data",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_info:lumen.types.AssetInfo, _data:String) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.assets.AssetSystemBinding": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.assets.AssetSystemBinding",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "manager": {
          "meta": {},
          "name": "manager",
          "type": "lumen.assets.Assets",
          "doc": "",
          "ispublic": true,
          "signature": "manager : lumen.assets.Assets",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "audio_seek_source_ogg": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_to",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_seek_source_ogg",
          "returntype": ": Bool",
          "doc": "OGG specific seek handler",
          "ispublic": true,
          "signature": "audio_seek_source_ogg(_info:lumen.types.AudioInfo, _to:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "audio_seek_source_pcm": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_to",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_seek_source_pcm",
          "returntype": ": Bool",
          "doc": "PCM specific seek handler",
          "ispublic": true,
          "signature": "audio_seek_source_pcm(_info:lumen.types.AudioInfo, _to:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "audio_seek_source_wav": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_to",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_seek_source_wav",
          "returntype": ": Bool",
          "doc": "WAV specific seek handler",
          "ispublic": true,
          "signature": "audio_seek_source_wav(_info:lumen.types.AudioInfo, _to:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_portion_ogg": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_start",
              "type": "Int",
              "value": null
            },
            {
              "name": "_len",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_load_portion_ogg",
          "returntype": ": lumen.types.AudioDataBlob",
          "doc": "OGG specific portion loader",
          "ispublic": true,
          "signature": "audio_load_portion_ogg(_info:lumen.types.AudioInfo, _start:Int, _len:Int) : lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_portion_pcm": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_start",
              "type": "Int",
              "value": null
            },
            {
              "name": "_len",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_load_portion_pcm",
          "returntype": ": lumen.types.AudioDataBlob",
          "doc": "PCM specific portion loader",
          "ispublic": true,
          "signature": "audio_load_portion_pcm(_info:lumen.types.AudioInfo, _start:Int, _len:Int) : lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_portion_wav": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_start",
              "type": "Int",
              "value": null
            },
            {
              "name": "_len",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_load_portion_wav",
          "returntype": ": lumen.types.AudioDataBlob",
          "doc": "WAV specific portion loader",
          "ispublic": true,
          "signature": "audio_load_portion_wav(_info:lumen.types.AudioInfo, _start:Int, _len:Int) : lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "image_load_info": {
          "args": [
            {
              "name": "_path",
              "type": "String",
              "value": ""
            },
            {
              "name": "?_components",
              "type": "Int",
              "value": "4"
            }
          ],
          "meta": {},
          "name": "image_load_info",
          "returntype": ": lumen.types.ImageInfo",
          "doc": "Image info loader",
          "ispublic": true,
          "signature": "image_load_info(_path:String, ?_components:Int=4) : lumen.types.ImageInfo",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_ogg": {
          "args": [
            {
              "name": "asset",
              "type": "lumen.types.AssetInfo",
              "value": ""
            },
            {
              "name": "?load",
              "type": "Bool",
              "value": "true"
            }
          ],
          "meta": {},
          "name": "audio_load_ogg",
          "returntype": ": lumen.types.AudioInfo",
          "doc": "OGG specific info loader",
          "ispublic": true,
          "signature": "audio_load_ogg(asset:lumen.types.AssetInfo, ?load:Bool=true) : lumen.types.AudioInfo",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_pcm": {
          "args": [
            {
              "name": "asset",
              "type": "lumen.types.AssetInfo",
              "value": ""
            },
            {
              "name": "?load",
              "type": "Bool",
              "value": "true"
            }
          ],
          "meta": {},
          "name": "audio_load_pcm",
          "returntype": ": lumen.types.AudioInfo",
          "doc": "PCM specific info loader",
          "ispublic": true,
          "signature": "audio_load_pcm(asset:lumen.types.AssetInfo, ?load:Bool=true) : lumen.types.AudioInfo",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_wav": {
          "args": [
            {
              "name": "asset",
              "type": "lumen.types.AssetInfo",
              "value": ""
            },
            {
              "name": "?load",
              "type": "Bool",
              "value": "true"
            }
          ],
          "meta": {},
          "name": "audio_load_wav",
          "returntype": ": lumen.types.AudioInfo",
          "doc": "WAV specific info loader",
          "ispublic": true,
          "signature": "audio_load_wav(asset:lumen.types.AssetInfo, ?load:Bool=true) : lumen.types.AudioInfo",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": [
        "lumen.utils.AbstractClass"
      ]
    },
    "lumen.utils.IMemoryRange": {
      "extend": [],
      "meta": {},
      "name": "lumen.utils.IMemoryRange",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "getStart": {
          "args": [],
          "meta": {},
          "name": "getStart",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getStart() : Int",
          "isstatic": false,
          "isinline": false
        },
        "getByteBuffer": {
          "args": [],
          "meta": {},
          "name": "getByteBuffer",
          "returntype": ": lumen.utils.ByteArray",
          "doc": "",
          "ispublic": true,
          "signature": "getByteBuffer() : lumen.utils.ByteArray",
          "isstatic": false,
          "isinline": false
        },
        "getLength": {
          "args": [],
          "meta": {},
          "name": "getLength",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getLength() : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.types.AssetImage": {
      "extend": [
        "lumen.types.Asset"
      ],
      "meta": {},
      "name": "lumen.types.AssetImage",
      "properties": {},
      "doc": "An asset that contains image file `data` as an `ImageInfo`. Get assets from the `Assets` class, via `app.assets`",
      "ispublic": true,
      "members": {
        "data": {
          "meta": {},
          "name": "data",
          "type": "lumen.types.ImageInfo",
          "doc": "The `ImageInfo` this asset contains",
          "ispublic": true,
          "signature": "data : lumen.types.ImageInfo",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "new": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AssetInfo",
              "value": null
            },
            {
              "name": "_data",
              "type": "lumen.types.ImageInfo",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_info:lumen.types.AssetInfo, _data:lumen.types.ImageInfo) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.types.AssetBytes": {
      "extend": [
        "lumen.types.Asset"
      ],
      "meta": {},
      "name": "lumen.types.AssetBytes",
      "properties": {},
      "doc": "An asset that contains byte `data` as a `ByteArray`. Get assets from the `Assets` class, via `app.assets`",
      "ispublic": true,
      "members": {
        "data": {
          "meta": {},
          "name": "data",
          "type": "lumen.utils.ByteArray",
          "doc": "The `ByteArray` this asset contains",
          "ispublic": true,
          "signature": "data : lumen.utils.ByteArray",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "new": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AssetInfo",
              "value": null
            },
            {
              "name": "_data",
              "type": "lumen.utils.ByteArray",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_info:lumen.types.AssetInfo, _data:lumen.utils.ByteArray) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.input.sdl.ModValue": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.sdl.ModValue",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "RSHIFT": {
          "meta": {},
          "name": "RSHIFT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RSHIFT : Int",
          "isstatic": true,
          "isinline": false
        },
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "LSHIFT": {
          "meta": {},
          "name": "LSHIFT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LSHIFT : Int",
          "isstatic": true,
          "isinline": false
        },
        "RCTRL": {
          "meta": {},
          "name": "RCTRL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RCTRL : Int",
          "isstatic": true,
          "isinline": false
        },
        "RMETA": {
          "meta": {},
          "name": "RMETA",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RMETA : Int",
          "isstatic": true,
          "isinline": false
        },
        "LCTRL": {
          "meta": {},
          "name": "LCTRL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LCTRL : Int",
          "isstatic": true,
          "isinline": false
        },
        "LMETA": {
          "meta": {},
          "name": "LMETA",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LMETA : Int",
          "isstatic": true,
          "isinline": false
        },
        "NUM": {
          "meta": {},
          "name": "NUM",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "NUM : Int",
          "isstatic": true,
          "isinline": false
        },
        "CAPS": {
          "meta": {},
          "name": "CAPS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CAPS : Int",
          "isstatic": true,
          "isinline": false
        },
        "LALT": {
          "meta": {},
          "name": "LALT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LALT : Int",
          "isstatic": true,
          "isinline": false
        },
        "MODE": {
          "meta": {},
          "name": "MODE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MODE : Int",
          "isstatic": true,
          "isinline": false
        },
        "NONE": {
          "meta": {},
          "name": "NONE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "NONE : Int",
          "isstatic": true,
          "isinline": false
        },
        "RALT": {
          "meta": {},
          "name": "RALT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RALT : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {},
      "implement": []
    },
    "lumen.platform.native.utils.ArrayBufferView": {
      "extend": [],
      "meta": {},
      "name": "lumen.platform.native.utils.ArrayBufferView",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "bytes": {
          "meta": {},
          "name": "bytes",
          "type": "haxe.io.BytesData",
          "doc": "",
          "ispublic": false,
          "signature": "bytes : haxe.io.BytesData",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "getStart": {
          "args": [],
          "meta": {},
          "name": "getStart",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getStart() : Int",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "lengthOrBuffer",
              "type": "Dynamic",
              "value": ""
            },
            {
              "name": "?byteOffset",
              "type": "Int",
              "value": "0"
            },
            {
              "name": "?length",
              "type": "Int",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": false,
          "signature": "new(lengthOrBuffer:Dynamic, ?byteOffset:Int=0, ?length:Int) ",
          "isstatic": false,
          "isinline": false
        },
        "getByteBuffer": {
          "args": [],
          "meta": {},
          "name": "getByteBuffer",
          "returntype": ": lumen.platform.native.utils.ByteArray",
          "doc": "",
          "ispublic": true,
          "signature": "getByteBuffer() : lumen.platform.native.utils.ByteArray",
          "isstatic": false,
          "isinline": false
        },
        "getLength": {
          "args": [],
          "meta": {},
          "name": "getLength",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "getLength() : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": [
        "lumen.utils.IMemoryRange"
      ]
    },
    "lumen.platform.native.render.gl.GLFramebuffer": {
      "extend": [
        "lumen.render.gl.GLObject"
      ],
      "meta": {},
      "name": "lumen.platform.native.render.gl.GLFramebuffer",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "new": {
          "args": [
            {
              "name": "version",
              "type": "Int",
              "value": null
            },
            {
              "name": "id",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(version:Int, id:Dynamic) ",
          "isstatic": false,
          "isinline": false
        },
        "getType": {
          "args": [],
          "meta": {},
          "name": "getType",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "getType() : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.render.gl.GLRenderbuffer": {
      "extend": [
        "lumen.render.gl.GLObject"
      ],
      "meta": {},
      "name": "lumen.platform.native.render.gl.GLRenderbuffer",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "new": {
          "args": [
            {
              "name": "version",
              "type": "Int",
              "value": null
            },
            {
              "name": "id",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(version:Int, id:Dynamic) ",
          "isstatic": false,
          "isinline": false
        },
        "getType": {
          "args": [],
          "meta": {},
          "name": "getType",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "getType() : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.input.Scancodes": {
      "extend": [],
      "meta": {},
      "name": "lumen.input.Scancodes",
      "properties": {},
      "doc": "The scancode class. The values below come directly from SDL header include files,\\nbut they aren't specific to SDL so they are used generically",
      "ispublic": true,
      "members": {
        "KP_MINUS": {
          "meta": {},
          "name": "KP_MINUS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MINUS : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_STOP": {
          "meta": {},
          "name": "AC_STOP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_STOP : Int",
          "isstatic": true,
          "isinline": false
        },
        "RSHIFT": {
          "meta": {},
          "name": "RSHIFT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RSHIFT : Int",
          "isstatic": true,
          "isinline": false
        },
        "BACKSLASH": {
          "meta": {},
          "name": "BACKSLASH",
          "type": "Int",
          "doc": "Located at the lower left of the return\\n    key on ISO keyboards and at the right end\\n    of the QWERTY row on ANSI keyboards.\\n    Produces REVERSE SOLIDUS (backslash) and\\n    VERTICAL LINE in a US layout, REVERSE\\n    SOLIDUS and VERTICAL LINE in a UK Mac\\n    layout, NUMBER SIGN and TILDE in a UK\\n    Windows layout, DOLLAR SIGN and POUND SIGN\\n    in a Swiss German layout, NUMBER SIGN and\\n    APOSTROPHE in a German layout, GRAVE\\n    ACCENT and POUND SIGN in a French Mac\\n    layout, and ASTERISK and MICRO SIGN in a\\n    French Windows layout.",
          "ispublic": true,
          "signature": "BACKSLASH : Int",
          "isstatic": true,
          "isinline": false
        },
        "POWER": {
          "meta": {},
          "name": "POWER",
          "type": "Int",
          "doc": "The USB document says this is a status flag,\\n    not a physical key - but some Mac keyboards\\n    do have a power key.",
          "ispublic": true,
          "signature": "POWER : Int",
          "isstatic": true,
          "isinline": false
        },
        "NONUSBACKSLASH": {
          "meta": {},
          "name": "NONUSBACKSLASH",
          "type": "Int",
          "doc": "This is the additional key that ISO\\n    keyboards have over ANSI ones,\\n    located between left shift and Y.\\n    Produces GRAVE ACCENT and TILDE in a\\n    US or UK Mac layout, REVERSE SOLIDUS\\n    (backslash) and VERTICAL LINE in a\\n    US or UK Windows layout, and\\n    LESS-THAN SIGN and GREATER-THAN SIGN\\n    in a Swiss German, German, or French\\n    layout.",
          "ispublic": true,
          "signature": "NONUSBACKSLASH : Int",
          "isstatic": true,
          "isinline": false
        },
        "BACKSPACE": {
          "meta": {},
          "name": "BACKSPACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BACKSPACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "CLEAR": {
          "meta": {},
          "name": "CLEAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CLEAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "PRIOR": {
          "meta": {},
          "name": "PRIOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PRIOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "COMMA": {
          "meta": {},
          "name": "COMMA",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "COMMA : Int",
          "isstatic": true,
          "isinline": false
        },
        "SEMICOLON": {
          "meta": {},
          "name": "SEMICOLON",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SEMICOLON : Int",
          "isstatic": true,
          "isinline": false
        },
        "CRSEL": {
          "meta": {},
          "name": "CRSEL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CRSEL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_000": {
          "meta": {},
          "name": "KP_000",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_000 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_TAB": {
          "meta": {},
          "name": "KP_TAB",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_TAB : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_XOR": {
          "meta": {},
          "name": "KP_XOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_XOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "EXECUTE": {
          "meta": {},
          "name": "EXECUTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EXECUTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_PLUSMINUS": {
          "meta": {},
          "name": "KP_PLUSMINUS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_PLUSMINUS : Int",
          "isstatic": true,
          "isinline": false
        },
        "INSERT": {
          "meta": {},
          "name": "INSERT",
          "type": "Int",
          "doc": "insert on PC, help on some Mac keyboards (but does send code 73, not 117)",
          "ispublic": true,
          "signature": "INSERT : Int",
          "isstatic": true,
          "isinline": false
        },
        "CLEARAGAIN": {
          "meta": {},
          "name": "CLEARAGAIN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CLEARAGAIN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMADD": {
          "meta": {},
          "name": "KP_MEMADD",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMADD : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMSTORE": {
          "meta": {},
          "name": "KP_MEMSTORE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMSTORE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_DBLVERTICALBAR": {
          "meta": {},
          "name": "KP_DBLVERTICALBAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_DBLVERTICALBAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "RIGHTBRACKET": {
          "meta": {},
          "name": "RIGHTBRACKET",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RIGHTBRACKET : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_0": {
          "meta": {},
          "name": "KEY_0",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_0 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_1": {
          "meta": {},
          "name": "KEY_1",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_1 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_2": {
          "meta": {},
          "name": "KEY_2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_3": {
          "meta": {},
          "name": "KEY_3",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_3 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_4": {
          "meta": {},
          "name": "KEY_4",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_4 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_5": {
          "meta": {},
          "name": "KEY_5",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_5 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_6": {
          "meta": {},
          "name": "KEY_6",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_6 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_7": {
          "meta": {},
          "name": "KEY_7",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_7 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_8": {
          "meta": {},
          "name": "KEY_8",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_9": {
          "meta": {},
          "name": "KEY_9",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_9 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_A": {
          "meta": {},
          "name": "KEY_A",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_A : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_B": {
          "meta": {},
          "name": "KEY_B",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_B : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_C": {
          "meta": {},
          "name": "KEY_C",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_C : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_D": {
          "meta": {},
          "name": "KEY_D",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_D : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_E": {
          "meta": {},
          "name": "KEY_E",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_E : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_F": {
          "meta": {},
          "name": "KEY_F",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_F : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_G": {
          "meta": {},
          "name": "KEY_G",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_G : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_H": {
          "meta": {},
          "name": "KEY_H",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_H : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_I": {
          "meta": {},
          "name": "KEY_I",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_I : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_J": {
          "meta": {},
          "name": "KEY_J",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_J : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_K": {
          "meta": {},
          "name": "KEY_K",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_K : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_L": {
          "meta": {},
          "name": "KEY_L",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_L : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_M": {
          "meta": {},
          "name": "KEY_M",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_M : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_N": {
          "meta": {},
          "name": "KEY_N",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_N : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_O": {
          "meta": {},
          "name": "KEY_O",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_O : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_P": {
          "meta": {},
          "name": "KEY_P",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_P : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_Q": {
          "meta": {},
          "name": "KEY_Q",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_Q : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_R": {
          "meta": {},
          "name": "KEY_R",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_R : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_S": {
          "meta": {},
          "name": "KEY_S",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_S : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_T": {
          "meta": {},
          "name": "KEY_T",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_T : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_U": {
          "meta": {},
          "name": "KEY_U",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_U : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_V": {
          "meta": {},
          "name": "KEY_V",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_V : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_W": {
          "meta": {},
          "name": "KEY_W",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_W : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_X": {
          "meta": {},
          "name": "KEY_X",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_X : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_Y": {
          "meta": {},
          "name": "KEY_Y",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_Y : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_Z": {
          "meta": {},
          "name": "KEY_Z",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_Z : Int",
          "isstatic": true,
          "isinline": false
        },
        "LSHIFT": {
          "meta": {},
          "name": "LSHIFT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LSHIFT : Int",
          "isstatic": true,
          "isinline": false
        },
        "COMPUTER": {
          "meta": {},
          "name": "COMPUTER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "COMPUTER : Int",
          "isstatic": true,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "UNKNOWN": {
          "meta": {},
          "name": "UNKNOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "UNKNOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_DECIMAL": {
          "meta": {},
          "name": "KP_DECIMAL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_DECIMAL : Int",
          "isstatic": true,
          "isinline": false
        },
        "APOSTROPHE": {
          "meta": {},
          "name": "APOSTROPHE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "APOSTROPHE : Int",
          "isstatic": true,
          "isinline": false
        },
        "RCTRL": {
          "meta": {},
          "name": "RCTRL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RCTRL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_00": {
          "meta": {},
          "name": "KP_00",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_00 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_AT": {
          "meta": {},
          "name": "KP_AT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_AT : Int",
          "isstatic": true,
          "isinline": false
        },
        "ALTERASE": {
          "meta": {},
          "name": "ALTERASE",
          "type": "Int",
          "doc": "Erase-Eaze",
          "ispublic": true,
          "signature": "ALTERASE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_OCTAL": {
          "meta": {},
          "name": "KP_OCTAL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_OCTAL : Int",
          "isstatic": true,
          "isinline": false
        },
        "RIGHT": {
          "meta": {},
          "name": "RIGHT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RIGHT : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_RIGHTBRACE": {
          "meta": {},
          "name": "KP_RIGHTBRACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_RIGHTBRACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "THOUSANDSSEPARATOR": {
          "meta": {},
          "name": "THOUSANDSSEPARATOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "THOUSANDSSEPARATOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "RMETA": {
          "meta": {},
          "name": "RMETA",
          "type": "Int",
          "doc": "windows, command (apple), meta",
          "ispublic": true,
          "signature": "RMETA : Int",
          "isstatic": true,
          "isinline": false
        },
        "CANCEL": {
          "meta": {},
          "name": "CANCEL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CANCEL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_DBLAMPERSAND": {
          "meta": {},
          "name": "KP_DBLAMPERSAND",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_DBLAMPERSAND : Int",
          "isstatic": true,
          "isinline": false
        },
        "EJECT": {
          "meta": {},
          "name": "EJECT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EJECT : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_RIGHTPAREN": {
          "meta": {},
          "name": "KP_RIGHTPAREN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_RIGHTPAREN : Int",
          "isstatic": true,
          "isinline": false
        },
        "BRIGHTNESSUP": {
          "meta": {},
          "name": "BRIGHTNESSUP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BRIGHTNESSUP : Int",
          "isstatic": true,
          "isinline": false
        },
        "PERIOD": {
          "meta": {},
          "name": "PERIOD",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PERIOD : Int",
          "isstatic": true,
          "isinline": false
        },
        "LANG1": {
          "meta": {},
          "name": "LANG1",
          "type": "Int",
          "doc": "Hangul/English toggle",
          "ispublic": true,
          "signature": "LANG1 : Int",
          "isstatic": true,
          "isinline": false
        },
        "LANG2": {
          "meta": {},
          "name": "LANG2",
          "type": "Int",
          "doc": "Hanja conversion",
          "ispublic": true,
          "signature": "LANG2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "LANG3": {
          "meta": {},
          "name": "LANG3",
          "type": "Int",
          "doc": "Katakana",
          "ispublic": true,
          "signature": "LANG3 : Int",
          "isstatic": true,
          "isinline": false
        },
        "LANG4": {
          "meta": {},
          "name": "LANG4",
          "type": "Int",
          "doc": "Hiragana",
          "ispublic": true,
          "signature": "LANG4 : Int",
          "isstatic": true,
          "isinline": false
        },
        "LANG5": {
          "meta": {},
          "name": "LANG5",
          "type": "Int",
          "doc": "Zenkaku/Hankaku",
          "ispublic": true,
          "signature": "LANG5 : Int",
          "isstatic": true,
          "isinline": false
        },
        "LANG6": {
          "meta": {},
          "name": "LANG6",
          "type": "Int",
          "doc": "reserved",
          "ispublic": true,
          "signature": "LANG6 : Int",
          "isstatic": true,
          "isinline": false
        },
        "LANG7": {
          "meta": {},
          "name": "LANG7",
          "type": "Int",
          "doc": "reserved",
          "ispublic": true,
          "signature": "LANG7 : Int",
          "isstatic": true,
          "isinline": false
        },
        "LANG8": {
          "meta": {},
          "name": "LANG8",
          "type": "Int",
          "doc": "reserved",
          "ispublic": true,
          "signature": "LANG8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "LANG9": {
          "meta": {},
          "name": "LANG9",
          "type": "Int",
          "doc": "reserved",
          "ispublic": true,
          "signature": "LANG9 : Int",
          "isstatic": true,
          "isinline": false
        },
        "LCTRL": {
          "meta": {},
          "name": "LCTRL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LCTRL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_CLEARENTRY": {
          "meta": {},
          "name": "KP_CLEARENTRY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_CLEARENTRY : Int",
          "isstatic": true,
          "isinline": false
        },
        "EQUALS": {
          "meta": {},
          "name": "EQUALS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EQUALS : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_PERCENT": {
          "meta": {},
          "name": "KP_PERCENT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_PERCENT : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMRECALL": {
          "meta": {},
          "name": "KP_MEMRECALL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMRECALL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_VERTICALBAR": {
          "meta": {},
          "name": "KP_VERTICALBAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_VERTICALBAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "EXSEL": {
          "meta": {},
          "name": "EXSEL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EXSEL : Int",
          "isstatic": true,
          "isinline": false
        },
        "LMETA": {
          "meta": {},
          "name": "LMETA",
          "type": "Int",
          "doc": "windows, command (apple), meta",
          "ispublic": true,
          "signature": "LMETA : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIOMUTE": {
          "meta": {},
          "name": "AUDIOMUTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIOMUTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIONEXT": {
          "meta": {},
          "name": "AUDIONEXT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIONEXT : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIOPLAY": {
          "meta": {},
          "name": "AUDIOPLAY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIOPLAY : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIOPREV": {
          "meta": {},
          "name": "AUDIOPREV",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIOPREV : Int",
          "isstatic": true,
          "isinline": false
        },
        "INTERNATIONAL1": {
          "meta": {},
          "name": "INTERNATIONAL1",
          "type": "Int",
          "doc": "used on Asian keyboards; see footnotes in USB doc",
          "ispublic": true,
          "signature": "INTERNATIONAL1 : Int",
          "isstatic": true,
          "isinline": false
        },
        "INTERNATIONAL2": {
          "meta": {},
          "name": "INTERNATIONAL2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INTERNATIONAL2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "INTERNATIONAL3": {
          "meta": {},
          "name": "INTERNATIONAL3",
          "type": "Int",
          "doc": "Yen",
          "ispublic": true,
          "signature": "INTERNATIONAL3 : Int",
          "isstatic": true,
          "isinline": false
        },
        "INTERNATIONAL4": {
          "meta": {},
          "name": "INTERNATIONAL4",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INTERNATIONAL4 : Int",
          "isstatic": true,
          "isinline": false
        },
        "INTERNATIONAL5": {
          "meta": {},
          "name": "INTERNATIONAL5",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INTERNATIONAL5 : Int",
          "isstatic": true,
          "isinline": false
        },
        "INTERNATIONAL6": {
          "meta": {},
          "name": "INTERNATIONAL6",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INTERNATIONAL6 : Int",
          "isstatic": true,
          "isinline": false
        },
        "INTERNATIONAL7": {
          "meta": {},
          "name": "INTERNATIONAL7",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INTERNATIONAL7 : Int",
          "isstatic": true,
          "isinline": false
        },
        "INTERNATIONAL8": {
          "meta": {},
          "name": "INTERNATIONAL8",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INTERNATIONAL8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "INTERNATIONAL9": {
          "meta": {},
          "name": "INTERNATIONAL9",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INTERNATIONAL9 : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIOSTOP": {
          "meta": {},
          "name": "AUDIOSTOP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIOSTOP : Int",
          "isstatic": true,
          "isinline": false
        },
        "SLASH": {
          "meta": {},
          "name": "SLASH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SLASH : Int",
          "isstatic": true,
          "isinline": false
        },
        "SLEEP": {
          "meta": {},
          "name": "SLEEP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SLEEP : Int",
          "isstatic": true,
          "isinline": false
        },
        "RETURN2": {
          "meta": {},
          "name": "RETURN2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RETURN2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "CURRENCYUNIT": {
          "meta": {},
          "name": "CURRENCYUNIT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CURRENCYUNIT : Int",
          "isstatic": true,
          "isinline": false
        },
        "SPACE": {
          "meta": {},
          "name": "SPACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SPACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "F1": {
          "meta": {},
          "name": "F1",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F1 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F2": {
          "meta": {},
          "name": "F2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F3": {
          "meta": {},
          "name": "F3",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F3 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F4": {
          "meta": {},
          "name": "F4",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F4 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F5": {
          "meta": {},
          "name": "F5",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F5 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F6": {
          "meta": {},
          "name": "F6",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F6 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F7": {
          "meta": {},
          "name": "F7",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F7 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F8": {
          "meta": {},
          "name": "F8",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F9": {
          "meta": {},
          "name": "F9",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F9 : Int",
          "isstatic": true,
          "isinline": false
        },
        "UP": {
          "meta": {},
          "name": "UP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "UP : Int",
          "isstatic": true,
          "isinline": false
        },
        "CUT": {
          "meta": {},
          "name": "CUT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CUT : Int",
          "isstatic": true,
          "isinline": false
        },
        "END": {
          "meta": {},
          "name": "END",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "END : Int",
          "isstatic": true,
          "isinline": false
        },
        "F10": {
          "meta": {},
          "name": "F10",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F10 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F11": {
          "meta": {},
          "name": "F11",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F11 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F12": {
          "meta": {},
          "name": "F12",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F12 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F13": {
          "meta": {},
          "name": "F13",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F13 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F14": {
          "meta": {},
          "name": "F14",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F14 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F15": {
          "meta": {},
          "name": "F15",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F15 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F16": {
          "meta": {},
          "name": "F16",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F16 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F17": {
          "meta": {},
          "name": "F17",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F17 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F18": {
          "meta": {},
          "name": "F18",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F18 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F19": {
          "meta": {},
          "name": "F19",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F19 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F20": {
          "meta": {},
          "name": "F20",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F20 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F21": {
          "meta": {},
          "name": "F21",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F21 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F22": {
          "meta": {},
          "name": "F22",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F22 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F23": {
          "meta": {},
          "name": "F23",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F23 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F24": {
          "meta": {},
          "name": "F24",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F24 : Int",
          "isstatic": true,
          "isinline": false
        },
        "OUT": {
          "meta": {},
          "name": "OUT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "OUT : Int",
          "isstatic": true,
          "isinline": false
        },
        "TAB": {
          "meta": {},
          "name": "TAB",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "TAB : Int",
          "isstatic": true,
          "isinline": false
        },
        "WWW": {
          "meta": {},
          "name": "WWW",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "WWW : Int",
          "isstatic": true,
          "isinline": false
        },
        "CAPSLOCK": {
          "meta": {},
          "name": "CAPSLOCK",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CAPSLOCK : Int",
          "isstatic": true,
          "isinline": false
        },
        "APPLICATION": {
          "meta": {},
          "name": "APPLICATION",
          "type": "Int",
          "doc": "windows contextual menu, compose",
          "ispublic": true,
          "signature": "APPLICATION : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_POWER": {
          "meta": {},
          "name": "KP_POWER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_POWER : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_CLEAR": {
          "meta": {},
          "name": "KP_CLEAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_CLEAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_COLON": {
          "meta": {},
          "name": "KP_COLON",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_COLON : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_COMMA": {
          "meta": {},
          "name": "KP_COMMA",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_COMMA : Int",
          "isstatic": true,
          "isinline": false
        },
        "MINUS": {
          "meta": {},
          "name": "MINUS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MINUS : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_PERIOD": {
          "meta": {},
          "name": "KP_PERIOD",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_PERIOD : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_EXCLAM": {
          "meta": {},
          "name": "KP_EXCLAM",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_EXCLAM : Int",
          "isstatic": true,
          "isinline": false
        },
        "KBDILLUMDOWN": {
          "meta": {},
          "name": "KBDILLUMDOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KBDILLUMDOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_EQUALSAS400": {
          "meta": {},
          "name": "KP_EQUALSAS400",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_EQUALSAS400 : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_SEARCH": {
          "meta": {},
          "name": "AC_SEARCH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_SEARCH : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_DIVIDE": {
          "meta": {},
          "name": "KP_DIVIDE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_DIVIDE : Int",
          "isstatic": true,
          "isinline": false
        },
        "SCROLLLOCK": {
          "meta": {},
          "name": "SCROLLLOCK",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SCROLLLOCK : Int",
          "isstatic": true,
          "isinline": false
        },
        "ESCAPE": {
          "meta": {},
          "name": "ESCAPE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ESCAPE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_EQUALS": {
          "meta": {},
          "name": "KP_EQUALS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_EQUALS : Int",
          "isstatic": true,
          "isinline": false
        },
        "NONUSHASH": {
          "meta": {},
          "name": "NONUSHASH",
          "type": "Int",
          "doc": "ISO USB keyboards actually use this code\\n    instead of 49 for the same key, but all\\n    OSes I've seen treat the two codes\\n    identically. So, as an implementor, unless\\n    your keyboard generates both of those\\n    codes and your OS treats them differently,\\n    you should generate public static var BACKSLASH\\n    instead of this code. As a user, you\\n    should not rely on this code because SDL\\n    will never generate it with most (all?)\\n    keyboards.",
          "ispublic": true,
          "signature": "NONUSHASH : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_HASH": {
          "meta": {},
          "name": "KP_HASH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_HASH : Int",
          "isstatic": true,
          "isinline": false
        },
        "PRINTSCREEN": {
          "meta": {},
          "name": "PRINTSCREEN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PRINTSCREEN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_LESS": {
          "meta": {},
          "name": "KP_LESS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_LESS : Int",
          "isstatic": true,
          "isinline": false
        },
        "VOLUMEUP": {
          "meta": {},
          "name": "VOLUMEUP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "VOLUMEUP : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_PLUS": {
          "meta": {},
          "name": "KP_PLUS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_PLUS : Int",
          "isstatic": true,
          "isinline": false
        },
        "NUMLOCKCLEAR": {
          "meta": {},
          "name": "NUMLOCKCLEAR",
          "type": "Int",
          "doc": "num lock on PC, clear on Mac keyboards",
          "ispublic": true,
          "signature": "NUMLOCKCLEAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MULTIPLY": {
          "meta": {},
          "name": "KP_MULTIPLY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MULTIPLY : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMSUBTRACT": {
          "meta": {},
          "name": "KP_MEMSUBTRACT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMSUBTRACT : Int",
          "isstatic": true,
          "isinline": false
        },
        "GRAVE": {
          "meta": {},
          "name": "GRAVE",
          "type": "Int",
          "doc": "Located in the top left corner (on both ANSI\\n    and ISO keyboards). Produces GRAVE ACCENT and\\n    TILDE in a US Windows layout and in US and UK\\n    Mac layouts on ANSI keyboards, GRAVE ACCENT\\n    and NOT SIGN in a UK Windows layout, SECTION\\n    SIGN and PLUS-MINUS SIGN in US and UK Mac\\n    layouts on ISO keyboards, SECTION SIGN and\\n    DEGREE SIGN in a Swiss German layout (Mac:\\n    only on ISO keyboards); CIRCUMFLEX ACCENT and\\n    DEGREE SIGN in a German layout (Mac: only on\\n    ISO keyboards), SUPERSCRIPT TWO and TILDE in a\\n    French Windows layout, COMMERCIAL AT and\\n    NUMBER SIGN in a French Mac layout on ISO\\n    keyboards, and LESS-THAN SIGN and GREATER-THAN\\n    SIGN in a Swiss German, German, or French Mac\\n    layout on ANSI keyboards.",
          "ispublic": true,
          "signature": "GRAVE : Int",
          "isstatic": true,
          "isinline": false
        },
        "PAGEUP": {
          "meta": {},
          "name": "PAGEUP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PAGEUP : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMCLEAR": {
          "meta": {},
          "name": "KP_MEMCLEAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMCLEAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "MEDIASELECT": {
          "meta": {},
          "name": "MEDIASELECT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MEDIASELECT : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_LEFTBRACE": {
          "meta": {},
          "name": "KP_LEFTBRACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_LEFTBRACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "BRIGHTNESSDOWN": {
          "meta": {},
          "name": "BRIGHTNESSDOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BRIGHTNESSDOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "AGAIN": {
          "meta": {},
          "name": "AGAIN",
          "type": "Int",
          "doc": "redo",
          "ispublic": true,
          "signature": "AGAIN : Int",
          "isstatic": true,
          "isinline": false
        },
        "SELECT": {
          "meta": {},
          "name": "SELECT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SELECT : Int",
          "isstatic": true,
          "isinline": false
        },
        "DELETE": {
          "meta": {},
          "name": "DELETE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DELETE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_LEFTPAREN": {
          "meta": {},
          "name": "KP_LEFTPAREN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_LEFTPAREN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KBDILLUMUP": {
          "meta": {},
          "name": "KBDILLUMUP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KBDILLUMUP : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_BOOKMARKS": {
          "meta": {},
          "name": "AC_BOOKMARKS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_BOOKMARKS : Int",
          "isstatic": true,
          "isinline": false
        },
        "CURRENCYSUBUNIT": {
          "meta": {},
          "name": "CURRENCYSUBUNIT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CURRENCYSUBUNIT : Int",
          "isstatic": true,
          "isinline": false
        },
        "LEFTBRACKET": {
          "meta": {},
          "name": "LEFTBRACKET",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LEFTBRACKET : Int",
          "isstatic": true,
          "isinline": false
        },
        "SYSREQ": {
          "meta": {},
          "name": "SYSREQ",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SYSREQ : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_FORWARD": {
          "meta": {},
          "name": "AC_FORWARD",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_FORWARD : Int",
          "isstatic": true,
          "isinline": false
        },
        "DECIMALSEPARATOR": {
          "meta": {},
          "name": "DECIMALSEPARATOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DECIMALSEPARATOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "CALCULATOR": {
          "meta": {},
          "name": "CALCULATOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CALCULATOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_BACKSPACE": {
          "meta": {},
          "name": "KP_BACKSPACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_BACKSPACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_ENTER": {
          "meta": {},
          "name": "KP_ENTER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_ENTER : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_AMPERSAND": {
          "meta": {},
          "name": "KP_AMPERSAND",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_AMPERSAND : Int",
          "isstatic": true,
          "isinline": false
        },
        "APP1": {
          "meta": {},
          "name": "APP1",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "APP1 : Int",
          "isstatic": true,
          "isinline": false
        },
        "APP2": {
          "meta": {},
          "name": "APP2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "APP2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "VOLUMEDOWN": {
          "meta": {},
          "name": "VOLUMEDOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "VOLUMEDOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "COPY": {
          "meta": {},
          "name": "COPY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "COPY : Int",
          "isstatic": true,
          "isinline": false
        },
        "SEPARATOR": {
          "meta": {},
          "name": "SEPARATOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SEPARATOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "DOWN": {
          "meta": {},
          "name": "DOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "FIND": {
          "meta": {},
          "name": "FIND",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FIND : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_REFRESH": {
          "meta": {},
          "name": "AC_REFRESH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_REFRESH : Int",
          "isstatic": true,
          "isinline": false
        },
        "HELP": {
          "meta": {},
          "name": "HELP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "HELP : Int",
          "isstatic": true,
          "isinline": false
        },
        "HOME": {
          "meta": {},
          "name": "HOME",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "HOME : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_0": {
          "meta": {},
          "name": "KP_0",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_0 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_1": {
          "meta": {},
          "name": "KP_1",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_1 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_2": {
          "meta": {},
          "name": "KP_2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_3": {
          "meta": {},
          "name": "KP_3",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_3 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_4": {
          "meta": {},
          "name": "KP_4",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_4 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_5": {
          "meta": {},
          "name": "KP_5",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_5 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_6": {
          "meta": {},
          "name": "KP_6",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_6 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_7": {
          "meta": {},
          "name": "KP_7",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_7 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_8": {
          "meta": {},
          "name": "KP_8",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_9": {
          "meta": {},
          "name": "KP_9",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_9 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_A": {
          "meta": {},
          "name": "KP_A",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_A : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_B": {
          "meta": {},
          "name": "KP_B",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_B : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_C": {
          "meta": {},
          "name": "KP_C",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_C : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_D": {
          "meta": {},
          "name": "KP_D",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_D : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_E": {
          "meta": {},
          "name": "KP_E",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_E : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_F": {
          "meta": {},
          "name": "KP_F",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_F : Int",
          "isstatic": true,
          "isinline": false
        },
        "KBDILLUMTOGGLE": {
          "meta": {},
          "name": "KBDILLUMTOGGLE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KBDILLUMTOGGLE : Int",
          "isstatic": true,
          "isinline": false
        },
        "LALT": {
          "meta": {},
          "name": "LALT",
          "type": "Int",
          "doc": "alt, option",
          "ispublic": true,
          "signature": "LALT : Int",
          "isstatic": true,
          "isinline": false
        },
        "LEFT": {
          "meta": {},
          "name": "LEFT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LEFT : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_GREATER": {
          "meta": {},
          "name": "KP_GREATER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_GREATER : Int",
          "isstatic": true,
          "isinline": false
        },
        "MAIL": {
          "meta": {},
          "name": "MAIL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MAIL : Int",
          "isstatic": true,
          "isinline": false
        },
        "MENU": {
          "meta": {},
          "name": "MENU",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MENU : Int",
          "isstatic": true,
          "isinline": false
        },
        "MODE": {
          "meta": {},
          "name": "MODE",
          "type": "Int",
          "doc": "Not sure if this is really not covered\\n    by any of the above, but since there's a\\n    special KMOD_MODE for it I'm adding it here",
          "ispublic": true,
          "signature": "MODE : Int",
          "isstatic": true,
          "isinline": false
        },
        "MUTE": {
          "meta": {},
          "name": "MUTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MUTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "OPER": {
          "meta": {},
          "name": "OPER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "OPER : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMDIVIDE": {
          "meta": {},
          "name": "KP_MEMDIVIDE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMDIVIDE : Int",
          "isstatic": true,
          "isinline": false
        },
        "RALT": {
          "meta": {},
          "name": "RALT",
          "type": "Int",
          "doc": "alt gr, option",
          "ispublic": true,
          "signature": "RALT : Int",
          "isstatic": true,
          "isinline": false
        },
        "STOP": {
          "meta": {},
          "name": "STOP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "STOP : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_BACK": {
          "meta": {},
          "name": "AC_BACK",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_BACK : Int",
          "isstatic": true,
          "isinline": false
        },
        "UNDO": {
          "meta": {},
          "name": "UNDO",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "UNDO : Int",
          "isstatic": true,
          "isinline": false
        },
        "DISPLAYSWITCH": {
          "meta": {},
          "name": "DISPLAYSWITCH",
          "type": "Int",
          "doc": "display mirroring/dual display switch, video mode switch",
          "ispublic": true,
          "signature": "DISPLAYSWITCH : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMMULTIPLY": {
          "meta": {},
          "name": "KP_MEMMULTIPLY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMMULTIPLY : Int",
          "isstatic": true,
          "isinline": false
        },
        "PAGEDOWN": {
          "meta": {},
          "name": "PAGEDOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PAGEDOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_BINARY": {
          "meta": {},
          "name": "KP_BINARY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_BINARY : Int",
          "isstatic": true,
          "isinline": false
        },
        "PASTE": {
          "meta": {},
          "name": "PASTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PASTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "PAUSE": {
          "meta": {},
          "name": "PAUSE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PAUSE : Int",
          "isstatic": true,
          "isinline": false
        },
        "RETURN": {
          "meta": {},
          "name": "RETURN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RETURN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_SPACE": {
          "meta": {},
          "name": "KP_SPACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_SPACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_HOME": {
          "meta": {},
          "name": "AC_HOME",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_HOME : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_HEXADECIMAL": {
          "meta": {},
          "name": "KP_HEXADECIMAL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_HEXADECIMAL : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {},
      "implement": []
    },
    "lumen.utils.IDataInput": {
      "extend": [],
      "meta": {},
      "name": "lumen.utils.IDataInput",
      "properties": {
        "endian": {
          "meta": {},
          "name": "endian",
          "type": "String",
          "iswrite": true,
          "isread": true,
          "doc": "",
          "signature": "endian : String",
          "type_desc": "read/write"
        },
        "bytesAvailable": {
          "meta": {},
          "name": "bytesAvailable",
          "type": "Int",
          "iswrite": false,
          "isread": true,
          "doc": "",
          "signature": "bytesAvailable : Int",
          "type_desc": "(read only)"
        }
      },
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "readShort": {
          "args": [],
          "meta": {},
          "name": "readShort",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readShort() : Int",
          "isstatic": false,
          "isinline": false
        },
        "readBoolean": {
          "args": [],
          "meta": {},
          "name": "readBoolean",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "readBoolean() : Bool",
          "isstatic": false,
          "isinline": false
        },
        "readUTFBytes": {
          "args": [
            {
              "name": "inLen",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "readUTFBytes",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "readUTFBytes(inLen:Int) : String",
          "isstatic": false,
          "isinline": false
        },
        "readFloat": {
          "args": [],
          "meta": {},
          "name": "readFloat",
          "returntype": ": Float",
          "doc": "",
          "ispublic": true,
          "signature": "readFloat() : Float",
          "isstatic": false,
          "isinline": false
        },
        "readByte": {
          "args": [],
          "meta": {},
          "name": "readByte",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readByte() : Int",
          "isstatic": false,
          "isinline": false
        },
        "get_endian": {
          "args": [],
          "meta": {},
          "name": "get_endian",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "get_endian() : String",
          "isstatic": false,
          "isinline": false
        },
        "set_endian": {
          "args": [
            {
              "name": "s",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_endian",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "set_endian(s:String) : String",
          "isstatic": false,
          "isinline": false
        },
        "readUnsignedShort": {
          "args": [],
          "meta": {},
          "name": "readUnsignedShort",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readUnsignedShort() : Int",
          "isstatic": false,
          "isinline": false
        },
        "readInt": {
          "args": [],
          "meta": {},
          "name": "readInt",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readInt() : Int",
          "isstatic": false,
          "isinline": false
        },
        "readUTF": {
          "args": [],
          "meta": {},
          "name": "readUTF",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "readUTF() : String",
          "isstatic": false,
          "isinline": false
        },
        "readUnsignedInt": {
          "args": [],
          "meta": {},
          "name": "readUnsignedInt",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readUnsignedInt() : Int",
          "isstatic": false,
          "isinline": false
        },
        "readBytes": {
          "args": [
            {
              "name": "outData",
              "type": "lumen.utils.ByteArray",
              "value": null
            },
            {
              "name": "?inOffset",
              "type": "Int",
              "value": null
            },
            {
              "name": "?inLen",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "readBytes",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "readBytes(outData:lumen.utils.ByteArray, ?inOffset:Int, ?inLen:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "readUnsignedByte": {
          "args": [],
          "meta": {},
          "name": "readUnsignedByte",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "readUnsignedByte() : Int",
          "isstatic": false,
          "isinline": false
        },
        "readDouble": {
          "args": [],
          "meta": {},
          "name": "readDouble",
          "returntype": ": Float",
          "doc": "",
          "ispublic": true,
          "signature": "readDouble() : Float",
          "isstatic": false,
          "isinline": false
        },
        "get_bytesAvailable": {
          "args": [],
          "meta": {},
          "name": "get_bytesAvailable",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "get_bytesAvailable() : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.render.gl.GLShader": {
      "extend": [
        "lumen.render.gl.GLObject"
      ],
      "meta": {},
      "name": "lumen.platform.native.render.gl.GLShader",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "new": {
          "args": [
            {
              "name": "version",
              "type": "Int",
              "value": null
            },
            {
              "name": "id",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(version:Int, id:Dynamic) ",
          "isstatic": false,
          "isinline": false
        },
        "getType": {
          "args": [],
          "meta": {},
          "name": "getType",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "getType() : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.audio.Audio": {
      "extend": [],
      "meta": {},
      "name": "lumen.audio.Audio",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "sound_list": {
          "meta": {},
          "name": "sound_list",
          "type": "Map<String,lumen.audio.Sound>",
          "doc": "",
          "ispublic": false,
          "signature": "sound_list : Map<String,lumen.audio.Sound>",
          "isstatic": false,
          "isinline": false
        },
        "stream_list": {
          "meta": {},
          "name": "stream_list",
          "type": "Map<String,lumen.audio.SoundStream>",
          "doc": "",
          "ispublic": false,
          "signature": "stream_list : Map<String,lumen.audio.SoundStream>",
          "isstatic": false,
          "isinline": false
        },
        "system": {
          "meta": {},
          "name": "system",
          "type": "lumen.audio.AudioSystem",
          "doc": "The implementation of the current audio system",
          "ispublic": true,
          "signature": "system : lumen.audio.AudioSystem",
          "isstatic": false,
          "isinline": false
        },
        "lib": {
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "lib",
          "type": "lumen.Lumen",
          "doc": "",
          "ispublic": true,
          "signature": "lib : lumen.Lumen",
          "isstatic": false,
          "isinline": false
        },
        "active": {
          "meta": {},
          "name": "active",
          "type": "Bool",
          "doc": "Set to false to stop any and all processing in the audio system",
          "ispublic": true,
          "signature": "active : Bool",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "pitch": {
          "args": [
            {
              "name": "_name",
              "type": "String",
              "value": null
            },
            {
              "name": "_pitch",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "pitch",
          "returntype": ": Void",
          "doc": "Set the pitch of a sound instance by name",
          "ispublic": true,
          "signature": "pitch(_name:String, _pitch:Float) : Void",
          "isstatic": false,
          "isinline": false
        },
        "play": {
          "args": [
            {
              "name": "_name",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "play",
          "returntype": ": Void",
          "doc": "Play a sound instance by name",
          "ispublic": true,
          "signature": "play(_name:String) : Void",
          "isstatic": false,
          "isinline": false
        },
        "stop": {
          "args": [
            {
              "name": "_name",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "stop",
          "returntype": ": Void",
          "doc": "Stop a sound instance by name",
          "ispublic": true,
          "signature": "stop(_name:String) : Void",
          "isstatic": false,
          "isinline": false
        },
        "volume": {
          "args": [
            {
              "name": "_name",
              "type": "String",
              "value": null
            },
            {
              "name": "_volume",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "volume",
          "returntype": ": Void",
          "doc": "Set the volume of a sound instance by name",
          "ispublic": true,
          "signature": "volume(_name:String, _volume:Float) : Void",
          "isstatic": false,
          "isinline": false
        },
        "create": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": ""
            },
            {
              "name": "?_name",
              "type": "String",
              "value": "''"
            },
            {
              "name": "?streaming",
              "type": "Bool",
              "value": "false"
            }
          ],
          "meta": {},
          "name": "create",
          "returntype": ": lumen.audio.Sound",
          "doc": "Create a sound for playing. If no name is given, a unique id is assigned. Use the sound instance or the public api by name.",
          "ispublic": true,
          "signature": "create(_id:String, ?_name:String='', ?streaming:Bool=false) : lumen.audio.Sound",
          "isstatic": false,
          "isinline": false
        },
        "get": {
          "args": [
            {
              "name": "_name",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "get",
          "returntype": ": lumen.audio.Sound",
          "doc": "Get a sound instance by name",
          "ispublic": true,
          "signature": "get(_name:String) : lumen.audio.Sound",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "pan": {
          "args": [
            {
              "name": "_name",
              "type": "String",
              "value": null
            },
            {
              "name": "_pan",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "pan",
          "returntype": ": Void",
          "doc": "Set the pan of a sound instance by name",
          "ispublic": true,
          "signature": "pan(_name:String, _pan:Float) : Void",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "toggle": {
          "args": [
            {
              "name": "_name",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "toggle",
          "returntype": ": Void",
          "doc": "Toggle a sound instance by name, pausing the sound",
          "ispublic": true,
          "signature": "toggle(_name:String) : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.types.SystemEvent",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_event",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_event(_event:lumen.types.SystemEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "pause": {
          "args": [
            {
              "name": "_name",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "pause",
          "returntype": ": Void",
          "doc": "Pause a sound instance by name",
          "ispublic": true,
          "signature": "pause(_name:String) : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.input.sdl.TouchEventTypes": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.sdl.TouchEventTypes",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "te_up": {
          "meta": {},
          "name": "te_up",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "te_up : Int",
          "isstatic": true,
          "isinline": false
        },
        "te_down": {
          "meta": {},
          "name": "te_down",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "te_down : Int",
          "isstatic": true,
          "isinline": false
        },
        "te_move": {
          "meta": {},
          "name": "te_move",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "te_move : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "typed": {
          "args": [
            {
              "name": "te_type",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "typed",
          "returntype": ": lumen.input.TouchState",
          "doc": "",
          "ispublic": true,
          "signature": "typed(te_type:Int) : lumen.input.TouchState",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.render.gl.GLObject": {
      "extend": [],
      "meta": {},
      "name": "lumen.render.gl.GLObject",
      "properties": {
        "valid": {
          "meta": {},
          "name": "valid",
          "type": "Bool",
          "iswrite": false,
          "isread": true,
          "doc": "The valid state. read only",
          "signature": "valid : Bool",
          "type_desc": "(read only)"
        },
        "invalidated": {
          "meta": {},
          "name": "invalidated",
          "type": "Bool",
          "iswrite": false,
          "isread": true,
          "doc": "The invalidated state. read only",
          "signature": "invalidated : Bool",
          "type_desc": "(read only)"
        }
      },
      "doc": "A helper class for the resources, mostly specific to native code right now but this is still being cleaned up",
      "ispublic": true,
      "members": {
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "version": {
          "meta": {},
          "name": "version",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "version : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "isValid": {
          "args": [],
          "meta": {},
          "name": "isValid",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isValid() : Bool",
          "isstatic": false,
          "isinline": false
        },
        "get_valid": {
          "args": [],
          "meta": {},
          "name": "get_valid",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "get_valid() : Bool",
          "isstatic": false,
          "isinline": false
        },
        "get_invalidated": {
          "args": [],
          "meta": {},
          "name": "get_invalidated",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "get_invalidated() : Bool",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "version",
              "type": "Int",
              "value": null
            },
            {
              "name": "id",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(version:Int, id:Dynamic) ",
          "isstatic": false,
          "isinline": false
        },
        "invalidate": {
          "args": [],
          "meta": {},
          "name": "invalidate",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "invalidate() : Void",
          "isstatic": false,
          "isinline": false
        },
        "getType": {
          "args": [],
          "meta": {},
          "name": "getType",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "getType() : String",
          "isstatic": false,
          "isinline": false
        },
        "toString": {
          "args": [],
          "meta": {},
          "name": "toString",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "toString() : String",
          "isstatic": false,
          "isinline": false
        },
        "isInvalid": {
          "args": [],
          "meta": {},
          "name": "isInvalid",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "isInvalid() : Bool",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.audio.openal._AL.Context_Impl_": {
      "extend": [],
      "meta": {},
      "name": "lumen.platform.native.audio.openal._AL.Context_Impl_",
      "properties": {},
      "doc": "",
      "ispublic": false,
      "members": {},
      "methods": {},
      "implement": []
    },
    "lumen.platform.native.audio.Sound": {
      "extend": [
        "lumen.audio.SoundBinding"
      ],
      "meta": {},
      "name": "lumen.platform.native.audio.Sound",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.audio.Audio",
              "value": null
            },
            {
              "name": "_name",
              "type": "String",
              "value": null
            },
            {
              "name": "_audio_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.audio.Audio, _name:String, _audio_info:lumen.types.AudioInfo) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.AppFixedTimestep": {
      "extend": [
        "lumen.App"
      ],
      "meta": {},
      "name": "lumen.AppFixedTimestep",
      "properties": {},
      "doc": "Read the {App Guide} for full info, and for even more information see : http://gafferongames.com/game-physics/fix-your-timestep/\\n    this stores and calculates a fixed game update loop, and rendering interpolation is required\\n    for smooth updates between frames.",
      "ispublic": true,
      "members": {
        "overflow": {
          "meta": {},
          "name": "overflow",
          "type": "Float",
          "doc": "the overflow of the updates. This is used to calculate the alpha time for rendering interpolation, `var alpha_time = overflow / mspf;`",
          "ispublic": true,
          "signature": "overflow : Float",
          "isstatic": false,
          "isinline": false
        },
        "mspf": {
          "meta": {},
          "name": "mspf",
          "type": "Float",
          "doc": "fixed simulation update speed",
          "ispublic": true,
          "signature": "mspf : Float",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "on_lumen_update": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_lumen_update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_lumen_update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new() ",
          "isstatic": false,
          "isinline": false
        },
        "on_lumen_init": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_lumen_init",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_lumen_init() : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.io.IOFile": {
      "extend": [],
      "meta": {},
      "name": "lumen.io.IOFile",
      "properties": {},
      "doc": "This class is a low level cross platform file access helper, that handles in bundle assets etc. \\n    If you want a file, use `Assets` instead, unless really required.",
      "ispublic": true,
      "members": {
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "lumen_iosrc_file_read": {
          "meta": {},
          "name": "lumen_iosrc_file_read",
          "type": "Dynamic->lumen.utils.ByteArray->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_iosrc_file_read : Dynamic->lumen.utils.ByteArray->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_iosrc_file_seek": {
          "meta": {},
          "name": "lumen_iosrc_file_seek",
          "type": "Dynamic->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_iosrc_file_seek : Dynamic->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_iosrc_file_tell": {
          "meta": {},
          "name": "lumen_iosrc_file_tell",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_iosrc_file_tell : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_iosrc_file_close": {
          "meta": {},
          "name": "lumen_iosrc_file_close",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_iosrc_file_close : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_iosrc_file_write": {
          "meta": {},
          "name": "lumen_iosrc_file_write",
          "type": "Dynamic->lumen.utils.ByteArray->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_iosrc_file_write : Dynamic->lumen.utils.ByteArray->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "handle": {
          "meta": {},
          "name": "handle",
          "type": "Dynamic",
          "doc": "The internal native file handle",
          "ispublic": true,
          "signature": "handle : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "close": {
          "args": [],
          "meta": {},
          "name": "close",
          "returntype": ": Dynamic",
          "doc": "Close the file",
          "ispublic": true,
          "signature": "close() : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "read": {
          "args": [
            {
              "name": "dest",
              "type": "lumen.utils.ByteArray",
              "value": null
            },
            {
              "name": "size",
              "type": "Int",
              "value": null
            },
            {
              "name": "maxnum",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "read",
          "returntype": ": Dynamic",
          "doc": "Read a `maxnum` of items of `size` in bytes, into `dest`. Same signature/returns as `fread`",
          "ispublic": true,
          "signature": "read(dest:lumen.utils.ByteArray, size:Int, maxnum:Int) : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "seek": {
          "args": [
            {
              "name": "offset",
              "type": "Int",
              "value": null
            },
            {
              "name": "whence",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "seek",
          "returntype": ": Dynamic",
          "doc": "Seek `offset` from `whence`, where whence is an int matching `set=0`, `cur=1`, `end=2`. Same signature/returns as `fseek`",
          "ispublic": true,
          "signature": "seek(offset:Int, whence:Int) : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "tell": {
          "args": [],
          "meta": {},
          "name": "tell",
          "returntype": ": Dynamic",
          "doc": "Tell the current position in the file, in bytes",
          "ispublic": true,
          "signature": "tell() : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "write": {
          "args": [
            {
              "name": "src",
              "type": "lumen.utils.ByteArray",
              "value": null
            },
            {
              "name": "size",
              "type": "Int",
              "value": null
            },
            {
              "name": "num",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "write",
          "returntype": ": Dynamic",
          "doc": "Write `num` of items of `size` in bytes, from `src` into this file. Same signature/returns as `fwrite`",
          "ispublic": true,
          "signature": "write(src:lumen.utils.ByteArray, size:Int, num:Int) : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_handle",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_handle:Dynamic) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.audio.AudioSystem": {
      "extend": [
        "lumen.audio.AudioSystemBinding"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.audio.AudioSystem",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "suspend": {
          "args": [],
          "meta": {},
          "name": "suspend",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "suspend() : Void",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.audio.Audio",
              "value": null
            },
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.audio.Audio, _lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {},
          "name": "update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "resume": {
          "args": [],
          "meta": {},
          "name": "resume",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "resume() : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.input.sdl.MouseEventTypes": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.sdl.MouseEventTypes",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "me_up": {
          "meta": {},
          "name": "me_up",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "me_up : Int",
          "isstatic": true,
          "isinline": false
        },
        "me_wheel": {
          "meta": {},
          "name": "me_wheel",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "me_wheel : Int",
          "isstatic": true,
          "isinline": false
        },
        "me_down": {
          "meta": {},
          "name": "me_down",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "me_down : Int",
          "isstatic": true,
          "isinline": false
        },
        "me_move": {
          "meta": {},
          "name": "me_move",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "me_move : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "typed": {
          "args": [
            {
              "name": "me_type",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "typed",
          "returntype": ": lumen.platform.native.input.sdl.MouseEventType",
          "doc": "",
          "ispublic": true,
          "signature": "typed(me_type:Int) : lumen.platform.native.input.sdl.MouseEventType",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.audio.openal.Sound": {
      "extend": [
        "lumen.platform.native.audio.Sound"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.audio.openal.Sound",
      "properties": {},
      "doc": "The openal specific implementation of Sound",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "buffer": {
          "meta": {},
          "name": "buffer",
          "type": "Int",
          "doc": "the sound buffer name",
          "ispublic": true,
          "signature": "buffer : Int",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "format": {
          "meta": {},
          "name": "format",
          "type": "Int",
          "doc": "mono8? stereo16?",
          "ispublic": true,
          "signature": "format : Int",
          "isstatic": false,
          "isinline": false
        },
        "half_pi": {
          "meta": {},
          "name": "half_pi",
          "type": "Float",
          "doc": "",
          "ispublic": false,
          "signature": "half_pi : Float",
          "isstatic": true,
          "isinline": false
        },
        "source": {
          "meta": {},
          "name": "source",
          "type": "Int",
          "doc": "the sound source name",
          "ispublic": true,
          "signature": "source : Int",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "loop": {
          "args": [],
          "meta": {},
          "name": "loop",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "loop() : Void",
          "isstatic": false,
          "isinline": false
        },
        "play": {
          "args": [],
          "meta": {},
          "name": "play",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "play() : Void",
          "isstatic": false,
          "isinline": false
        },
        "stop": {
          "args": [],
          "meta": {},
          "name": "stop",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "stop() : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_time": {
          "args": [],
          "meta": {},
          "name": "get_time",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "get_time() : Float",
          "isstatic": false,
          "isinline": false
        },
        "set_volume": {
          "args": [
            {
              "name": "_volume",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_volume",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_volume(_volume:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "set_pitch": {
          "args": [
            {
              "name": "_pitch",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_pitch",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_pitch(_pitch:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "set_time": {
          "args": [
            {
              "name": "_time",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_time",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_time(_time:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "get_position": {
          "args": [],
          "meta": {},
          "name": "get_position",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "get_position() : Int",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.audio.Audio",
              "value": null
            },
            {
              "name": "_name",
              "type": "String",
              "value": null
            },
            {
              "name": "_audio_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.audio.Audio, _name:String, _audio_info:lumen.types.AudioInfo) ",
          "isstatic": false,
          "isinline": false
        },
        "set_position": {
          "args": [
            {
              "name": "_position",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_position",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "set_position(_position:Int) : Int",
          "isstatic": false,
          "isinline": false
        },
        "set_pan": {
          "args": [
            {
              "name": "_pan",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_pan",
          "returntype": ": Float",
          "doc": "",
          "ispublic": false,
          "signature": "set_pan(_pan:Float) : Float",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "set_looping": {
          "args": [
            {
              "name": "_looping",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "set_looping",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "set_looping(_looping:Bool) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "pause": {
          "args": [],
          "meta": {},
          "name": "pause",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "pause() : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.input.sdl.KeyEventTypes": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.sdl.KeyEventTypes",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "ke_textedit": {
          "meta": {},
          "name": "ke_textedit",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ke_textedit : Int",
          "isstatic": true,
          "isinline": false
        },
        "ke_up": {
          "meta": {},
          "name": "ke_up",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ke_up : Int",
          "isstatic": true,
          "isinline": false
        },
        "ke_textinput": {
          "meta": {},
          "name": "ke_textinput",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ke_textinput : Int",
          "isstatic": true,
          "isinline": false
        },
        "ke_down": {
          "meta": {},
          "name": "ke_down",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "ke_down : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "typed": {
          "args": [
            {
              "name": "ke_type",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "typed",
          "returntype": ": lumen.platform.native.input.sdl.KeyEventType",
          "doc": "",
          "ispublic": true,
          "signature": "typed(ke_type:Int) : lumen.platform.native.input.sdl.KeyEventType",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.utils.compat._Vector.Vector_Impl_": {
      "extend": [],
      "meta": {},
      "name": "lumen.utils.compat._Vector.Vector_Impl_",
      "properties": {
        "fixed": {
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "fixed",
          "type": "Bool",
          "iswrite": true,
          "isread": true,
          "doc": "",
          "signature": "fixed : Bool",
          "type_desc": "read/write"
        },
        "length": {
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "length",
          "type": "Int",
          "iswrite": true,
          "isread": true,
          "doc": "",
          "signature": "length : Int",
          "type_desc": "read/write"
        }
      },
      "doc": "",
      "ispublic": false,
      "members": {},
      "methods": {
        "copy": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "copy",
          "returntype": ": lumen.utils.compat.Vector<lumen.utils.compat.Vector.T>",
          "doc": "",
          "ispublic": true,
          "signature": "copy(this:Array<lumen.utils.compat.Vector.T>) : lumen.utils.compat.Vector<lumen.utils.compat.Vector.T>",
          "isstatic": true,
          "isinline": false
        },
        "get_fixed": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "get_fixed",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "get_fixed(this:Array<lumen.utils.compat.Vector.T>) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "join": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            },
            {
              "name": "sep",
              "type": "String",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "join",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "join(this:Array<lumen.utils.compat.Vector.T>, sep:String) : String",
          "isstatic": true,
          "isinline": false
        },
        "concat": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": ""
            },
            {
              "name": "?a",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": "null"
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "concat",
          "returntype": ": lumen.utils.compat.Vector<lumen.utils.compat.Vector.T>",
          "doc": "",
          "ispublic": true,
          "signature": "concat(this:Array<lumen.utils.compat.Vector.T>, ?a:Array<lumen.utils.compat.Vector.T>) : lumen.utils.compat.Vector<lumen.utils.compat.Vector.T>",
          "isstatic": true,
          "isinline": false
        },
        "push": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            },
            {
              "name": "x",
              "type": "lumen.utils.compat.Vector.T",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "push",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "push(this:Array<lumen.utils.compat.Vector.T>, x:lumen.utils.compat.Vector.T) : Int",
          "isstatic": true,
          "isinline": false
        },
        "sort": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            },
            {
              "name": "f",
              "type": "lumen.utils.compat.Vector.T->lumen.utils.compat.Vector.T->Int",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "sort",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "sort(this:Array<lumen.utils.compat.Vector.T>, f:lumen.utils.compat.Vector.T->lumen.utils.compat.Vector.T->Int) : Void",
          "isstatic": true,
          "isinline": false
        },
        "indexOf": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": ""
            },
            {
              "name": "x",
              "type": "lumen.utils.compat.Vector.T",
              "value": ""
            },
            {
              "name": "?from",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "indexOf",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "indexOf(this:Array<lumen.utils.compat.Vector.T>, x:lumen.utils.compat.Vector.T, ?from:Int=0) : Int",
          "isstatic": true,
          "isinline": false
        },
        "unshift": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            },
            {
              "name": "x",
              "type": "lumen.utils.compat.Vector.T",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "unshift",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "unshift(this:Array<lumen.utils.compat.Vector.T>, x:lumen.utils.compat.Vector.T) : Void",
          "isstatic": true,
          "isinline": false
        },
        "shift": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "shift",
          "returntype": ": Null<lumen.utils.compat.Vector.T>",
          "doc": "",
          "ispublic": true,
          "signature": "shift(this:Array<lumen.utils.compat.Vector.T>) : Null<lumen.utils.compat.Vector.T>",
          "isstatic": true,
          "isinline": false
        },
        "slice": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": ""
            },
            {
              "name": "?pos",
              "type": "Int",
              "value": "null"
            },
            {
              "name": "?end",
              "type": "Int",
              "value": "null"
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "slice",
          "returntype": ": lumen.utils.compat.Vector<lumen.utils.compat.Vector.T>",
          "doc": "",
          "ispublic": true,
          "signature": "slice(this:Array<lumen.utils.compat.Vector.T>, ?pos:Int, ?end:Int) : lumen.utils.compat.Vector<lumen.utils.compat.Vector.T>",
          "isstatic": true,
          "isinline": false
        },
        "pop": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "pop",
          "returntype": ": Null<lumen.utils.compat.Vector.T>",
          "doc": "",
          "ispublic": true,
          "signature": "pop(this:Array<lumen.utils.compat.Vector.T>) : Null<lumen.utils.compat.Vector.T>",
          "isstatic": true,
          "isinline": false
        },
        "get_length": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "get_length",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "get_length(this:Array<lumen.utils.compat.Vector.T>) : Int",
          "isstatic": true,
          "isinline": false
        },
        "set_length": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            },
            {
              "name": "value",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "set_length",
          "returntype": ": Int",
          "doc": "",
          "ispublic": false,
          "signature": "set_length(this:Array<lumen.utils.compat.Vector.T>, value:Int) : Int",
          "isstatic": true,
          "isinline": false
        },
        "iterator": {
          "args": [
            {
              "name": "this",
              "type": "Array<iterator.T>",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "iterator",
          "returntype": ": Iterator<iterator.T>",
          "doc": "",
          "ispublic": true,
          "signature": "iterator<T>(this:Array<iterator.T>) : Iterator<iterator.T>",
          "isstatic": true,
          "isinline": false
        },
        "lastIndexOf": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": ""
            },
            {
              "name": "x",
              "type": "lumen.utils.compat.Vector.T",
              "value": ""
            },
            {
              "name": "?from",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "lastIndexOf",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "lastIndexOf(this:Array<lumen.utils.compat.Vector.T>, x:lumen.utils.compat.Vector.T, ?from:Int=0) : Int",
          "isstatic": true,
          "isinline": false
        },
        "reverse": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "reverse",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "reverse(this:Array<lumen.utils.compat.Vector.T>) : Void",
          "isstatic": true,
          "isinline": false
        },
        "set_fixed": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            },
            {
              "name": "value",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "set_fixed",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": false,
          "signature": "set_fixed(this:Array<lumen.utils.compat.Vector.T>, value:Bool) : Bool",
          "isstatic": true,
          "isinline": false
        },
        "toString": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "toString",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "toString(this:Array<lumen.utils.compat.Vector.T>) : String",
          "isstatic": true,
          "isinline": false
        },
        "_new": {
          "args": [
            {
              "name": "?length",
              "type": "Int",
              "value": "null"
            },
            {
              "name": "?fixed",
              "type": "Bool",
              "value": "null"
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "_new",
          "returntype": ": Array<lumen.utils.compat.Vector.T>",
          "doc": "",
          "ispublic": true,
          "signature": "_new(?length:Int, ?fixed:Bool) : Array<lumen.utils.compat.Vector.T>",
          "isstatic": true,
          "isinline": false
        },
        "splice": {
          "args": [
            {
              "name": "this",
              "type": "Array<lumen.utils.compat.Vector.T>",
              "value": null
            },
            {
              "name": "pos",
              "type": "Int",
              "value": null
            },
            {
              "name": "len",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {
            "meta": {
              "name": ":impl",
              "value": ""
            }
          },
          "name": "splice",
          "returntype": ": lumen.utils.compat.Vector<lumen.utils.compat.Vector.T>",
          "doc": "",
          "ispublic": true,
          "signature": "splice(this:Array<lumen.utils.compat.Vector.T>, pos:Int, len:Int) : lumen.utils.compat.Vector<lumen.utils.compat.Vector.T>",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.audio.SoundStream": {
      "extend": [
        "lumen.platform.native.audio.openal.Sound"
      ],
      "meta": {},
      "name": "lumen.platform.native.audio.SoundStream",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "buffer_length": {
          "meta": {},
          "name": "buffer_length",
          "type": "Int",
          "doc": "The length of bytes for a single buffer to queue up to stream. Default is `176400`, about 1 second in 16 bit mono. `todo` optionize",
          "ispublic": true,
          "signature": "buffer_length : Int",
          "isstatic": false,
          "isinline": false
        },
        "data_get": {
          "meta": {},
          "name": "data_get",
          "type": "Int->Int->lumen.types.AudioDataBlob",
          "doc": "The get function, assign a function here if you want to stream data to the source manually, like generative sound.",
          "ispublic": true,
          "signature": "data_get : Int->Int->lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "buffer_count": {
          "meta": {},
          "name": "buffer_count",
          "type": "Int",
          "doc": "The number of buffers to use in the queue for streaming. Default is `4` `todo` optionize",
          "ispublic": true,
          "signature": "buffer_count : Int",
          "isstatic": false,
          "isinline": false
        },
        "data_seek": {
          "meta": {},
          "name": "data_seek",
          "type": "Int->Bool",
          "doc": "The seek function, assign a function here if you want to stream data to the source manually, like generative sound.",
          "ispublic": true,
          "signature": "data_seek : Int->Bool",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "default_data_seek": {
          "args": [
            {
              "name": "_to",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "default_data_seek",
          "returntype": ": Bool",
          "doc": "Default data seek implementation for `SoundStream` uses `assets.audio_seek_source`",
          "ispublic": false,
          "signature": "default_data_seek(_to:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "default_data_get": {
          "args": [
            {
              "name": "_start",
              "type": "Int",
              "value": null
            },
            {
              "name": "_length",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "default_data_get",
          "returntype": ": lumen.types.AudioDataBlob",
          "doc": "Default data get implementation for `SoundStream` uses `assets.audio_load_portion`",
          "ispublic": false,
          "signature": "default_data_get(_start:Int, _length:Int) : lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.audio.Audio",
              "value": null
            },
            {
              "name": "_name",
              "type": "String",
              "value": null
            },
            {
              "name": "_audio_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.audio.Audio, _name:String, _audio_info:lumen.types.AudioInfo) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.Core": {
      "extend": [
        "lumen.CoreBinding"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.Core",
      "properties": {},
      "doc": "Implemented in the platform specific concrete versions of this class",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "lumen_timestamp": {
          "meta": {},
          "name": "lumen_timestamp",
          "type": "Float",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_timestamp : Float",
          "isstatic": true,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "lumen_app_path": {
          "meta": {},
          "name": "lumen_app_path",
          "type": "String",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_app_path : String",
          "isstatic": true,
          "isinline": false
        },
        "lumen_pref_path": {
          "meta": {},
          "name": "lumen_pref_path",
          "type": "String->String->String",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_pref_path : String->String->String",
          "isstatic": true,
          "isinline": false
        },
        "lumen_shutdown": {
          "meta": {},
          "name": "lumen_shutdown",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_shutdown : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_init": {
          "meta": {},
          "name": "lumen_init",
          "type": "Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_init : Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [
            {
              "name": "_event_handler",
              "type": "lumen.types.SystemEvent->Void",
              "value": null
            }
          ],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "Called by the lumen internals to intiialize the core and subsystems of the framework, with the event handler passed in for where to deliver system events",
          "ispublic": true,
          "signature": "init(_event_handler:lumen.types.SystemEvent->Void) : Void",
          "isstatic": false,
          "isinline": false
        },
        "shutdown": {
          "args": [],
          "meta": {},
          "name": "shutdown",
          "returntype": ": Void",
          "doc": "Called to explicitly shutdown the framework cleanly. Called by `quit` and `app_terminated` type events by the core, for example.",
          "ispublic": true,
          "signature": "shutdown() : Void",
          "isstatic": false,
          "isinline": false
        },
        "pref_path": {
          "args": [
            {
              "name": "_appname",
              "type": "String",
              "value": null
            },
            {
              "name": "_package",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "pref_path",
          "returntype": ": String",
          "doc": "On platforms where this makes sense, get the application specific writeable data path",
          "ispublic": true,
          "signature": "pref_path(_appname:String, _package:String) : String",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_app",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_app:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "app_path": {
          "args": [],
          "meta": {},
          "name": "app_path",
          "returntype": ": String",
          "doc": "Return the full path that the application is located",
          "ispublic": true,
          "signature": "app_path() : String",
          "isstatic": false,
          "isinline": false
        },
        "timestamp": {
          "args": [],
          "meta": {},
          "name": "timestamp",
          "returntype": ": Float",
          "doc": "Get the most precise timestamp available on the platform, in seconds (time is always in seconds in lumen)",
          "ispublic": true,
          "signature": "timestamp() : Float",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.utils.Libs": {
      "extend": [],
      "meta": {},
      "name": "lumen.utils.Libs",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "__moduleNames": {
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "__moduleNames",
          "type": "Map<String,String>",
          "doc": "",
          "ispublic": false,
          "signature": "__moduleNames : Map<String,String>",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "load": {
          "args": [
            {
              "name": "library",
              "type": "String",
              "value": ""
            },
            {
              "name": "method",
              "type": "String",
              "value": ""
            },
            {
              "name": "?args",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {},
          "name": "load",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": true,
          "signature": "load(library:String, method:String, ?args:Int=0) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "tryLoad": {
          "args": [
            {
              "name": "name",
              "type": "String",
              "value": null
            },
            {
              "name": "library",
              "type": "String",
              "value": null
            },
            {
              "name": "func",
              "type": "String",
              "value": null
            },
            {
              "name": "args",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "tryLoad",
          "returntype": ": Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "tryLoad(name:String, library:String, func:String, args:Int) : Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "findHaxeLib": {
          "args": [
            {
              "name": "library",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "findHaxeLib",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "findHaxeLib(library:String) : String",
          "isstatic": true,
          "isinline": false
        },
        "loaderTrace": {
          "args": [
            {
              "name": "message",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "loaderTrace",
          "returntype": ": Void",
          "doc": "",
          "ispublic": false,
          "signature": "loaderTrace(message:String) : Void",
          "isstatic": true,
          "isinline": false
        },
        "get_system_name": {
          "args": [],
          "meta": {},
          "name": "get_system_name",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "get_system_name() : String",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.utils.compat.Endian": {
      "extend": [],
      "meta": {},
      "name": "lumen.utils.compat.Endian",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {},
      "implement": []
    },
    "lumen.platform.native.input.sdl.InputSystem": {
      "extend": [
        "lumen.platform.native.input.InputSystem"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.sdl.InputSystem",
      "properties": {},
      "doc": "Internal input system, concrete SDL implementation. Accessed through `app.input`, not directly",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.input.Input",
              "value": null
            },
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.input.Input, _lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "mouse_button_from_number": {
          "args": [
            {
              "name": "button",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "mouse_button_from_number",
          "returntype": ": lumen.input.MouseButton",
          "doc": "",
          "ispublic": false,
          "signature": "mouse_button_from_number(button:Int) : lumen.input.MouseButton",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {},
          "name": "update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_event": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.types.InputEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "on_event",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_event(_event:lumen.types.InputEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "mod_state_from_event": {
          "args": [
            {
              "name": "event",
              "type": "lumen.types.InputEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "mod_state_from_event",
          "returntype": ": lumen.input.ModState",
          "doc": "Helper to return a `ModState` (shift, ctrl etc) from a given `InputEvent`",
          "ispublic": true,
          "signature": "mod_state_from_event(event:lumen.types.InputEvent) : lumen.input.ModState",
          "isstatic": false,
          "isinline": false
        },
        "key_state_from_event": {
          "args": [
            {
              "name": "type",
              "type": "lumen.platform.native.input.sdl.KeyEventType",
              "value": null
            }
          ],
          "meta": {},
          "name": "key_state_from_event",
          "returntype": ": lumen.input.PressedState",
          "doc": "",
          "ispublic": false,
          "signature": "key_state_from_event(type:lumen.platform.native.input.sdl.KeyEventType) : lumen.input.PressedState",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.types.WindowEvents": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.types.WindowEvents",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "we_maximized": {
          "meta": {},
          "name": "we_maximized",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_maximized : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_close": {
          "meta": {},
          "name": "we_close",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_close : Int",
          "isstatic": true,
          "isinline": false
        },
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "we_focus_lost": {
          "meta": {},
          "name": "we_focus_lost",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_focus_lost : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_hidden": {
          "meta": {},
          "name": "we_hidden",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_hidden : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_created": {
          "meta": {},
          "name": "we_created",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_created : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_enter": {
          "meta": {},
          "name": "we_enter",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_enter : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_minimized": {
          "meta": {},
          "name": "we_minimized",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_minimized : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_leave": {
          "meta": {},
          "name": "we_leave",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_leave : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_shown": {
          "meta": {},
          "name": "we_shown",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_shown : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_restored": {
          "meta": {},
          "name": "we_restored",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_restored : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_exposed": {
          "meta": {},
          "name": "we_exposed",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_exposed : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_moved": {
          "meta": {},
          "name": "we_moved",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_moved : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_unknown": {
          "meta": {},
          "name": "we_unknown",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_unknown : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_focus_gained": {
          "meta": {},
          "name": "we_focus_gained",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_focus_gained : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_resized": {
          "meta": {},
          "name": "we_resized",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_resized : Int",
          "isstatic": true,
          "isinline": false
        },
        "we_size_changed": {
          "meta": {},
          "name": "we_size_changed",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "we_size_changed : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "typed": {
          "args": [
            {
              "name": "type",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "typed",
          "returntype": ": lumen.types.WindowEventType",
          "doc": "returns a typed `WindowEventType` from an integer ID, for communication between internal native + haxe code",
          "ispublic": true,
          "signature": "typed(type:Int) : lumen.types.WindowEventType",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.io.IO": {
      "extend": [],
      "meta": {},
      "name": "lumen.io.IO",
      "properties": {},
      "doc": "This class is a low level cross platform IO helper. \\n    If you want file access, use `Assets` instead, unless really required.",
      "ispublic": true,
      "members": {
        "lumen_iosrc_from_file": {
          "meta": {},
          "name": "lumen_iosrc_from_file",
          "type": "String->String->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_iosrc_from_file : String->String->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "from_file": {
          "args": [
            {
              "name": "_id",
              "type": "String",
              "value": ""
            },
            {
              "name": "?_mode",
              "type": "String",
              "value": "'rb'"
            }
          ],
          "meta": {},
          "name": "from_file",
          "returntype": ": lumen.io.IOFile",
          "doc": "Create an `IOFile` from a file path `_id`, this bypasses the `Asset` system path helpers.",
          "ispublic": true,
          "signature": "from_file(_id:String, ?_mode:String='rb') : lumen.io.IOFile",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.assets.AssetSystem": {
      "extend": [
        "lumen.assets.AssetSystemBinding"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.assets.AssetSystem",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "lumen_assets_audio_seek_bytes_ogg": {
          "meta": {},
          "name": "lumen_assets_audio_seek_bytes_ogg",
          "type": "lumen.types.AudioInfo->Int->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_audio_seek_bytes_ogg : lumen.types.AudioInfo->Int->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_assets_audio_seek_bytes_pcm": {
          "meta": {},
          "name": "lumen_assets_audio_seek_bytes_pcm",
          "type": "lumen.types.AudioInfo->Int->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_audio_seek_bytes_pcm : lumen.types.AudioInfo->Int->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_assets_audio_seek_bytes_wav": {
          "meta": {},
          "name": "lumen_assets_audio_seek_bytes_wav",
          "type": "lumen.types.AudioInfo->Int->Bool",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_audio_seek_bytes_wav : lumen.types.AudioInfo->Int->Bool",
          "isstatic": true,
          "isinline": false
        },
        "lumen_assets_audio_load_info_ogg": {
          "meta": {},
          "name": "lumen_assets_audio_load_info_ogg",
          "type": "String->Null->lumen.types.AudioInfo",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_audio_load_info_ogg : String->Null->lumen.types.AudioInfo",
          "isstatic": true,
          "isinline": false
        },
        "lumen_assets_audio_load_info_pcm": {
          "meta": {},
          "name": "lumen_assets_audio_load_info_pcm",
          "type": "String->Null->lumen.types.AudioInfo",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_audio_load_info_pcm : String->Null->lumen.types.AudioInfo",
          "isstatic": true,
          "isinline": false
        },
        "lumen_assets_audio_load_info_wav": {
          "meta": {},
          "name": "lumen_assets_audio_load_info_wav",
          "type": "String->Null->lumen.types.AudioInfo",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_audio_load_info_wav : String->Null->lumen.types.AudioInfo",
          "isstatic": true,
          "isinline": false
        },
        "lumen_assets_audio_read_bytes_ogg": {
          "meta": {},
          "name": "lumen_assets_audio_read_bytes_ogg",
          "type": "lumen.types.AudioInfo->Int->Int->lumen.types.AudioDataBlob",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_audio_read_bytes_ogg : lumen.types.AudioInfo->Int->Int->lumen.types.AudioDataBlob",
          "isstatic": true,
          "isinline": false
        },
        "lumen_assets_audio_read_bytes_pcm": {
          "meta": {},
          "name": "lumen_assets_audio_read_bytes_pcm",
          "type": "lumen.types.AudioInfo->Int->Int->lumen.types.AudioDataBlob",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_audio_read_bytes_pcm : lumen.types.AudioInfo->Int->Int->lumen.types.AudioDataBlob",
          "isstatic": true,
          "isinline": false
        },
        "lumen_assets_audio_read_bytes_wav": {
          "meta": {},
          "name": "lumen_assets_audio_read_bytes_wav",
          "type": "lumen.types.AudioInfo->Int->Int->lumen.types.AudioDataBlob",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_audio_read_bytes_wav : lumen.types.AudioInfo->Int->Int->lumen.types.AudioDataBlob",
          "isstatic": true,
          "isinline": false
        },
        "lumen_assets_image_load_info": {
          "meta": {},
          "name": "lumen_assets_image_load_info",
          "type": "String->Null->lumen.types.ImageInfo",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_assets_image_load_info : String->Null->lumen.types.ImageInfo",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "audio_seek_source_ogg": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_to",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_seek_source_ogg",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "audio_seek_source_ogg(_info:lumen.types.AudioInfo, _to:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "audio_seek_source_pcm": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_to",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_seek_source_pcm",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "audio_seek_source_pcm(_info:lumen.types.AudioInfo, _to:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "audio_seek_source_wav": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_to",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_seek_source_wav",
          "returntype": ": Bool",
          "doc": "",
          "ispublic": true,
          "signature": "audio_seek_source_wav(_info:lumen.types.AudioInfo, _to:Int) : Bool",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_portion_ogg": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_start",
              "type": "Int",
              "value": null
            },
            {
              "name": "_len",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_load_portion_ogg",
          "returntype": ": lumen.types.AudioDataBlob",
          "doc": "",
          "ispublic": true,
          "signature": "audio_load_portion_ogg(_info:lumen.types.AudioInfo, _start:Int, _len:Int) : lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_portion_pcm": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_start",
              "type": "Int",
              "value": null
            },
            {
              "name": "_len",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_load_portion_pcm",
          "returntype": ": lumen.types.AudioDataBlob",
          "doc": "",
          "ispublic": true,
          "signature": "audio_load_portion_pcm(_info:lumen.types.AudioInfo, _start:Int, _len:Int) : lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_portion_wav": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            },
            {
              "name": "_start",
              "type": "Int",
              "value": null
            },
            {
              "name": "_len",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "audio_load_portion_wav",
          "returntype": ": lumen.types.AudioDataBlob",
          "doc": "",
          "ispublic": true,
          "signature": "audio_load_portion_wav(_info:lumen.types.AudioInfo, _start:Int, _len:Int) : lumen.types.AudioDataBlob",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.assets.Assets",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.assets.Assets) ",
          "isstatic": false,
          "isinline": false
        },
        "image_load_info": {
          "args": [
            {
              "name": "_path",
              "type": "String",
              "value": ""
            },
            {
              "name": "?_components",
              "type": "Int",
              "value": "4"
            }
          ],
          "meta": {},
          "name": "image_load_info",
          "returntype": ": lumen.types.ImageInfo",
          "doc": "",
          "ispublic": true,
          "signature": "image_load_info(_path:String, ?_components:Int=4) : lumen.types.ImageInfo",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_ogg": {
          "args": [
            {
              "name": "asset",
              "type": "lumen.types.AssetInfo",
              "value": ""
            },
            {
              "name": "?load",
              "type": "Bool",
              "value": "true"
            }
          ],
          "meta": {},
          "name": "audio_load_ogg",
          "returntype": ": lumen.types.AudioInfo",
          "doc": "",
          "ispublic": true,
          "signature": "audio_load_ogg(asset:lumen.types.AssetInfo, ?load:Bool=true) : lumen.types.AudioInfo",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_pcm": {
          "args": [
            {
              "name": "asset",
              "type": "lumen.types.AssetInfo",
              "value": ""
            },
            {
              "name": "?load",
              "type": "Bool",
              "value": "true"
            }
          ],
          "meta": {},
          "name": "audio_load_pcm",
          "returntype": ": lumen.types.AudioInfo",
          "doc": "",
          "ispublic": true,
          "signature": "audio_load_pcm(asset:lumen.types.AssetInfo, ?load:Bool=true) : lumen.types.AudioInfo",
          "isstatic": false,
          "isinline": false
        },
        "audio_load_wav": {
          "args": [
            {
              "name": "asset",
              "type": "lumen.types.AssetInfo",
              "value": ""
            },
            {
              "name": "?load",
              "type": "Bool",
              "value": "true"
            }
          ],
          "meta": {},
          "name": "audio_load_wav",
          "returntype": ": lumen.types.AudioInfo",
          "doc": "",
          "ispublic": true,
          "signature": "audio_load_wav(asset:lumen.types.AssetInfo, ?load:Bool=true) : lumen.types.AudioInfo",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.audio.openal.OpenALHelper": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.audio.openal.OpenALHelper",
      "properties": {},
      "doc": "Internal helper class for interaction with OpenAL.",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "determine_format": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AudioInfo",
              "value": null
            }
          ],
          "meta": {},
          "name": "determine_format",
          "returntype": ": Int",
          "doc": "Determine the OpenAL format of an `AudioInfo` instance, such as AL.FORMAT_MONO16 or AL.FORMAT_STEREO16",
          "ispublic": true,
          "signature": "determine_format(_info:lumen.types.AudioInfo) : Int",
          "isstatic": true,
          "isinline": false
        },
        "default_source_setup": {
          "args": [
            {
              "name": "source",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "default_source_setup",
          "returntype": ": Void",
          "doc": "Set up a source using default values for PITCH, GAIN, POSITION, VELOCITY, and LOOPING",
          "ispublic": true,
          "signature": "default_source_setup(source:Int) : Void",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.utils.Float32Array": {
      "extend": [
        "lumen.platform.native.utils.ArrayBufferView"
      ],
      "meta": {},
      "name": "lumen.platform.native.utils.Float32Array",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "fromMatrix": {
          "args": [
            {
              "name": "matrix",
              "type": "lumen.utils.compat.Matrix3D",
              "value": null
            }
          ],
          "meta": {},
          "name": "fromMatrix",
          "returntype": ": lumen.platform.native.utils.Float32Array",
          "doc": "",
          "ispublic": true,
          "signature": "fromMatrix(matrix:lumen.utils.compat.Matrix3D) : lumen.platform.native.utils.Float32Array",
          "isstatic": true,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "bufferOrArray",
              "type": "Dynamic",
              "value": ""
            },
            {
              "name": "?start",
              "type": "Int",
              "value": "0"
            },
            {
              "name": "?length",
              "type": "Int",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(bufferOrArray:Dynamic, ?start:Int=0, ?length:Int) ",
          "isstatic": false,
          "isinline": false
        },
        "set": {
          "args": [
            {
              "name": "bufferOrArray",
              "type": "Dynamic",
              "value": ""
            },
            {
              "name": "?offset",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {},
          "name": "set",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "set(bufferOrArray:Dynamic, ?offset:Int=0) : Void",
          "isstatic": false,
          "isinline": false
        },
        "subarray": {
          "args": [
            {
              "name": "start",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?end",
              "type": "Int",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "subarray",
          "returntype": ": lumen.platform.native.utils.Float32Array",
          "doc": "",
          "ispublic": true,
          "signature": "subarray(start:Int, ?end:Int) : lumen.platform.native.utils.Float32Array",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.App": {
      "extend": [],
      "meta": {},
      "name": "lumen.App",
      "properties": {},
      "doc": "The default type of application, with variable delta time, or fixed delta time, or a fixed frame rate. See the {App Guide} for complete details.",
      "ispublic": true,
      "members": {
        "max_frame_time": {
          "meta": {},
          "name": "max_frame_time",
          "type": "Float",
          "doc": "the maximum frame time",
          "ispublic": true,
          "signature": "max_frame_time : Float",
          "isstatic": false,
          "isinline": false
        },
        "fixed_rate": {
          "meta": {},
          "name": "fixed_rate",
          "type": "Float",
          "doc": "if this is non zero, updates will be forced to this rate",
          "ispublic": true,
          "signature": "fixed_rate : Float",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "delta_sim": {
          "meta": {},
          "name": "delta_sim",
          "type": "Float",
          "doc": "the simulated time the last frame took to run, relative to scale etc",
          "ispublic": true,
          "signature": "delta_sim : Float",
          "isstatic": false,
          "isinline": false
        },
        "app": {
          "meta": {},
          "name": "app",
          "type": "lumen.Lumen",
          "doc": "use this to access the api features. *i.e* `app.assets.get_text(_id)`",
          "ispublic": true,
          "signature": "app : lumen.Lumen",
          "isstatic": false,
          "isinline": false
        },
        "next_tick": {
          "meta": {},
          "name": "next_tick",
          "type": "Float",
          "doc": "for fixed_rate, the time when the next tick should occur around",
          "ispublic": false,
          "signature": "next_tick : Float",
          "isstatic": false,
          "isinline": false
        },
        "delta_time": {
          "meta": {},
          "name": "delta_time",
          "type": "Float",
          "doc": "the time the last frame took to run",
          "ispublic": true,
          "signature": "delta_time : Float",
          "isstatic": false,
          "isinline": false
        },
        "last_frame_start": {
          "meta": {},
          "name": "last_frame_start",
          "type": "Float",
          "doc": "the start time of the last frame",
          "ispublic": true,
          "signature": "last_frame_start : Float",
          "isstatic": false,
          "isinline": false
        },
        "timescale": {
          "meta": {},
          "name": "timescale",
          "type": "Float",
          "doc": "the scale of time",
          "ispublic": true,
          "signature": "timescale : Float",
          "isstatic": false,
          "isinline": false
        },
        "current_time": {
          "meta": {},
          "name": "current_time",
          "type": "Float",
          "doc": "the current simulation time",
          "ispublic": true,
          "signature": "current_time : Float",
          "isstatic": false,
          "isinline": false
        },
        "cur_frame_start": {
          "meta": {},
          "name": "cur_frame_start",
          "type": "Float",
          "doc": "the start time of this frame",
          "ispublic": true,
          "signature": "cur_frame_start : Float",
          "isstatic": false,
          "isinline": false
        },
        "fixed_delta": {
          "meta": {},
          "name": "fixed_delta",
          "type": "Float",
          "doc": "if this is non zero this will be passed in",
          "ispublic": true,
          "signature": "fixed_delta : Float",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "ontextinput": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.TextEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "ontextinput",
          "returntype": ": Void",
          "doc": "Called for you when text input is happening. Use this for textfields, as it handles the complexity of unicode etc.",
          "ispublic": true,
          "signature": "ontextinput(_event:lumen.input.TextEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_runtime_config": {
          "args": [],
          "meta": {},
          "name": "get_runtime_config",
          "returntype": ": Dynamic",
          "doc": "override this if you want to change how the runtime config is loaded/handled",
          "ispublic": true,
          "signature": "get_runtime_config() : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "onmouseup": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.MouseEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "onmouseup",
          "returntype": ": Void",
          "doc": "Called for you when a mouse button is released",
          "ispublic": true,
          "signature": "onmouseup(_event:lumen.input.MouseEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "onkeyup": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.KeyEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "onkeyup",
          "returntype": ": Void",
          "doc": "Called for you when a key is released",
          "ispublic": true,
          "signature": "onkeyup(_event:lumen.input.KeyEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "ontouchup": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.TouchEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "ontouchup",
          "returntype": ": Void",
          "doc": "Called for you when a touch is first pressed, use the `touch_id` to track which",
          "ispublic": true,
          "signature": "ontouchup(_event:lumen.input.TouchEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "ongamepadaxis": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.GamepadEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "ongamepadaxis",
          "returntype": ": Void",
          "doc": "Called for you when a connected gamepad axis moves, use `which` to determine gamepad id",
          "ispublic": true,
          "signature": "ongamepadaxis(_event:lumen.input.GamepadEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "on_lumen_update": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_lumen_update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_lumen_update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "ready": {
          "args": [],
          "meta": {},
          "name": "ready",
          "returntype": ": Void",
          "doc": "Your entry point. Called for you when you can initialize your application",
          "ispublic": true,
          "signature": "ready() : Void",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "The default constructor of an App is empty, so you can override it if you want, but take note that this happens way before lumen is ready for use. Use [ready](#ready) for entry point.",
          "ispublic": true,
          "signature": "new() ",
          "isstatic": false,
          "isinline": false
        },
        "onmousedown": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.MouseEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "onmousedown",
          "returntype": ": Void",
          "doc": "Called for you when a mouse button is pressed",
          "ispublic": true,
          "signature": "onmousedown(_event:lumen.input.MouseEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "ongamepadbuttondown": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.GamepadEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "ongamepadbuttondown",
          "returntype": ": Void",
          "doc": "Called for you when a connected gamepad button is pressed, use `which` to determine gamepad id",
          "ispublic": true,
          "signature": "ongamepadbuttondown(_event:lumen.input.GamepadEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [
            {
              "name": "dt",
              "type": "Float",
              "value": null
            }
          ],
          "meta": {},
          "name": "update",
          "returntype": ": Void",
          "doc": "Your update loop. Called every frame for you. The dt value depends on the timing configuration (see the {App Guide})",
          "ispublic": true,
          "signature": "update(dt:Float) : Void",
          "isstatic": false,
          "isinline": false
        },
        "onmousemove": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.MouseEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "onmousemove",
          "returntype": ": Void",
          "doc": "Called for you when the mouse moves",
          "ispublic": true,
          "signature": "onmousemove(_event:lumen.input.MouseEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "get_asset_list": {
          "args": [],
          "meta": {},
          "name": "get_asset_list",
          "returntype": ": Array<lumen.types.AssetInfo>",
          "doc": "override this if you want to change how the asset list is loaded/handled. By default it uses the asset manifest generated by the build tools.",
          "ispublic": true,
          "signature": "get_asset_list() : Array<lumen.types.AssetInfo>",
          "isstatic": false,
          "isinline": false
        },
        "on_lumen_init": {
          "args": [],
          "meta": {
            "meta": {
              "name": ":noCompletion",
              "value": ""
            }
          },
          "name": "on_lumen_init",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "on_lumen_init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "ongamepaddevice": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.GamepadEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "ongamepaddevice",
          "returntype": ": Void",
          "doc": "Called for you when a gamepad is connected or disconnected, use `which` to determine gamepad id",
          "ispublic": true,
          "signature": "ongamepaddevice(_event:lumen.input.GamepadEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "ontouchdown": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.TouchEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "ontouchdown",
          "returntype": ": Void",
          "doc": "Called for you when a touch is released, use the `touch_id` to track which",
          "ispublic": true,
          "signature": "ontouchdown(_event:lumen.input.TouchEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "ontouchmove": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.TouchEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "ontouchmove",
          "returntype": ": Void",
          "doc": "Called for you when a touch is moved, use the `touch_id` to track which",
          "ispublic": true,
          "signature": "ontouchmove(_event:lumen.input.TouchEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "onmousewheel": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.MouseEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "onmousewheel",
          "returntype": ": Void",
          "doc": "Called for you when the mouse wheel moves",
          "ispublic": true,
          "signature": "onmousewheel(_event:lumen.input.MouseEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "ongamepadbuttonup": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.GamepadEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "ongamepadbuttonup",
          "returntype": ": Void",
          "doc": "Called for you when a connected gamepad button is released, use `which` to determine gamepad id",
          "ispublic": true,
          "signature": "ongamepadbuttonup(_event:lumen.input.GamepadEvent) : Void",
          "isstatic": false,
          "isinline": false
        },
        "onkeydown": {
          "args": [
            {
              "name": "_event",
              "type": "lumen.input.KeyEvent",
              "value": null
            }
          ],
          "meta": {},
          "name": "onkeydown",
          "returntype": ": Void",
          "doc": "Called for you when a key is pressed down",
          "ispublic": true,
          "signature": "onkeydown(_event:lumen.input.KeyEvent) : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.window.WindowSystem": {
      "extend": [
        "lumen.window.WindowSystemBinding"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.window.WindowSystem",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "lumen_window_swap": {
          "meta": {},
          "name": "lumen_window_swap",
          "type": "lumen.window.WindowHandle->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_swap : lumen.window.WindowHandle->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_desktop_get_display_native_mode": {
          "meta": {},
          "name": "lumen_desktop_get_display_native_mode",
          "type": "Int->lumen.window.DisplayMode",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_desktop_get_display_native_mode : Int->lumen.window.DisplayMode",
          "isstatic": true,
          "isinline": false
        },
        "lumen_desktop_get_display_mode_count": {
          "meta": {},
          "name": "lumen_desktop_get_display_mode_count",
          "type": "Int->Int",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_desktop_get_display_mode_count : Int->Int",
          "isstatic": true,
          "isinline": false
        },
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "lumen_desktop_get_display_mode": {
          "meta": {},
          "name": "lumen_desktop_get_display_mode",
          "type": "Int->Int->lumen.window.DisplayMode",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_desktop_get_display_mode : Int->Int->lumen.window.DisplayMode",
          "isstatic": true,
          "isinline": false
        },
        "lumen_desktop_get_display_name": {
          "meta": {},
          "name": "lumen_desktop_get_display_name",
          "type": "Int->String",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_desktop_get_display_name : Int->String",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_simple_message": {
          "meta": {},
          "name": "lumen_window_simple_message",
          "type": "lumen.window.WindowHandle->String->String->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_simple_message : lumen.window.WindowHandle->String->String->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_set_position": {
          "meta": {},
          "name": "lumen_window_set_position",
          "type": "lumen.window.WindowHandle->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_set_position : lumen.window.WindowHandle->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_desktop_get_display_count": {
          "meta": {},
          "name": "lumen_desktop_get_display_count",
          "type": "Int",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_desktop_get_display_count : Int",
          "isstatic": true,
          "isinline": false
        },
        "lumen_desktop_get_display_current_mode": {
          "meta": {},
          "name": "lumen_desktop_get_display_current_mode",
          "type": "Int->lumen.window.DisplayMode",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_desktop_get_display_current_mode : Int->lumen.window.DisplayMode",
          "isstatic": true,
          "isinline": false
        },
        "lumen_desktop_get_display_bounds": {
          "meta": {},
          "name": "lumen_desktop_get_display_bounds",
          "type": "Int->lumen.window.DisplayBounds",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_desktop_get_display_bounds : Int->lumen.window.DisplayBounds",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_create": {
          "meta": {},
          "name": "lumen_window_create",
          "type": "lumen.types.WindowConfig->Dynamic->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_create : lumen.types.WindowConfig->Dynamic->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_bordered": {
          "meta": {},
          "name": "lumen_window_bordered",
          "type": "lumen.window.WindowHandle->Bool->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_bordered : lumen.window.WindowHandle->Bool->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_render": {
          "meta": {},
          "name": "lumen_window_render",
          "type": "lumen.window.WindowHandle->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_render : lumen.window.WindowHandle->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_set_min_size": {
          "meta": {},
          "name": "lumen_window_set_min_size",
          "type": "lumen.window.WindowHandle->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_set_min_size : lumen.window.WindowHandle->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_update": {
          "meta": {},
          "name": "lumen_window_update",
          "type": "lumen.window.WindowHandle->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_update : lumen.window.WindowHandle->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_close": {
          "meta": {},
          "name": "lumen_window_close",
          "type": "lumen.window.WindowHandle->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_close : lumen.window.WindowHandle->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_fullscreen": {
          "meta": {},
          "name": "lumen_window_fullscreen",
          "type": "lumen.window.WindowHandle->Bool->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_fullscreen : lumen.window.WindowHandle->Bool->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_set_size": {
          "meta": {},
          "name": "lumen_window_set_size",
          "type": "lumen.window.WindowHandle->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_set_size : lumen.window.WindowHandle->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_set_title": {
          "meta": {},
          "name": "lumen_window_set_title",
          "type": "lumen.window.WindowHandle->String->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_set_title : lumen.window.WindowHandle->String->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_set_max_size": {
          "meta": {},
          "name": "lumen_window_set_max_size",
          "type": "lumen.window.WindowHandle->Int->Int->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_set_max_size : lumen.window.WindowHandle->Int->Int->Dynamic",
          "isstatic": true,
          "isinline": false
        },
        "lumen_window_grab": {
          "meta": {},
          "name": "lumen_window_grab",
          "type": "lumen.window.WindowHandle->Bool->Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "lumen_window_grab : lumen.window.WindowHandle->Bool->Dynamic",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_set_size": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "w",
              "type": "Int",
              "value": null
            },
            {
              "name": "h",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_size",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_set_size(handle:lumen.window.WindowHandle, w:Int, h:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_native_mode": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_native_mode",
          "returntype": ": lumen.window.DisplayMode",
          "doc": "",
          "ispublic": true,
          "signature": "display_native_mode(display:Int) : lumen.window.DisplayMode",
          "isstatic": false,
          "isinline": false
        },
        "window_set_max_size": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "w",
              "type": "Int",
              "value": null
            },
            {
              "name": "h",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_max_size",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_set_max_size(handle:lumen.window.WindowHandle, w:Int, h:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_count": {
          "args": [],
          "meta": {},
          "name": "display_count",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "display_count() : Int",
          "isstatic": false,
          "isinline": false
        },
        "window_grab": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "grabbed",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_grab",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_grab(handle:lumen.window.WindowHandle, grabbed:Bool) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_close": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_close",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_close(handle:lumen.window.WindowHandle) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_create": {
          "args": [
            {
              "name": "config",
              "type": "lumen.types.WindowConfig",
              "value": null
            },
            {
              "name": "on_created",
              "type": "lumen.window.WindowHandle->Int->lumen.types.WindowConfig->Void",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_create",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_create(config:lumen.types.WindowConfig, on_created:lumen.window.WindowHandle->Int->lumen.types.WindowConfig->Void) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_swap": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_swap",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_swap(handle:lumen.window.WindowHandle) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_mode_count": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_mode_count",
          "returntype": ": Int",
          "doc": "",
          "ispublic": true,
          "signature": "display_mode_count(display:Int) : Int",
          "isstatic": false,
          "isinline": false
        },
        "window_render": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_render",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_render(handle:lumen.window.WindowHandle) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_update": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_update(handle:lumen.window.WindowHandle) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_mode": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            },
            {
              "name": "mode_index",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_mode",
          "returntype": ": lumen.window.DisplayMode",
          "doc": "",
          "ispublic": true,
          "signature": "display_mode(display:Int, mode_index:Int) : lumen.window.DisplayMode",
          "isstatic": false,
          "isinline": false
        },
        "display_name": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_name",
          "returntype": ": String",
          "doc": "",
          "ispublic": true,
          "signature": "display_name(display:Int) : String",
          "isstatic": false,
          "isinline": false
        },
        "display_bounds": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_bounds",
          "returntype": ": lumen.window.DisplayBounds",
          "doc": "",
          "ispublic": true,
          "signature": "display_bounds(display:Int) : lumen.window.DisplayBounds",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.window.Windowing",
              "value": null
            },
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.window.Windowing, _lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "window_set_position": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_position",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_set_position(handle:lumen.window.WindowHandle, x:Int, y:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {},
          "name": "update",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_set_title": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "title",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_title",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_set_title(handle:lumen.window.WindowHandle, title:String) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_set_min_size": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "w",
              "type": "Int",
              "value": null
            },
            {
              "name": "h",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_min_size",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_set_min_size(handle:lumen.window.WindowHandle, w:Int, h:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_bordered": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "bordered",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_bordered",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_bordered(handle:lumen.window.WindowHandle, bordered:Bool) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_current_mode": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_current_mode",
          "returntype": ": lumen.window.DisplayMode",
          "doc": "",
          "ispublic": true,
          "signature": "display_current_mode(display:Int) : lumen.window.DisplayMode",
          "isstatic": false,
          "isinline": false
        },
        "window_simple_message": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": ""
            },
            {
              "name": "message",
              "type": "String",
              "value": ""
            },
            {
              "name": "?title",
              "type": "String",
              "value": "''"
            }
          ],
          "meta": {},
          "name": "window_simple_message",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_simple_message(handle:lumen.window.WindowHandle, message:String, ?title:String='') : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_fullscreen": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": ""
            },
            {
              "name": "fullscreen",
              "type": "Bool",
              "value": ""
            },
            {
              "name": "?fullscreen_desktop_mode",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "window_fullscreen",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "window_fullscreen(handle:lumen.window.WindowHandle, fullscreen:Bool, ?fullscreen_desktop_mode:Int=1) : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.utils.Int32Array": {
      "extend": [
        "lumen.platform.native.utils.ArrayBufferView"
      ],
      "meta": {},
      "name": "lumen.platform.native.utils.Int32Array",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "new": {
          "args": [
            {
              "name": "bufferOrArray",
              "type": "Dynamic",
              "value": ""
            },
            {
              "name": "?start",
              "type": "Int",
              "value": "0"
            },
            {
              "name": "?length",
              "type": "Int",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(bufferOrArray:Dynamic, ?start:Int=0, ?length:Int) ",
          "isstatic": false,
          "isinline": false
        },
        "set": {
          "args": [
            {
              "name": "bufferOrArray",
              "type": "Dynamic",
              "value": ""
            },
            {
              "name": "?offset",
              "type": "Int",
              "value": "0"
            }
          ],
          "meta": {},
          "name": "set",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "set(bufferOrArray:Dynamic, ?offset:Int=0) : Void",
          "isstatic": false,
          "isinline": false
        },
        "subarray": {
          "args": [
            {
              "name": "start",
              "type": "Int",
              "value": ""
            },
            {
              "name": "?end",
              "type": "Int",
              "value": "null"
            }
          ],
          "meta": {},
          "name": "subarray",
          "returntype": ": lumen.platform.native.utils.Int32Array",
          "doc": "",
          "ispublic": true,
          "signature": "subarray(start:Int, ?end:Int) : lumen.platform.native.utils.Int32Array",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.input.Keycodes": {
      "extend": [],
      "meta": {},
      "name": "lumen.input.Keycodes",
      "properties": {},
      "doc": "The keycode class, with conversion helpers for scancodes. The values below come directly from SDL header include files,\\nbut they aren't specific to SDL so they are used generically",
      "ispublic": true,
      "members": {
        "KP_MINUS": {
          "meta": {},
          "name": "KP_MINUS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MINUS : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_STOP": {
          "meta": {},
          "name": "AC_STOP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_STOP : Int",
          "isstatic": true,
          "isinline": false
        },
        "RSHIFT": {
          "meta": {},
          "name": "RSHIFT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RSHIFT : Int",
          "isstatic": true,
          "isinline": false
        },
        "BACKSLASH": {
          "meta": {},
          "name": "BACKSLASH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BACKSLASH : Int",
          "isstatic": true,
          "isinline": false
        },
        "POWER": {
          "meta": {},
          "name": "POWER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "POWER : Int",
          "isstatic": true,
          "isinline": false
        },
        "UNDERSCORE": {
          "meta": {},
          "name": "UNDERSCORE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "UNDERSCORE : Int",
          "isstatic": true,
          "isinline": false
        },
        "BACKSPACE": {
          "meta": {},
          "name": "BACKSPACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BACKSPACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "CLEAR": {
          "meta": {},
          "name": "CLEAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CLEAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "PRIOR": {
          "meta": {},
          "name": "PRIOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PRIOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "AMPERSAND": {
          "meta": {},
          "name": "AMPERSAND",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AMPERSAND : Int",
          "isstatic": true,
          "isinline": false
        },
        "COLON": {
          "meta": {},
          "name": "COLON",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "COLON : Int",
          "isstatic": true,
          "isinline": false
        },
        "COMMA": {
          "meta": {},
          "name": "COMMA",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "COMMA : Int",
          "isstatic": true,
          "isinline": false
        },
        "SEMICOLON": {
          "meta": {},
          "name": "SEMICOLON",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SEMICOLON : Int",
          "isstatic": true,
          "isinline": false
        },
        "CRSEL": {
          "meta": {},
          "name": "CRSEL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CRSEL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_000": {
          "meta": {},
          "name": "KP_000",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_000 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_TAB": {
          "meta": {},
          "name": "KP_TAB",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_TAB : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_XOR": {
          "meta": {},
          "name": "KP_XOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_XOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "EXECUTE": {
          "meta": {},
          "name": "EXECUTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EXECUTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_PLUSMINUS": {
          "meta": {},
          "name": "KP_PLUSMINUS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_PLUSMINUS : Int",
          "isstatic": true,
          "isinline": false
        },
        "INSERT": {
          "meta": {},
          "name": "INSERT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "INSERT : Int",
          "isstatic": true,
          "isinline": false
        },
        "CLEARAGAIN": {
          "meta": {},
          "name": "CLEARAGAIN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CLEARAGAIN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMADD": {
          "meta": {},
          "name": "KP_MEMADD",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMADD : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMSTORE": {
          "meta": {},
          "name": "KP_MEMSTORE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMSTORE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_DBLVERTICALBAR": {
          "meta": {},
          "name": "KP_DBLVERTICALBAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_DBLVERTICALBAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "RIGHTBRACKET": {
          "meta": {},
          "name": "RIGHTBRACKET",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RIGHTBRACKET : Int",
          "isstatic": true,
          "isinline": false
        },
        "QUOTE": {
          "meta": {},
          "name": "QUOTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "QUOTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_0": {
          "meta": {},
          "name": "KEY_0",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_0 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_1": {
          "meta": {},
          "name": "KEY_1",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_1 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_2": {
          "meta": {},
          "name": "KEY_2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_3": {
          "meta": {},
          "name": "KEY_3",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_3 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_4": {
          "meta": {},
          "name": "KEY_4",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_4 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_5": {
          "meta": {},
          "name": "KEY_5",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_5 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_6": {
          "meta": {},
          "name": "KEY_6",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_6 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_7": {
          "meta": {},
          "name": "KEY_7",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_7 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_8": {
          "meta": {},
          "name": "KEY_8",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_9": {
          "meta": {},
          "name": "KEY_9",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_9 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_a": {
          "meta": {},
          "name": "KEY_a",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_a : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_b": {
          "meta": {},
          "name": "KEY_b",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_b : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_c": {
          "meta": {},
          "name": "KEY_c",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_c : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_d": {
          "meta": {},
          "name": "KEY_d",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_d : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_e": {
          "meta": {},
          "name": "KEY_e",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_e : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_f": {
          "meta": {},
          "name": "KEY_f",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_f : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_g": {
          "meta": {},
          "name": "KEY_g",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_g : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_h": {
          "meta": {},
          "name": "KEY_h",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_h : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_i": {
          "meta": {},
          "name": "KEY_i",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_i : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_j": {
          "meta": {},
          "name": "KEY_j",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_j : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_k": {
          "meta": {},
          "name": "KEY_k",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_k : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_l": {
          "meta": {},
          "name": "KEY_l",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_l : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_m": {
          "meta": {},
          "name": "KEY_m",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_m : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_n": {
          "meta": {},
          "name": "KEY_n",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_n : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_o": {
          "meta": {},
          "name": "KEY_o",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_o : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_p": {
          "meta": {},
          "name": "KEY_p",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_p : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_q": {
          "meta": {},
          "name": "KEY_q",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_q : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_r": {
          "meta": {},
          "name": "KEY_r",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_r : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_s": {
          "meta": {},
          "name": "KEY_s",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_s : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_t": {
          "meta": {},
          "name": "KEY_t",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_t : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_u": {
          "meta": {},
          "name": "KEY_u",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_u : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_v": {
          "meta": {},
          "name": "KEY_v",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_v : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_w": {
          "meta": {},
          "name": "KEY_w",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_w : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_x": {
          "meta": {},
          "name": "KEY_x",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_x : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_y": {
          "meta": {},
          "name": "KEY_y",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_y : Int",
          "isstatic": true,
          "isinline": false
        },
        "KEY_z": {
          "meta": {},
          "name": "KEY_z",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KEY_z : Int",
          "isstatic": true,
          "isinline": false
        },
        "LSHIFT": {
          "meta": {},
          "name": "LSHIFT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LSHIFT : Int",
          "isstatic": true,
          "isinline": false
        },
        "COMPUTER": {
          "meta": {},
          "name": "COMPUTER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "COMPUTER : Int",
          "isstatic": true,
          "isinline": false
        },
        "DOLLAR": {
          "meta": {},
          "name": "DOLLAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DOLLAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "UNKNOWN": {
          "meta": {},
          "name": "UNKNOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "UNKNOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_DECIMAL": {
          "meta": {},
          "name": "KP_DECIMAL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_DECIMAL : Int",
          "isstatic": true,
          "isinline": false
        },
        "RCTRL": {
          "meta": {},
          "name": "RCTRL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RCTRL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_00": {
          "meta": {},
          "name": "KP_00",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_00 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_AT": {
          "meta": {},
          "name": "KP_AT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_AT : Int",
          "isstatic": true,
          "isinline": false
        },
        "ALTERASE": {
          "meta": {},
          "name": "ALTERASE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ALTERASE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_OCTAL": {
          "meta": {},
          "name": "KP_OCTAL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_OCTAL : Int",
          "isstatic": true,
          "isinline": false
        },
        "RIGHT": {
          "meta": {},
          "name": "RIGHT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RIGHT : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_RIGHTBRACE": {
          "meta": {},
          "name": "KP_RIGHTBRACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_RIGHTBRACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "THOUSANDSSEPARATOR": {
          "meta": {},
          "name": "THOUSANDSSEPARATOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "THOUSANDSSEPARATOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "RMETA": {
          "meta": {},
          "name": "RMETA",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RMETA : Int",
          "isstatic": true,
          "isinline": false
        },
        "CANCEL": {
          "meta": {},
          "name": "CANCEL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CANCEL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_DBLAMPERSAND": {
          "meta": {},
          "name": "KP_DBLAMPERSAND",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_DBLAMPERSAND : Int",
          "isstatic": true,
          "isinline": false
        },
        "EJECT": {
          "meta": {},
          "name": "EJECT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EJECT : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_RIGHTPAREN": {
          "meta": {},
          "name": "KP_RIGHTPAREN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_RIGHTPAREN : Int",
          "isstatic": true,
          "isinline": false
        },
        "BRIGHTNESSUP": {
          "meta": {},
          "name": "BRIGHTNESSUP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BRIGHTNESSUP : Int",
          "isstatic": true,
          "isinline": false
        },
        "PERIOD": {
          "meta": {},
          "name": "PERIOD",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PERIOD : Int",
          "isstatic": true,
          "isinline": false
        },
        "LCTRL": {
          "meta": {},
          "name": "LCTRL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LCTRL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_CLEARENTRY": {
          "meta": {},
          "name": "KP_CLEARENTRY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_CLEARENTRY : Int",
          "isstatic": true,
          "isinline": false
        },
        "EQUALS": {
          "meta": {},
          "name": "EQUALS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EQUALS : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_PERCENT": {
          "meta": {},
          "name": "KP_PERCENT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_PERCENT : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMRECALL": {
          "meta": {},
          "name": "KP_MEMRECALL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMRECALL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_VERTICALBAR": {
          "meta": {},
          "name": "KP_VERTICALBAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_VERTICALBAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "EXSEL": {
          "meta": {},
          "name": "EXSEL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EXSEL : Int",
          "isstatic": true,
          "isinline": false
        },
        "LMETA": {
          "meta": {},
          "name": "LMETA",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LMETA : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIOMUTE": {
          "meta": {},
          "name": "AUDIOMUTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIOMUTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "PERCENT": {
          "meta": {},
          "name": "PERCENT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PERCENT : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIONEXT": {
          "meta": {},
          "name": "AUDIONEXT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIONEXT : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIOPLAY": {
          "meta": {},
          "name": "AUDIOPLAY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIOPLAY : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIOPREV": {
          "meta": {},
          "name": "AUDIOPREV",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIOPREV : Int",
          "isstatic": true,
          "isinline": false
        },
        "AUDIOSTOP": {
          "meta": {},
          "name": "AUDIOSTOP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AUDIOSTOP : Int",
          "isstatic": true,
          "isinline": false
        },
        "SLASH": {
          "meta": {},
          "name": "SLASH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SLASH : Int",
          "isstatic": true,
          "isinline": false
        },
        "SLEEP": {
          "meta": {},
          "name": "SLEEP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SLEEP : Int",
          "isstatic": true,
          "isinline": false
        },
        "RETURN2": {
          "meta": {},
          "name": "RETURN2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RETURN2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "CURRENCYUNIT": {
          "meta": {},
          "name": "CURRENCYUNIT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CURRENCYUNIT : Int",
          "isstatic": true,
          "isinline": false
        },
        "SPACE": {
          "meta": {},
          "name": "SPACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SPACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "AT": {
          "meta": {},
          "name": "AT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AT : Int",
          "isstatic": true,
          "isinline": false
        },
        "F1": {
          "meta": {},
          "name": "F1",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F1 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F2": {
          "meta": {},
          "name": "F2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F3": {
          "meta": {},
          "name": "F3",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F3 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F4": {
          "meta": {},
          "name": "F4",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F4 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F5": {
          "meta": {},
          "name": "F5",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F5 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F6": {
          "meta": {},
          "name": "F6",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F6 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F7": {
          "meta": {},
          "name": "F7",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F7 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F8": {
          "meta": {},
          "name": "F8",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F9": {
          "meta": {},
          "name": "F9",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F9 : Int",
          "isstatic": true,
          "isinline": false
        },
        "UP": {
          "meta": {},
          "name": "UP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "UP : Int",
          "isstatic": true,
          "isinline": false
        },
        "CUT": {
          "meta": {},
          "name": "CUT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CUT : Int",
          "isstatic": true,
          "isinline": false
        },
        "END": {
          "meta": {},
          "name": "END",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "END : Int",
          "isstatic": true,
          "isinline": false
        },
        "F10": {
          "meta": {},
          "name": "F10",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F10 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F11": {
          "meta": {},
          "name": "F11",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F11 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F12": {
          "meta": {},
          "name": "F12",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F12 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F13": {
          "meta": {},
          "name": "F13",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F13 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F14": {
          "meta": {},
          "name": "F14",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F14 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F15": {
          "meta": {},
          "name": "F15",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F15 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F16": {
          "meta": {},
          "name": "F16",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F16 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F17": {
          "meta": {},
          "name": "F17",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F17 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F18": {
          "meta": {},
          "name": "F18",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F18 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F19": {
          "meta": {},
          "name": "F19",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F19 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F20": {
          "meta": {},
          "name": "F20",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F20 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F21": {
          "meta": {},
          "name": "F21",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F21 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F22": {
          "meta": {},
          "name": "F22",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F22 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F23": {
          "meta": {},
          "name": "F23",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F23 : Int",
          "isstatic": true,
          "isinline": false
        },
        "F24": {
          "meta": {},
          "name": "F24",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "F24 : Int",
          "isstatic": true,
          "isinline": false
        },
        "QUESTION": {
          "meta": {},
          "name": "QUESTION",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "QUESTION : Int",
          "isstatic": true,
          "isinline": false
        },
        "OUT": {
          "meta": {},
          "name": "OUT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "OUT : Int",
          "isstatic": true,
          "isinline": false
        },
        "TAB": {
          "meta": {},
          "name": "TAB",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "TAB : Int",
          "isstatic": true,
          "isinline": false
        },
        "WWW": {
          "meta": {},
          "name": "WWW",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "WWW : Int",
          "isstatic": true,
          "isinline": false
        },
        "CAPSLOCK": {
          "meta": {},
          "name": "CAPSLOCK",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CAPSLOCK : Int",
          "isstatic": true,
          "isinline": false
        },
        "APPLICATION": {
          "meta": {},
          "name": "APPLICATION",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "APPLICATION : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_POWER": {
          "meta": {},
          "name": "KP_POWER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_POWER : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_CLEAR": {
          "meta": {},
          "name": "KP_CLEAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_CLEAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_COLON": {
          "meta": {},
          "name": "KP_COLON",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_COLON : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_COMMA": {
          "meta": {},
          "name": "KP_COMMA",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_COMMA : Int",
          "isstatic": true,
          "isinline": false
        },
        "MINUS": {
          "meta": {},
          "name": "MINUS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MINUS : Int",
          "isstatic": true,
          "isinline": false
        },
        "ASTERISK": {
          "meta": {},
          "name": "ASTERISK",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ASTERISK : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_PERIOD": {
          "meta": {},
          "name": "KP_PERIOD",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_PERIOD : Int",
          "isstatic": true,
          "isinline": false
        },
        "QUOTEDBL": {
          "meta": {},
          "name": "QUOTEDBL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "QUOTEDBL : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_EXCLAM": {
          "meta": {},
          "name": "KP_EXCLAM",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_EXCLAM : Int",
          "isstatic": true,
          "isinline": false
        },
        "KBDILLUMDOWN": {
          "meta": {},
          "name": "KBDILLUMDOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KBDILLUMDOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_EQUALSAS400": {
          "meta": {},
          "name": "KP_EQUALSAS400",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_EQUALSAS400 : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_SEARCH": {
          "meta": {},
          "name": "AC_SEARCH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_SEARCH : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_DIVIDE": {
          "meta": {},
          "name": "KP_DIVIDE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_DIVIDE : Int",
          "isstatic": true,
          "isinline": false
        },
        "SCROLLLOCK": {
          "meta": {},
          "name": "SCROLLLOCK",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SCROLLLOCK : Int",
          "isstatic": true,
          "isinline": false
        },
        "ESCAPE": {
          "meta": {},
          "name": "ESCAPE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "ESCAPE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_EQUALS": {
          "meta": {},
          "name": "KP_EQUALS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_EQUALS : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_HASH": {
          "meta": {},
          "name": "KP_HASH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_HASH : Int",
          "isstatic": true,
          "isinline": false
        },
        "PRINTSCREEN": {
          "meta": {},
          "name": "PRINTSCREEN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PRINTSCREEN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_LESS": {
          "meta": {},
          "name": "KP_LESS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_LESS : Int",
          "isstatic": true,
          "isinline": false
        },
        "VOLUMEUP": {
          "meta": {},
          "name": "VOLUMEUP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "VOLUMEUP : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_PLUS": {
          "meta": {},
          "name": "KP_PLUS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_PLUS : Int",
          "isstatic": true,
          "isinline": false
        },
        "NUMLOCKCLEAR": {
          "meta": {},
          "name": "NUMLOCKCLEAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "NUMLOCKCLEAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MULTIPLY": {
          "meta": {},
          "name": "KP_MULTIPLY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MULTIPLY : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMSUBTRACT": {
          "meta": {},
          "name": "KP_MEMSUBTRACT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMSUBTRACT : Int",
          "isstatic": true,
          "isinline": false
        },
        "PAGEUP": {
          "meta": {},
          "name": "PAGEUP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PAGEUP : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMCLEAR": {
          "meta": {},
          "name": "KP_MEMCLEAR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMCLEAR : Int",
          "isstatic": true,
          "isinline": false
        },
        "MEDIASELECT": {
          "meta": {},
          "name": "MEDIASELECT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MEDIASELECT : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_LEFTBRACE": {
          "meta": {},
          "name": "KP_LEFTBRACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_LEFTBRACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "BRIGHTNESSDOWN": {
          "meta": {},
          "name": "BRIGHTNESSDOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BRIGHTNESSDOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "AGAIN": {
          "meta": {},
          "name": "AGAIN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AGAIN : Int",
          "isstatic": true,
          "isinline": false
        },
        "SELECT": {
          "meta": {},
          "name": "SELECT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SELECT : Int",
          "isstatic": true,
          "isinline": false
        },
        "DELETE": {
          "meta": {},
          "name": "DELETE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DELETE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_LEFTPAREN": {
          "meta": {},
          "name": "KP_LEFTPAREN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_LEFTPAREN : Int",
          "isstatic": true,
          "isinline": false
        },
        "RIGHTPAREN": {
          "meta": {},
          "name": "RIGHTPAREN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RIGHTPAREN : Int",
          "isstatic": true,
          "isinline": false
        },
        "BACKQUOTE": {
          "meta": {},
          "name": "BACKQUOTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "BACKQUOTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KBDILLUMUP": {
          "meta": {},
          "name": "KBDILLUMUP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KBDILLUMUP : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_BOOKMARKS": {
          "meta": {},
          "name": "AC_BOOKMARKS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_BOOKMARKS : Int",
          "isstatic": true,
          "isinline": false
        },
        "CURRENCYSUBUNIT": {
          "meta": {},
          "name": "CURRENCYSUBUNIT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CURRENCYSUBUNIT : Int",
          "isstatic": true,
          "isinline": false
        },
        "LEFTBRACKET": {
          "meta": {},
          "name": "LEFTBRACKET",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LEFTBRACKET : Int",
          "isstatic": true,
          "isinline": false
        },
        "SYSREQ": {
          "meta": {},
          "name": "SYSREQ",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SYSREQ : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_FORWARD": {
          "meta": {},
          "name": "AC_FORWARD",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_FORWARD : Int",
          "isstatic": true,
          "isinline": false
        },
        "DECIMALSEPARATOR": {
          "meta": {},
          "name": "DECIMALSEPARATOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DECIMALSEPARATOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "CALCULATOR": {
          "meta": {},
          "name": "CALCULATOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CALCULATOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_BACKSPACE": {
          "meta": {},
          "name": "KP_BACKSPACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_BACKSPACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_ENTER": {
          "meta": {},
          "name": "KP_ENTER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_ENTER : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_AMPERSAND": {
          "meta": {},
          "name": "KP_AMPERSAND",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_AMPERSAND : Int",
          "isstatic": true,
          "isinline": false
        },
        "EXCLAIM": {
          "meta": {},
          "name": "EXCLAIM",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "EXCLAIM : Int",
          "isstatic": true,
          "isinline": false
        },
        "VOLUMEDOWN": {
          "meta": {},
          "name": "VOLUMEDOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "VOLUMEDOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "COPY": {
          "meta": {},
          "name": "COPY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "COPY : Int",
          "isstatic": true,
          "isinline": false
        },
        "SEPARATOR": {
          "meta": {},
          "name": "SEPARATOR",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "SEPARATOR : Int",
          "isstatic": true,
          "isinline": false
        },
        "DOWN": {
          "meta": {},
          "name": "DOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "FIND": {
          "meta": {},
          "name": "FIND",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "FIND : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_REFRESH": {
          "meta": {},
          "name": "AC_REFRESH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_REFRESH : Int",
          "isstatic": true,
          "isinline": false
        },
        "HASH": {
          "meta": {},
          "name": "HASH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "HASH : Int",
          "isstatic": true,
          "isinline": false
        },
        "HELP": {
          "meta": {},
          "name": "HELP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "HELP : Int",
          "isstatic": true,
          "isinline": false
        },
        "HOME": {
          "meta": {},
          "name": "HOME",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "HOME : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_0": {
          "meta": {},
          "name": "KP_0",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_0 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_1": {
          "meta": {},
          "name": "KP_1",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_1 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_2": {
          "meta": {},
          "name": "KP_2",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_2 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_3": {
          "meta": {},
          "name": "KP_3",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_3 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_4": {
          "meta": {},
          "name": "KP_4",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_4 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_5": {
          "meta": {},
          "name": "KP_5",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_5 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_6": {
          "meta": {},
          "name": "KP_6",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_6 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_7": {
          "meta": {},
          "name": "KP_7",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_7 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_8": {
          "meta": {},
          "name": "KP_8",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_8 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_9": {
          "meta": {},
          "name": "KP_9",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_9 : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_A": {
          "meta": {},
          "name": "KP_A",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_A : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_B": {
          "meta": {},
          "name": "KP_B",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_B : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_C": {
          "meta": {},
          "name": "KP_C",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_C : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_D": {
          "meta": {},
          "name": "KP_D",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_D : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_E": {
          "meta": {},
          "name": "KP_E",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_E : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_F": {
          "meta": {},
          "name": "KP_F",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_F : Int",
          "isstatic": true,
          "isinline": false
        },
        "KBDILLUMTOGGLE": {
          "meta": {},
          "name": "KBDILLUMTOGGLE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KBDILLUMTOGGLE : Int",
          "isstatic": true,
          "isinline": false
        },
        "LALT": {
          "meta": {},
          "name": "LALT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LALT : Int",
          "isstatic": true,
          "isinline": false
        },
        "LEFT": {
          "meta": {},
          "name": "LEFT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LEFT : Int",
          "isstatic": true,
          "isinline": false
        },
        "LESS": {
          "meta": {},
          "name": "LESS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LESS : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_GREATER": {
          "meta": {},
          "name": "KP_GREATER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_GREATER : Int",
          "isstatic": true,
          "isinline": false
        },
        "MAIL": {
          "meta": {},
          "name": "MAIL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MAIL : Int",
          "isstatic": true,
          "isinline": false
        },
        "MENU": {
          "meta": {},
          "name": "MENU",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MENU : Int",
          "isstatic": true,
          "isinline": false
        },
        "MODE": {
          "meta": {},
          "name": "MODE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MODE : Int",
          "isstatic": true,
          "isinline": false
        },
        "MUTE": {
          "meta": {},
          "name": "MUTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "MUTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "OPER": {
          "meta": {},
          "name": "OPER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "OPER : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMDIVIDE": {
          "meta": {},
          "name": "KP_MEMDIVIDE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMDIVIDE : Int",
          "isstatic": true,
          "isinline": false
        },
        "PLUS": {
          "meta": {},
          "name": "PLUS",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PLUS : Int",
          "isstatic": true,
          "isinline": false
        },
        "RALT": {
          "meta": {},
          "name": "RALT",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RALT : Int",
          "isstatic": true,
          "isinline": false
        },
        "STOP": {
          "meta": {},
          "name": "STOP",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "STOP : Int",
          "isstatic": true,
          "isinline": false
        },
        "GREATER": {
          "meta": {},
          "name": "GREATER",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "GREATER : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_BACK": {
          "meta": {},
          "name": "AC_BACK",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_BACK : Int",
          "isstatic": true,
          "isinline": false
        },
        "UNDO": {
          "meta": {},
          "name": "UNDO",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "UNDO : Int",
          "isstatic": true,
          "isinline": false
        },
        "DISPLAYSWITCH": {
          "meta": {},
          "name": "DISPLAYSWITCH",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "DISPLAYSWITCH : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_MEMMULTIPLY": {
          "meta": {},
          "name": "KP_MEMMULTIPLY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_MEMMULTIPLY : Int",
          "isstatic": true,
          "isinline": false
        },
        "PAGEDOWN": {
          "meta": {},
          "name": "PAGEDOWN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PAGEDOWN : Int",
          "isstatic": true,
          "isinline": false
        },
        "LEFTPAREN": {
          "meta": {},
          "name": "LEFTPAREN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "LEFTPAREN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_BINARY": {
          "meta": {},
          "name": "KP_BINARY",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_BINARY : Int",
          "isstatic": true,
          "isinline": false
        },
        "PASTE": {
          "meta": {},
          "name": "PASTE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PASTE : Int",
          "isstatic": true,
          "isinline": false
        },
        "PAUSE": {
          "meta": {},
          "name": "PAUSE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "PAUSE : Int",
          "isstatic": true,
          "isinline": false
        },
        "RETURN": {
          "meta": {},
          "name": "RETURN",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "RETURN : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_SPACE": {
          "meta": {},
          "name": "KP_SPACE",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_SPACE : Int",
          "isstatic": true,
          "isinline": false
        },
        "AC_HOME": {
          "meta": {},
          "name": "AC_HOME",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "AC_HOME : Int",
          "isstatic": true,
          "isinline": false
        },
        "KP_HEXADECIMAL": {
          "meta": {},
          "name": "KP_HEXADECIMAL",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "KP_HEXADECIMAL : Int",
          "isstatic": true,
          "isinline": false
        },
        "CARET": {
          "meta": {},
          "name": "CARET",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "CARET : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "from_scan": {
          "args": [
            {
              "name": "scancode",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "from_scan",
          "returntype": ": Int",
          "doc": "Convert a scancode to a keycode for comparison",
          "ispublic": true,
          "signature": "from_scan(scancode:Int) : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.CoreBinding": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.CoreBinding",
      "properties": {},
      "doc": "Implemented in the platform specific concrete versions of this class. \\n\\nThis uses a macro to allow this class to pretend to be abstract, and complain via compiler errors if the specific functions are missing.",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "app": {
          "meta": {},
          "name": "app",
          "type": "lumen.Lumen",
          "doc": "",
          "ispublic": false,
          "signature": "app : lumen.Lumen",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [
            {
              "name": "_event_handler",
              "type": "lumen.types.SystemEvent->Void",
              "value": null
            }
          ],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "Called by the lumen internals to intiialize the core and subsystems of the framework, with the event handler passed in for where to deliver system events",
          "ispublic": true,
          "signature": "init(_event_handler:lumen.types.SystemEvent->Void) : Void",
          "isstatic": false,
          "isinline": false
        },
        "shutdown": {
          "args": [],
          "meta": {},
          "name": "shutdown",
          "returntype": ": Void",
          "doc": "Called to explicitly shutdown the framework cleanly. Called by `quit` and `app_terminated` type events by the core, for example.",
          "ispublic": true,
          "signature": "shutdown() : Void",
          "isstatic": false,
          "isinline": false
        },
        "pref_path": {
          "args": [
            {
              "name": "_appname",
              "type": "String",
              "value": null
            },
            {
              "name": "_package",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "pref_path",
          "returntype": ": String",
          "doc": "On platforms where this makes sense, get the application specific writeable data path",
          "ispublic": true,
          "signature": "pref_path(_appname:String, _package:String) : String",
          "isstatic": false,
          "isinline": false
        },
        "app_path": {
          "args": [],
          "meta": {},
          "name": "app_path",
          "returntype": ": String",
          "doc": "Return the full path that the application is located",
          "ispublic": true,
          "signature": "app_path() : String",
          "isstatic": false,
          "isinline": false
        },
        "timestamp": {
          "args": [],
          "meta": {},
          "name": "timestamp",
          "returntype": ": Float",
          "doc": "Get the most precise timestamp available on the platform, in seconds (time is always in seconds in lumen)",
          "ispublic": true,
          "signature": "timestamp() : Float",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": [
        "lumen.utils.AbstractClass"
      ]
    },
    "lumen.utils.AbstractClassBuilder": {
      "extend": [],
      "meta": {},
      "name": "lumen.utils.AbstractClassBuilder",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {},
      "implement": []
    },
    "lumen.window.WindowSystemBinding": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.window.WindowSystemBinding",
      "properties": {},
      "doc": "Internal class handled by `Windowing`, a less concrete implementation of the platform window bindings. \\n    WindowBinding is bound to lumen.platform.native.WindowSystem, lumen.platform.native.WindowSystem etc",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "lib": {
          "meta": {},
          "name": "lib",
          "type": "lumen.Lumen",
          "doc": "",
          "ispublic": false,
          "signature": "lib : lumen.Lumen",
          "isstatic": false,
          "isinline": false
        },
        "manager": {
          "meta": {},
          "name": "manager",
          "type": "lumen.window.Windowing",
          "doc": "",
          "ispublic": false,
          "signature": "manager : lumen.window.Windowing",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "Called when the window manager initializes this system",
          "ispublic": true,
          "signature": "init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_set_size": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "w",
              "type": "Int",
              "value": null
            },
            {
              "name": "h",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_size",
          "returntype": ": Void",
          "doc": "Set the size of a window handle",
          "ispublic": true,
          "signature": "window_set_size(handle:lumen.window.WindowHandle, w:Int, h:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_native_mode": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_native_mode",
          "returntype": ": lumen.window.DisplayMode",
          "doc": "Get the native mode information of the display by index",
          "ispublic": true,
          "signature": "display_native_mode(display:Int) : lumen.window.DisplayMode",
          "isstatic": false,
          "isinline": false
        },
        "window_set_max_size": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "w",
              "type": "Int",
              "value": null
            },
            {
              "name": "h",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_max_size",
          "returntype": ": Void",
          "doc": "Set the max size of a window handle",
          "ispublic": true,
          "signature": "window_set_max_size(handle:lumen.window.WindowHandle, w:Int, h:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_count": {
          "args": [],
          "meta": {},
          "name": "display_count",
          "returntype": ": Int",
          "doc": "Get the number of displays present",
          "ispublic": true,
          "signature": "display_count() : Int",
          "isstatic": false,
          "isinline": false
        },
        "window_grab": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "grabbed",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_grab",
          "returntype": ": Void",
          "doc": "Set the grab state of a window handle",
          "ispublic": true,
          "signature": "window_grab(handle:lumen.window.WindowHandle, grabbed:Bool) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_close": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_close",
          "returntype": ": Void",
          "doc": "Close a given window handle",
          "ispublic": true,
          "signature": "window_close(handle:lumen.window.WindowHandle) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_create": {
          "args": [
            {
              "name": "config",
              "type": "lumen.types.WindowConfig",
              "value": null
            },
            {
              "name": "on_created",
              "type": "lumen.window.WindowHandle->Int->lumen.types.WindowConfig->Void",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_create",
          "returntype": ": Void",
          "doc": "Create a window with config, calls on_created when complete passing the handle, the ID, \\n            and the actual config that was used since the requested config could fail",
          "ispublic": true,
          "signature": "window_create(config:lumen.types.WindowConfig, on_created:lumen.window.WindowHandle->Int->lumen.types.WindowConfig->Void) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_swap": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_swap",
          "returntype": ": Void",
          "doc": "Swap a given window handle",
          "ispublic": true,
          "signature": "window_swap(handle:lumen.window.WindowHandle) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_mode_count": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_mode_count",
          "returntype": ": Int",
          "doc": "Get the number of display modes present",
          "ispublic": true,
          "signature": "display_mode_count(display:Int) : Int",
          "isstatic": false,
          "isinline": false
        },
        "window_render": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_render",
          "returntype": ": Void",
          "doc": "Render a given window handle",
          "ispublic": true,
          "signature": "window_render(handle:lumen.window.WindowHandle) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_update": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_update",
          "returntype": ": Void",
          "doc": "Update a given window handle",
          "ispublic": true,
          "signature": "window_update(handle:lumen.window.WindowHandle) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_mode": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            },
            {
              "name": "mode_index",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_mode",
          "returntype": ": lumen.window.DisplayMode",
          "doc": "Get the information from a specific mode index, the index obtrained from iterating with `display_mode_count` value",
          "ispublic": true,
          "signature": "display_mode(display:Int, mode_index:Int) : lumen.window.DisplayMode",
          "isstatic": false,
          "isinline": false
        },
        "display_name": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_name",
          "returntype": ": String",
          "doc": "Get the name of the display by index, where available",
          "ispublic": true,
          "signature": "display_name(display:Int) : String",
          "isstatic": false,
          "isinline": false
        },
        "display_bounds": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_bounds",
          "returntype": ": lumen.window.DisplayBounds",
          "doc": "Get the bounds of the display by index",
          "ispublic": true,
          "signature": "display_bounds(display:Int) : lumen.window.DisplayBounds",
          "isstatic": false,
          "isinline": false
        },
        "window_set_position": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "x",
              "type": "Int",
              "value": null
            },
            {
              "name": "y",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_position",
          "returntype": ": Void",
          "doc": "Set the position of a window handle",
          "ispublic": true,
          "signature": "window_set_position(handle:lumen.window.WindowHandle, x:Int, y:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "update": {
          "args": [],
          "meta": {},
          "name": "update",
          "returntype": ": Void",
          "doc": "Called when the window manager updates this system",
          "ispublic": true,
          "signature": "update() : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_set_title": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "title",
              "type": "String",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_title",
          "returntype": ": Void",
          "doc": "Set the title of a window handle",
          "ispublic": true,
          "signature": "window_set_title(handle:lumen.window.WindowHandle, title:String) : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_set_min_size": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "w",
              "type": "Int",
              "value": null
            },
            {
              "name": "h",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_set_min_size",
          "returntype": ": Void",
          "doc": "Set the min size of a window handle",
          "ispublic": true,
          "signature": "window_set_min_size(handle:lumen.window.WindowHandle, w:Int, h:Int) : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "Called when the window manager destroys this system",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_bordered": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": null
            },
            {
              "name": "bordered",
              "type": "Bool",
              "value": null
            }
          ],
          "meta": {},
          "name": "window_bordered",
          "returntype": ": Void",
          "doc": "Set the bordered state of a window handle",
          "ispublic": true,
          "signature": "window_bordered(handle:lumen.window.WindowHandle, bordered:Bool) : Void",
          "isstatic": false,
          "isinline": false
        },
        "display_current_mode": {
          "args": [
            {
              "name": "display",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "display_current_mode",
          "returntype": ": lumen.window.DisplayMode",
          "doc": "Get the current mode information of the display by index",
          "ispublic": true,
          "signature": "display_current_mode(display:Int) : lumen.window.DisplayMode",
          "isstatic": false,
          "isinline": false
        },
        "window_simple_message": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": ""
            },
            {
              "name": "message",
              "type": "String",
              "value": ""
            },
            {
              "name": "?title",
              "type": "String",
              "value": "''"
            }
          ],
          "meta": {},
          "name": "window_simple_message",
          "returntype": ": Void",
          "doc": "Display a message on a window handle",
          "ispublic": true,
          "signature": "window_simple_message(handle:lumen.window.WindowHandle, message:String, ?title:String='') : Void",
          "isstatic": false,
          "isinline": false
        },
        "window_fullscreen": {
          "args": [
            {
              "name": "handle",
              "type": "lumen.window.WindowHandle",
              "value": ""
            },
            {
              "name": "fullscreen",
              "type": "Bool",
              "value": ""
            },
            {
              "name": "?fullscreen_desktop_mode",
              "type": "Int",
              "value": "1"
            }
          ],
          "meta": {},
          "name": "window_fullscreen",
          "returntype": ": Void",
          "doc": "Set the fullscreen state of a window handle",
          "ispublic": true,
          "signature": "window_fullscreen(handle:lumen.window.WindowHandle, fullscreen:Bool, ?fullscreen_desktop_mode:Int=1) : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": [
        "lumen.utils.AbstractClass"
      ]
    },
    "lumen.platform.native.render.gl.GLBuffer": {
      "extend": [
        "lumen.render.gl.GLObject"
      ],
      "meta": {},
      "name": "lumen.platform.native.render.gl.GLBuffer",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {},
      "methods": {
        "new": {
          "args": [
            {
              "name": "version",
              "type": "Int",
              "value": null
            },
            {
              "name": "id",
              "type": "Dynamic",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(version:Int, id:Dynamic) ",
          "isstatic": false,
          "isinline": false
        },
        "getType": {
          "args": [],
          "meta": {},
          "name": "getType",
          "returntype": ": String",
          "doc": "",
          "ispublic": false,
          "signature": "getType() : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.audio.openal._AL.Device_Impl_": {
      "extend": [],
      "meta": {},
      "name": "lumen.platform.native.audio.openal._AL.Device_Impl_",
      "properties": {},
      "doc": "",
      "ispublic": false,
      "members": {},
      "methods": {},
      "implement": []
    },
    "lumen.types.SystemEvents": {
      "extend": [],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.types.SystemEvents",
      "properties": {},
      "doc": "",
      "ispublic": true,
      "members": {
        "se_app_willenterbackground": {
          "meta": {},
          "name": "se_app_willenterbackground",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_app_willenterbackground : Int",
          "isstatic": true,
          "isinline": false
        },
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "se_update": {
          "meta": {},
          "name": "se_update",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_update : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_input": {
          "meta": {},
          "name": "se_input",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_input : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_shutdown": {
          "meta": {},
          "name": "se_shutdown",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_shutdown : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_ready": {
          "meta": {},
          "name": "se_ready",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_ready : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_app_didenterforeground": {
          "meta": {},
          "name": "se_app_didenterforeground",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_app_didenterforeground : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_init": {
          "meta": {},
          "name": "se_init",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_init : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_quit": {
          "meta": {},
          "name": "se_quit",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_quit : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_app_lowmemory": {
          "meta": {},
          "name": "se_app_lowmemory",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_app_lowmemory : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_app_didenterbackground": {
          "meta": {},
          "name": "se_app_didenterbackground",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_app_didenterbackground : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_window": {
          "meta": {},
          "name": "se_window",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_window : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_app_terminating": {
          "meta": {},
          "name": "se_app_terminating",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_app_terminating : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_app_willenterforeground": {
          "meta": {},
          "name": "se_app_willenterforeground",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_app_willenterforeground : Int",
          "isstatic": true,
          "isinline": false
        },
        "se_unknown": {
          "meta": {},
          "name": "se_unknown",
          "type": "Int",
          "doc": "",
          "ispublic": true,
          "signature": "se_unknown : Int",
          "isstatic": true,
          "isinline": false
        }
      },
      "methods": {
        "typed": {
          "args": [
            {
              "name": "type",
              "type": "Int",
              "value": null
            }
          ],
          "meta": {},
          "name": "typed",
          "returntype": ": lumen.types.SystemEventType",
          "doc": "",
          "ispublic": true,
          "signature": "typed(type:Int) : lumen.types.SystemEventType",
          "isstatic": true,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.types.Asset": {
      "extend": [],
      "meta": {},
      "name": "lumen.types.Asset",
      "properties": {},
      "doc": "An asset base class. Get assets from the `Assets` class, via `app.assets`",
      "ispublic": true,
      "members": {
        "info": {
          "meta": {},
          "name": "info",
          "type": "lumen.types.AssetInfo",
          "doc": "The `AssetInfo` of this asset",
          "ispublic": true,
          "signature": "info : lumen.types.AssetInfo",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "id": {
          "meta": {},
          "name": "id",
          "type": "String",
          "doc": "The id of this asset like `assets/image.png`",
          "ispublic": true,
          "signature": "id : String",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "new": {
          "args": [
            {
              "name": "_info",
              "type": "lumen.types.AssetInfo",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_info:lumen.types.AssetInfo) ",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    },
    "lumen.platform.native.audio.openal.AudioSystem": {
      "extend": [
        "lumen.platform.native.audio.AudioSystem"
      ],
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.audio.openal.AudioSystem",
      "properties": {},
      "doc": "Internal audio system implementation for OpenAL, interact with this system through `lumen.Audio`, not directly",
      "ispublic": true,
      "members": {
        "meta": {
          "meta": {},
          "name": "meta",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "meta : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "haxe_doc": {
          "meta": {},
          "name": "haxe_doc",
          "type": "Dynamic",
          "doc": "",
          "ispublic": false,
          "signature": "haxe_doc : Dynamic",
          "isstatic": false,
          "isinline": false
        },
        "device": {
          "meta": {},
          "name": "device",
          "type": "lumen.audio.openal.Device",
          "doc": "",
          "ispublic": false,
          "signature": "device : lumen.audio.openal.Device",
          "isstatic": false,
          "isinline": false
        },
        "context": {
          "meta": {},
          "name": "context",
          "type": "lumen.audio.openal.Context",
          "doc": "",
          "ispublic": false,
          "signature": "context : lumen.audio.openal.Context",
          "isstatic": false,
          "isinline": false
        }
      },
      "methods": {
        "init": {
          "args": [],
          "meta": {},
          "name": "init",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "init() : Void",
          "isstatic": false,
          "isinline": false
        },
        "suspend": {
          "args": [],
          "meta": {},
          "name": "suspend",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "suspend() : Void",
          "isstatic": false,
          "isinline": false
        },
        "new": {
          "args": [
            {
              "name": "_manager",
              "type": "lumen.audio.Audio",
              "value": null
            },
            {
              "name": "_lib",
              "type": "lumen.Lumen",
              "value": null
            }
          ],
          "meta": {},
          "name": "new",
          "returntype": "",
          "doc": "",
          "ispublic": true,
          "signature": "new(_manager:lumen.audio.Audio, _lib:lumen.Lumen) ",
          "isstatic": false,
          "isinline": false
        },
        "resume": {
          "args": [],
          "meta": {},
          "name": "resume",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "resume() : Void",
          "isstatic": false,
          "isinline": false
        },
        "destroy": {
          "args": [],
          "meta": {},
          "name": "destroy",
          "returntype": ": Void",
          "doc": "",
          "ispublic": true,
          "signature": "destroy() : Void",
          "isstatic": false,
          "isinline": false
        }
      },
      "implement": []
    }
  },
  "enums": {
    "lumen.platform.native.input.sdl.ControllerEventType": {
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.sdl.ControllerEventType",
      "values": [
        {
          "name": "unknown",
          "doc": ""
        },
        {
          "name": "button_up",
          "doc": ""
        },
        {
          "name": "button_down",
          "doc": ""
        },
        {
          "name": "axis",
          "doc": ""
        },
        {
          "name": "added",
          "doc": ""
        },
        {
          "name": "removed",
          "doc": ""
        },
        {
          "name": "remapped",
          "doc": ""
        }
      ],
      "doc": "",
      "ispublic": true
    },
    "lumen.types.InputEventType": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.types.InputEventType",
      "values": [
        {
          "name": "unknown",
          "doc": "An unknown input event"
        },
        {
          "name": "key",
          "doc": "An keyboard input event"
        },
        {
          "name": "mouse",
          "doc": "An mouse input event"
        },
        {
          "name": "touch",
          "doc": "An touch input event"
        },
        {
          "name": "joystick",
          "doc": "An joystick input event. On mobile, accellerometer is a joystick (for now)"
        },
        {
          "name": "controller",
          "doc": "An controller input event. Use these instead of joystick on desktop."
        }
      ],
      "doc": "A typed input event",
      "ispublic": true
    },
    "lumen.input.MouseState": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.input.MouseState",
      "values": [
        {
          "name": "unknown",
          "doc": "An unknown state"
        },
        {
          "name": "down",
          "doc": "In a pressed state"
        },
        {
          "name": "up",
          "doc": "In a released state"
        },
        {
          "name": "move",
          "doc": "In a moving state"
        },
        {
          "name": "wheel",
          "doc": "A mouse wheel state"
        }
      ],
      "doc": "A typed mouse state",
      "ispublic": true
    },
    "lumen.input.PressedState": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.input.PressedState",
      "values": [
        {
          "name": "unknown",
          "doc": "An unknown state"
        },
        {
          "name": "down",
          "doc": "In a pressed state"
        },
        {
          "name": "up",
          "doc": "In a released state"
        }
      ],
      "doc": "A typed state for buttons or similar",
      "ispublic": true
    },
    "lumen.input.MouseButton": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.input.MouseButton",
      "values": [
        {
          "name": "none",
          "doc": "no mouse buttons"
        },
        {
          "name": "left",
          "doc": "left mouse button"
        },
        {
          "name": "middle",
          "doc": "middle mouse button"
        },
        {
          "name": "right",
          "doc": "right mouse button"
        },
        {
          "name": "extra1",
          "doc": "extra button pressed (4)"
        },
        {
          "name": "extra2",
          "doc": "extra button pressed (5)"
        }
      ],
      "doc": "A typed mouse button id",
      "ispublic": true
    },
    "lumen.types.SystemEventType": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.types.SystemEventType",
      "values": [
        {
          "name": "unknown",
          "doc": "An unknown system event"
        },
        {
          "name": "init",
          "doc": "An internal system init event"
        },
        {
          "name": "ready",
          "doc": "An internal system ready event"
        },
        {
          "name": "update",
          "doc": "An internal system update event"
        },
        {
          "name": "shutdown",
          "doc": "An system shutdown event"
        },
        {
          "name": "window",
          "doc": "An system window event"
        },
        {
          "name": "input",
          "doc": "An system input event"
        },
        {
          "name": "quit",
          "doc": "An system quit event. Initiated by user, can be cancelled/ignored"
        },
        {
          "name": "app_terminating",
          "doc": "An system terminating event, called by the OS (mobile specific)"
        },
        {
          "name": "app_lowmemory",
          "doc": "An system low memory event, clear memory if you can. Called by the OS (mobile specific)"
        },
        {
          "name": "app_willenterbackground",
          "doc": "An event for just before the app enters the background, called by the OS (mobile specific)"
        },
        {
          "name": "app_didenterbackground",
          "doc": "An event for when the app enters the background, called by the OS (mobile specific)"
        },
        {
          "name": "app_willenterforeground",
          "doc": "An event for just before the app enters the foreground, called by the OS (mobile specific)"
        },
        {
          "name": "app_didenterforeground",
          "doc": "An event for when the app enters the foreground, called by the OS (mobile specific)"
        }
      ],
      "doc": "A typed system event",
      "ispublic": true
    },
    "lumen.platform.native.input.sdl.KeyEventType": {
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.sdl.KeyEventType",
      "values": [
        {
          "name": "unknown",
          "doc": ""
        },
        {
          "name": "down",
          "doc": ""
        },
        {
          "name": "up",
          "doc": ""
        },
        {
          "name": "textedit",
          "doc": ""
        },
        {
          "name": "textinput",
          "doc": ""
        }
      ],
      "doc": "",
      "ispublic": true
    },
    "lumen.utils.compat.CompressionAlgorithm": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.utils.compat.CompressionAlgorithm",
      "values": [
        {
          "name": "DEFLATE",
          "doc": ""
        },
        {
          "name": "ZLIB",
          "doc": ""
        },
        {
          "name": "LZMA",
          "doc": ""
        },
        {
          "name": "GZIP",
          "doc": ""
        }
      ],
      "doc": "",
      "ispublic": true
    },
    "lumen.input.GamepadEventType": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.input.GamepadEventType",
      "values": [
        {
          "name": "unknown",
          "doc": "An unknown event"
        },
        {
          "name": "axis",
          "doc": "An axis change event"
        },
        {
          "name": "button",
          "doc": "A button event"
        },
        {
          "name": "device_added",
          "doc": "A device added event"
        },
        {
          "name": "device_removed",
          "doc": "A device removed event"
        },
        {
          "name": "device_remapped",
          "doc": "A device was remapped"
        }
      ],
      "doc": "A typed gamepad event type",
      "ispublic": true
    },
    "lumen.types.AudioFormatType": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.types.AudioFormatType",
      "values": [
        {
          "name": "unknown",
          "doc": ""
        },
        {
          "name": "ogg",
          "doc": ""
        },
        {
          "name": "wav",
          "doc": ""
        },
        {
          "name": "pcm",
          "doc": ""
        }
      ],
      "doc": "The type of audio format",
      "ispublic": true
    },
    "lumen.platform.native.input.sdl.MouseEventType": {
      "meta": {
        "meta": {
          "name": ":noCompletion",
          "value": ""
        }
      },
      "name": "lumen.platform.native.input.sdl.MouseEventType",
      "values": [
        {
          "name": "unknown",
          "doc": ""
        },
        {
          "name": "move",
          "doc": ""
        },
        {
          "name": "down",
          "doc": ""
        },
        {
          "name": "up",
          "doc": ""
        },
        {
          "name": "wheel",
          "doc": ""
        }
      ],
      "doc": "",
      "ispublic": true
    },
    "lumen.input.TextEventType": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.input.TextEventType",
      "values": [
        {
          "name": "unknown",
          "doc": "An unknown event"
        },
        {
          "name": "edit",
          "doc": "An edit text typing event"
        },
        {
          "name": "input",
          "doc": "An input text typing event"
        }
      ],
      "doc": "A typed text event type",
      "ispublic": true
    },
    "lumen.types.WindowEventType": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.types.WindowEventType",
      "values": [
        {
          "name": "unknown",
          "doc": "An unknown window event"
        },
        {
          "name": "window_created",
          "doc": "A window is created"
        },
        {
          "name": "window_shown",
          "doc": "A window is shown"
        },
        {
          "name": "window_hidden",
          "doc": "A window is hidden"
        },
        {
          "name": "window_exposed",
          "doc": "A window is exposed"
        },
        {
          "name": "window_moved",
          "doc": "A window is moved"
        },
        {
          "name": "window_resized",
          "doc": "A window is resized, by the user or code."
        },
        {
          "name": "window_size_changed",
          "doc": "A window is resized, by the OS or internals."
        },
        {
          "name": "window_minimized",
          "doc": "A window is minimized"
        },
        {
          "name": "window_maximized",
          "doc": "A window is maximized"
        },
        {
          "name": "window_restored",
          "doc": "A window is restored"
        },
        {
          "name": "window_enter",
          "doc": "A window is entered by a mouse"
        },
        {
          "name": "window_leave",
          "doc": "A window is left by a mouse"
        },
        {
          "name": "window_focus_gained",
          "doc": "A window has gained focus"
        },
        {
          "name": "window_focus_lost",
          "doc": "A window has lost focus"
        },
        {
          "name": "window_close",
          "doc": "A window is being closed"
        }
      ],
      "doc": "A typed window event",
      "ispublic": true
    },
    "lumen.input.TouchState": {
      "meta": {
        "meta": {
          "name": ":flatEnum",
          "value": ""
        }
      },
      "name": "lumen.input.TouchState",
      "values": [
        {
          "name": "unknown",
          "doc": "an unknown state"
        },
        {
          "name": "down",
          "doc": "touch is down"
        },
        {
          "name": "up",
          "doc": "touch is up"
        },
        {
          "name": "move",
          "doc": "touch is moving"
        }
      ],
      "doc": "The states a touch can be in",
      "ispublic": true
    }
  },
  "enumnames": [
    "lumen.input.PressedState",
    "lumen.input.MouseState",
    "lumen.input.MouseButton",
    "lumen.input.TextEventType",
    "lumen.input.GamepadEventType",
    "lumen.input.TouchState",
    "lumen.platform.native.input.sdl.KeyEventType",
    "lumen.platform.native.input.sdl.MouseEventType",
    "lumen.platform.native.input.sdl.ControllerEventType",
    "lumen.types.AudioFormatType",
    "lumen.types.SystemEventType",
    "lumen.types.WindowEventType",
    "lumen.types.InputEventType",
    "lumen.utils.compat.CompressionAlgorithm"
  ],
  "typedefnames": [
    "lumen.Core",
    "lumen.assets.AssetSystem",
    "lumen.audio.AudioSystem",
    "lumen.audio.Sound",
    "lumen.audio.SoundStream",
    "lumen.audio.openal.AL",
    "lumen.audio.openal.ALC",
    "lumen.audio.openal.Device",
    "lumen.audio.openal.Context",
    "lumen.input.Key",
    "lumen.input.Scan",
    "lumen.input.ModState",
    "lumen.input.MouseEvent",
    "lumen.input.KeyEvent",
    "lumen.input.TextEvent",
    "lumen.input.GamepadEvent",
    "lumen.input.TouchEvent",
    "lumen.input.InputSystem",
    "lumen.platform.native.render.gl.GLActiveInfo",
    "lumen.platform.native.render.gl.GLContextAttributes",
    "lumen.platform.native.render.gl.GLUniformLocation",
    "lumen.platform.native.render.gl.ShaderPrecisionFormat",
    "lumen.platform.native.utils.ArrayBuffer",
    "lumen.render.gl.GL",
    "lumen.render.gl.GLActiveInfo",
    "lumen.render.gl.GLBuffer",
    "lumen.render.gl.GLContextAttributes",
    "lumen.render.gl.GLFramebuffer",
    "lumen.render.gl.GLProgram",
    "lumen.render.gl.GLRenderbuffer",
    "lumen.render.gl.GLShader",
    "lumen.render.gl.GLTexture",
    "lumen.render.gl.GLUniformLocation",
    "lumen.types.AssetInfo",
    "lumen.types.AssetImageOptions",
    "lumen.types.AssetAudioOptions",
    "lumen.types.LumenConfig",
    "lumen.types.ImageInfo",
    "lumen.types.AudioInfo",
    "lumen.types.AudioDataBlob",
    "lumen.types.WindowConfig",
    "lumen.types.SystemEvent",
    "lumen.types.WindowEvent",
    "lumen.types.InputEvent",
    "lumen.utils._AbstractClass.StringMap",
    "lumen.utils.ArrayBuffer",
    "lumen.utils.ArrayBufferView",
    "lumen.utils.ByteArray",
    "lumen.utils.Float32Array",
    "lumen.utils.Int32Array",
    "lumen.utils.UInt8Array",
    "lumen.window.WindowPosition",
    "lumen.window.WindowSize",
    "lumen.window.WindowSystem",
    "lumen.window.DisplayMode",
    "lumen.window.DisplayBounds"
  ]
}